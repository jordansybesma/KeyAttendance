{"version":3,"sources":["images/blank_profile_pic.jpg","components/Helpers.js","components/Layout.js","views/Login.js","components/ActivityCheckbox.js","components/ActivityCheckboxes.js","components/AttendanceOptions.js","components/AddStudentModal.js","components/Autocomplete.js","views/Attendance.js","components/Heatmap.js","views/Students.js","components/BarChart.js","components/AttendanceByProgramReport.js","components/NewStudentsReport.js","components/MilestoneReport.js","views/Reports.js","components/AddUserModal.js","components/EditUserModal.js","components/EditUserButton.js","components/UserHistoryButton.js","components/UserHistory.js","components/Users.js","components/AddRoleModal.js","components/EditRoleModal.js","components/EditRoleButton.js","components/Roles.js","components/AssignStudentKeyModal.js","components/AssignStudentKeyButton.js","components/FileUploader.js","components/StudentKeys.js","components/ShiftDownButton.js","components/ShiftUpButton.js","components/ShowActivityCheckbox.js","components/AddActivityModal.js","components/Activities.js","components/AddStudentFieldModal.js","components/StudentFieldCheckbox.js","components/EditStudentFields.js","components/AdminTabs.js","views/Admin.js","views/NotFound.js","components/Router.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","history","createBrowserHistory","domain","protocol","httpPost","url","body","arguments","length","undefined","token","window","localStorage","getItem","fetch","method","headers","Content-Type","Authorization","JSON","stringify","then","response","status","logout","push","error","json","httpPostFile","form","FormData","append","photo_value","student_id","info_id","httpPatch","httpPatchFile","id","blob","httpGet","httpDelete","compareActivities","a","b","ordering","removeItem","downloadAttendanceCSV","_callee","startDate","endDate","attendanceData","studentData","activityData","activities","i","entries","sheet","columns","keys","row","j","activity","papa","csvString","element","_args","regenerator_default","wrap","_context","prev","next","concat","sent","sort","abrupt","is_showing","name","activity_id","type","date","str_value","num_value","Object","first_name","last_name","t0","require","unparse","fields","data","document","createElement","setAttribute","encodeURIComponent","style","display","appendChild","click","removeChild","stop","this","downloadReportsCSV","columnHeaders","title","checkCredentials","Component","permissions","react_default","Redirect","to","partitions","split","parse","atob","decodeToken","exp","Date","now","getPermissions","getEarlierDate","daysAgo","console","earlierDate","setDate","getDate","getPrevSunday","offset","getDay","getNextSaturday","dateToString","getFullYear","toString","getMonth","Layout","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleItemClick","state","activeItem","show","children","nav","indexOf","NavItem","key","onClick","navItems","Nav","Navbar","Header","Brand","Toggle","Collapse","pullRight","withRouter","Login","username","password","firstLogin","onUsernameChange","bind","assertThisInitialized","onPasswordChange","submit","setState","e","target","value","_this2","preventDefault","result","setItem","_this3","centerStyle","textAlign","className","Well","onSubmit","FormGroup","ControlLabel","FormControl","placeholder","onChange","Button","block","bsStyle","Alert","React","ActivityCheckbox","isChecked","activityType","toggleCheckboxChange","_this$props","toggleCheckbox","label","handleChange","prevstate","newState","objectSpread","checked","input","_this$state","checkbox","disabled","ActivityCheckboxes","studentID","numChecked","self","activityID","attendanceItemID","errorCode","errorMsg","today","time","getHours","getMinutes","getSeconds","createCheckboxes","boxes","components_ActivityCheckbox","Label","AttendanceOptions","deleteRow","alert","ids","CustomFunction","AddStudentModal","handleInfoChange","studentInfo","firstName","lastName","studentFields","cancel","onFirstNameChange","onLastNameChange","fieldsList","index","field","log","infoBody","createStudentInfo","infoResult","info","fieldName","Modal","Title","Body","controlId","validationState","validateInput","Feedback","createStudentInfoFields","Footer","Autocomplete","suggestions","userInput","currentTarget","filteredSuggestions","filter","suggestion","toLowerCase","startsWith","lastName1","lastName2","activeSuggestion","showSuggestions","innerText","handler","_targetInst","handleSubmit","onKeyDown","keyCode","selectedId","fullName","scrollUpHandler","scrollDownHandler","dropdown","getElementsByClassName","itemHeight","getBoundingClientRect","height","scrollPos","scrollTop","dropdownHeight","halfway","Math","round","suggestionsListComponent","_this$state2","map","react","Form","inline","autoComplete","hasUsername","defaultProps","Attendance","buildingCSV","students","attendanceItems","suggestionsArray","attendance","showStudentModal","prevDate","canCreateStudent","mobile","downloadCSV","addStudent","removeAttendanceRow","openModal","closeModal","updateDate","setDateToToday","refresh","getCurrentDate","innerWidth","fetchAndBuild","month","day","item","makeSuggestionsArray","buildSheet","itemID","parseInt","activityList","lastHolder1","lastHolder2","tempArray","array","object","includes","splice","student","buttonToolbar","rows","localeCompare","accessor","priorityLevel","position","minWidth","sortable","CustomComponent","ButtonToolbar","float","components_AddStudentModal","paddingRight","paddingLeft","src_components_Autocomplete","build_default","column","direction","showPagination","callbacks","options","Heatmap","yArrayStudents","err","heatMapType","dataLength","yArray","x","reverse","toCompare","min","max","maxHeatMapColor","minLegendLabel","calculateMinDataPoint","maxLegendLabel","calculateMaxDataPoint","calculateHeatmapColor","setYArrayRange","margin","es","width","scaleWidth","scaleHeight","top","left","xType","yType","axisType","yDomain","reverseYAxis","orientation","colorRange","stroke","strokeWidth","rectStyle","rx","ry","continuous_color_legend_default","startTitle","midTitle","endTitle","startColor","endColor","Students","renderDisplayInfo","profileInfo","colInfo","innerHtml","ListGroupItem","renderEditInfo","entry","defaultValue","evt","getPic","uploadedPic","src","blankPic","mode","canViewStudentInfo","canViewHeatmap","canDeleteStudent","heatMapJson","edit","studentsJson","studentColumnJson","parseCols","profileInfoPrelim","previousState","currentProps","picUpdated","cols","sortCols","col","studentInfoId","updated","patchPost","int_value","bool_value","date_value","time_value","studentId","preState","getStudentProfile","studentProfileJson","profileData","studentProfileEx","photo_url","objectUrl","profileDataPrelim","studentInfoJson","addTypes","returnedState","parseStudentInfo","startDateString","endDateString","_context2","t1","test","infoId","returnednewState","entryFound","entryIndex","changedField","profileDataUpdated","newValue","posted","updateStudentInfo","d1","d2","time1","time2","currEntryDate","replace","dateToCompare","currIdx","firstEntry","daily_visits","compareTime","sameDay","dateEntryZeroEngagements","toISOString","slice","dayEntry","processedData","strDays","y","floor","color","files","heatmap","components_Heatmap","formatData","parsedInfo","ListGroup","variant","deleteButton","confirm","delete","accept","readImage","handleNameChange","BarChart","obj","labelAnchorX","labelAnchorY","AttendanceByProgramReport","activityName","activityNumber","handleActivityDropdownSelect","updateEndDate","updateStartDate","items","itemIndex","studentIndex","studentName","studentKey","student_key","componentClass","NewStudentsReport","newStudents","MilestoneReport","milestone","updateMilestone","milestoneStudents","Reports","startDateStringWeek","endDateStringWeek","startDateStringYear","endDateStringYear","byHourJson","byHourJsonForDownload","byDayJson","byDayJsonForDownload","byDayInPastWeekJson","byDayInPastWeekForDownload","byDayHeatMap","dateOne","dateTwo","tab","downloadHourlyCSV","downloadWeeklyCSV","downloadYearlyCSV","updateDateOne","updateDateTwo","handleTabSelect","startDateWeek","startDateYear","endDateYear","formatDayData","formatHourData","entryAsList","startPastWeek","endPastWeek","values","currDateObj","annualHeatMapEntry","dayOfWeekConverted","processedDataAnnual","currHour","hourArray","hourToCompareIdx","hourToCompare","count","dayOfWeek","hourEntry","Tabs","activeKey","onSelect","Tab","eventKey","components_BarChart","components_AttendanceByProgramReport","components_NewStudentsReport","components_MilestoneReport","AddUserModal","handleActiveCheckbox","is_active","confirmPassword","backendError","radioOptions","selectedOption","createRadioOptions","role_names","role_ids","groups","option","toggleRadioOptions","EditUserModal","handlePasswordButton","editPassword","role_name","onDelete","passwordBlock","EditUserButton","showUserModal","closeModalDelete","user","components_EditUserModal","UserHistoryButton","handleClick","UserHistory","closeHistoryView","datetime","action","Users","users","showingUsers","showingAllUsers","selectedUserHistory","selectedUsername","historyView","updateRow","getFormattedTime","showAllUsers","getUserHistory","roles","refreshRoles","toggleRefreshRoles","userId","find","last1","last2","newUser","last_login","lastNames","boolean","dateString","splitDateTime","splitTime","hours","ampm","group_names","join","getUserRoleNames","lastLogin","isActive","checkmark","tableCallbacks","components_UserHistory","components_AddUserModal","AddRoleModal","permission_ids","checkboxes","perm_ids","perm_names","perm_name","displayName","EditRoleModal","EditRoleButton","showModal","role","components_EditRoleModal","Roles","permissions_list","deleteRole","components_AddRoleModal","AssignStudentKeyModal","oldID","searchArray","match","onCancel","setMatch","buildSuggestionsArray","setMatchFromSearch","citySpanStudents","onClose","match_key","paddingTop","match_name","AssignStudentKeyButton","FileUploader","event","file","extension","upload","StudentKeys","unmatchedStudents","focusedStudent","handleRowClick","handleSearch","handleCSVUpload","processCSV","csv","tmpfail","fastMode","complete","header","output","components_AssignStudentKeyModal","components_FileUploader","ShiftDownButton","handleButtonClick","ShiftUpButton","ShowActivityCheckbox","AddActivityModal","handleCheckbox","inUse","lastOrdering","Activities","patchActivityOrder","createNewActivity","swapOrder","updateCheckbox","getDataTypeName","id1","id2","activity_id1","activity_id2","activity1","activity2","type_name","up","down","components_AddActivityModal","AddStudentFieldModal","handleInUseCheckbox","handleQuickAddCheckbox","quickAdd","quick_add","StudentFieldCheckbox","EditStudentFields","createNewField","components_AddStudentFieldModal","AdminTabs","context","handleSelect","tabs","counter","components_Users","components_Roles","components_Activities","components_EditStudentFields","components_StudentKeys","Admin","components_AdminTabs","NotFound","Jumbotron","Link","Router","components_Layout","location","pathname","Switch","Route","exact","path","component","render","App","components_Router","Boolean","hostname","ReactDOM","BrowserRouter","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6cb6c19b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/blank_profile_pic.9a344a6c.jpg\";","//Helper functions for date selection in data visualizations\r\n\r\n\r\nimport React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport createBrowserHistory from 'history/createBrowserHistory';\r\n\r\n// Store helper functions that we'll probably re-use here!\r\n\r\nconst history = createBrowserHistory();\r\n\r\n// For local development\r\n// const domain = '127.0.0.1:8000'\r\n// const protocol = 'http'\r\n\r\n// For production server\r\nconst domain = 'keyattendance.com'\r\nconst protocol = 'https'\r\n\r\n\r\nfunction httpPost(url, body={}) {\r\n\tconst token = window.localStorage.getItem(\"key_credentials\");\r\n\r\n\t// if we don't have a token, we shouldn't be trying to call this function.\r\n\tif (token === null) {\r\n\t\thistory.push(`/`)\r\n\t\treturn\r\n\t}\r\n\r\n\treturn fetch(url, {\r\n\t\tmethod: \"POST\",\r\n\t\theaders: {'Content-Type':'application/json', 'Authorization': 'JWT ' + token},\r\n\t\tbody: JSON.stringify(body)\r\n\t}).then(response => {\r\n\t\tif (response.status >= 400) {\r\n\t\t\t// Logout if we got a token validation error\r\n\t\t\tif (response.status === 403) {\r\n\t\t\t\tlogout()\r\n\t\t\t\thistory.push(`/`)\r\n\t\t\t}\r\n\t\t\treturn {'error' : response.status, 'response' : response.json()}\r\n\t\t} else {\r\n\t\t\treturn response.json()\r\n\t\t}\r\n\t}); \r\n}\r\n\r\nfunction httpPostFile(url, body={}) {\r\n    const token = window.localStorage.getItem(\"key_credentials\");\r\n\r\n    // if we don't have a token, we shouldn't be trying to call this function.\r\n    if (token === null) {\r\n        history.push(`/`)\r\n        return\r\n    }\r\n\r\n    var form = new FormData()\r\n    form.append('file', body.photo_value);\r\n    form.append('student_id', body.student_id);\r\n    form.append('info_id', body.info_id);\r\n\r\n    return fetch(url, {\r\n        method: \"POST\",\r\n        headers: {'Authorization': 'JWT ' + token},\r\n        body: form\r\n    }).then(response => {\r\n        if (response.status >= 400) {\r\n            // Logout if we got a token validation error\r\n            if (response.status === 403) {\r\n                logout()\r\n                history.push(`/`)\r\n            }\r\n            return {'error' : response.status, 'response' : response.json()}\r\n        } else {\r\n            return response.json()\r\n        }\r\n    });\r\n}\r\n\r\nfunction httpPatch(url, body={}) {\r\n\tconst token = window.localStorage.getItem(\"key_credentials\");\r\n\r\n\t// if we don't have a token, we shouldn't be trying to call this function.\r\n\tif (token === null) {\r\n\t\thistory.push(`/`)\r\n\t\treturn\r\n\t}\r\n\r\n\treturn fetch(url, {\r\n\t\tmethod: \"PATCH\",\r\n\t\theaders: {'Content-Type':'application/json', 'Authorization': 'JWT ' + token},\r\n\t\tbody: JSON.stringify(body)\r\n\t}).then(response => {\r\n\t\tif (response.status >= 400) {\r\n\t\t\t// Logout if we got a token validation error\r\n\t\t\tif (response.status === 403) {\r\n\t\t\t\tlogout()\r\n\t\t\t\thistory.push(`/`)\r\n\t\t\t}\r\n\t\t\treturn {'error' : response.status, 'response' : response.json()}\r\n\t\t} else if (response) {\r\n\t\t\treturn response.json()\r\n\t\t} else {\r\n\t\t\treturn // we got nothing back\r\n\t\t}\r\n\t}); \r\n}\r\n\r\nfunction httpPatchFile(url, body={}) {\r\n\tconst token = window.localStorage.getItem(\"key_credentials\");\r\n\r\n\t// if we don't have a token, we shouldn't be trying to call this function.\r\n\tif (token === null) {\r\n\t\t\thistory.push(`/`)\r\n\t\t\treturn\r\n\t}\r\n\r\n\tvar form = new FormData()\r\n    form.append('file', body.photo_value);\r\n    form.append('student_id', body.student_id);\r\n    form.append('info_id', body.info_id);\r\n    form.append('id', body.id);\r\n\r\n\treturn fetch(url, {\r\n\t\t\tmethod: \"PATCH\",\r\n\t\t\theaders: {'Authorization': 'JWT ' + token},\r\n\t\t\tbody: form\r\n\t}).then(response => {\r\n\t\t\tif (response.status >= 400) {\r\n\t\t\t\t\t// Logout if we got a token validation error\r\n\t\t\t\t\tif (response.status === 403) {\r\n\t\t\t\t\t\t\tlogout()\r\n\t\t\t\t\t\t\thistory.push(`/`)\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn {'error' : response.status, 'response' : response.json()}\r\n\t\t\t} else {\r\n\t\t\t\t\treturn response.blob()\r\n\t\t\t}\r\n\t});\r\n}\r\n\r\nfunction httpGet(url) {\r\n\tconst token = window.localStorage.getItem(\"key_credentials\");\r\n\t// if we don't have a token, we shouldn't be trying to call this function.\r\n\tif (token === null) {\r\n\t\thistory.push(`/`)\r\n\t\treturn\r\n\t}\r\n\r\n\treturn fetch(url, {\r\n\t\tmethod: \"GET\",\r\n\t\theaders: {'Content-Type':'application/json', 'Authorization': 'JWT ' + token},\r\n\t}).then(response => {\r\n\t\tif (response.status >= 400) {\r\n\t\t\t// Logout if we got a token validation error\r\n\t\t\tif (response.status === 403) {\r\n\t\t\t\tlogout()\r\n\t\t\t\thistory.push(`/`)\r\n\t\t\t}\r\n\t\t\treturn {'error' : response.status, 'response' : response.json()}\r\n\t\t} else {\r\n\t\t\treturn response.json()\r\n\t\t}\r\n\t}); \r\n}\r\n\r\nfunction httpGetFile(url) {\r\n\tconst token = window.localStorage.getItem(\"key_credentials\");\r\n\t// if we don't have a token, we shouldn't be trying to call this function.\r\n\tif (token === null) {\r\n\t\thistory.push(`/`)\r\n\t\treturn\r\n\t}\r\n\r\n\treturn fetch(url, {\r\n\t\tmethod: \"GET\",\r\n\t\theaders: {'Content-Type':'application/json', 'Authorization': 'JWT ' + token},\r\n\t}).then(response => {\r\n\t\tif (response.status >= 400) {\r\n\t\t\t// Logout if we got a token validation error\r\n\t\t\tif (response.status === 403) {\r\n\t\t\t\tlogout()\r\n\t\t\t\thistory.push(`/`)\r\n\t\t\t}\r\n\t\t\treturn {'error' : response.status, 'response' : response.json()}\r\n\t\t} else {\r\n\t\t\treturn response.blob()\r\n\t\t}\r\n\t}); \r\n}\r\n\r\nfunction httpDelete(url, body={}) {\r\n\tconst token = window.localStorage.getItem(\"key_credentials\");\r\n\r\n\t// if we don't have a token, we shouldn't be trying to call this function.\r\n\tif (token === null) {\r\n\t\thistory.push(`/`)\r\n\t\treturn\r\n\t}\r\n  \r\n\treturn fetch(url, {\r\n\t\tmethod: \"DELETE\",\r\n\t\theaders: {'Content-Type':'application/json', 'Authorization': 'JWT ' + token},\r\n\t\tbody: JSON.stringify(body)\r\n\t}).then(response => {\r\n\t\tif (response.status >= 400) {\r\n\t\t\t// Logout if we got a token validation error\r\n\t\t\tif (response.status === 403) {\r\n\t\t\t\tlogout()\r\n\t\t\t\thistory.push(`/`)\r\n\t\t\t}\r\n\t\t\treturn {'error' : response.status, 'response' : response.json()}\r\n\t\t} else {\r\n\t\t\treturn {};\r\n\t\t}\r\n\t}); \r\n}\r\n\r\nfunction compareActivities(a,b) {\r\n\tif (a.ordering < b.ordering)\r\n\t  return -1;\r\n\tif (a.ordering > b.ordering)\r\n\t  return 1;\r\n\treturn 0;\r\n}\r\n\r\nfunction decodeToken(token) {\r\n\tlet partitions = token.split('.');\r\n    return JSON.parse(atob(partitions[1]));\r\n}\r\n\r\nfunction logout() {\r\n\twindow.localStorage.removeItem(\"key_credentials\");\r\n\twindow.localStorage.removeItem(\"permissions\");\r\n}\r\n\r\nasync function downloadAttendanceCSV(startDate, endDate=null) {\r\n\t// Get data\r\n\tconst url = (startDate === endDate || endDate === null) ? `${protocol}://${domain}/api/attendance/?day=${startDate}` : `${protocol}://${domain}/api/attendance/?startdate=${startDate}&enddate=${endDate}`;\r\n\tconst attendanceData = await httpGet(url);\r\n\tconst studentData = await httpGet(`${protocol}://${domain}/api/students/`);\r\n\tconst activityData = await httpGet(`${protocol}://${domain}/api/activities/`);\r\n\tactivityData.sort(compareActivities) // Make sure that our columns are in a consistent order\r\n\t// Make sure we got the data we came for.\r\n\tif (attendanceData.length === 0 || activityData.length === 0) {\r\n\t\treturn\r\n\t}\r\n\t// Build activity lookup table\r\n\tvar activities = {}\r\n\tfor (var i = 0; i < activityData.length; i++) {\r\n\t\tif (activityData[i].is_showing) {\r\n\t\t\tactivities[activityData[i].name] = {'id': activityData[i].activity_id, 'ordering': activityData[i].ordering, 'type': activityData[i].type}\r\n\t\t}\r\n\t}\r\n\r\n\t// Combine attendance items. Need to sort by date and student id.\r\n\tvar entries = {}\r\n\tfor (var i = 0; i < attendanceData.length; i++) {\r\n\t\tif (entries[`${attendanceData[i].student_id}${attendanceData[i].date}`] == null) {\r\n\t\t\tentries[`${attendanceData[i].student_id}${attendanceData[i].date}`] = {'date':attendanceData[i].date, 'id': attendanceData[i].student_id}\r\n\t\t}\r\n\t\tif (attendanceData[i].str_value !== null) {\r\n\t\t\tentries[`${attendanceData[i].student_id}${attendanceData[i].date}`][attendanceData[i].activity_id] = attendanceData[i].str_value;\r\n\t\t} else if (attendanceData[i].num_value !== null) {\r\n\t\t\tentries[`${attendanceData[i].student_id}${attendanceData[i].date}`][attendanceData[i].activity_id] = attendanceData[i].num_value;\r\n\t\t} else {\r\n\t\t\tentries[`${attendanceData[i].student_id}${attendanceData[i].date}`][attendanceData[i].activity_id] = 'Y';\r\n\t\t}\r\n\t}\r\n\r\n\t// Build spreadsheet\r\n\tvar sheet = []\r\n\tvar columns = ['Date','First', 'Last', 'Student Key']\r\n\tfor (var i = 0; i < activityData.length; i++) {\r\n\t\tif (activityData[i].is_showing) {\r\n\t\t\tcolumns.push(activityData[i].name)\r\n\t\t}\r\n\t}\r\n\tconst keys = Object.keys(entries)\r\n\tfor (var i = 0; i < keys.length ; i++) {\r\n\t\tvar row = []\r\n\t\t// match student data to current id\r\n\t\tfor (var j = 0; j < studentData.length; j++) { // unfortunately, student data isn't in any particular order. O(n) it is!\r\n\t\t\tif (studentData[j].id === entries[keys[i]].id) {\r\n\t\t\t\trow[1] = studentData[j].first_name;\r\n\t\t\t\trow[2] = studentData[j].last_name;\r\n\t\t\t\trow[3] = (studentData[j][\"student_key\"] !== null ? studentData[j][\"student_key\"] : 'N/A')\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t} \r\n\t\tfor (var j = 0; j < columns.length; j++) {\r\n\t\t\tswitch (columns[j]) {\r\n\t\t\t\tcase 'Date':\r\n\t\t\t\t\trow[j] = entries[keys[i]].date\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'First':\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Last':\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'Student Key':\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\t// If this row has a value for this column, put it in the table. Else plop an 'N' in this column.\r\n\t\t\t\t\tconst activity = activities[columns[j]];\r\n\t\t\t\t\tif (entries[keys[i]][activity.id] === undefined) {\r\n\t\t\t\t\t\tif (activity.type === 'boolean') {\r\n\t\t\t\t\t\t\trow[j] = 'N';\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\trow[j] = 'N/A';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\trow[j] = entries[keys[i]][activity.id];\r\n\t\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tsheet.push(row);\r\n\t}\r\n\r\n\t// Put data in a CSV\r\n\tvar papa = require('papaparse') // a strangely named but fairly effective CSV library\r\n\tvar csvString = papa.unparse({\r\n\t\tfields: columns,\r\n\t\tdata: sheet\r\n\t});\r\n\r\n\t// Download - it's a lil janky but it works. Thanks, stackoverflow!\r\n\tvar element = document.createElement('a');\r\n\telement.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(csvString));\r\n\telement.setAttribute('download', `Attendance_${(startDate === endDate || endDate === null) ? startDate : `${startDate}_${endDate}`}.csv`);\r\n\telement.style.display = 'none';\r\n\tdocument.body.appendChild(element);\r\n\telement.click();\r\n\tdocument.body.removeChild(element);\r\n}\r\n\r\nfunction downloadReportsCSV(json, columnHeaders, title) {\r\n\t// Put data in a CSV\r\n\tvar papa = require('papaparse') // a strangely named but fairly effective CSV library\r\n\tvar csvString = papa.unparse({\r\n\t\tfields: columnHeaders,\r\n\t\tdata: json\r\n\t});\r\n\r\n\t// Download - it's a lil janky but it works. Thanks, stackoverflow!\r\n\tvar element = document.createElement('a');\r\n\telement.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(csvString));\r\n\telement.setAttribute('download', `${title}.csv`);\r\n\telement.style.display = 'none';\r\n\tdocument.body.appendChild(element);\r\n\telement.click();\r\n\tdocument.body.removeChild(element);\r\n}\r\n\r\n// Makes sure that we have a valid token, else redirects to login screen\r\nconst checkCredentials = (Component) => {\r\n\tconst token = window.localStorage.getItem(\"key_credentials\");\r\n\tconst permissions = window.localStorage.getItem('permissions')\r\n\tif (token === null || permissions === null) {\r\n\t\treturn <Redirect to='/'/>;\r\n\t}\r\n\tlet tokenData = decodeToken(token);\r\n\tif (tokenData.exp < Date.now() / 1000) { \r\n\t\tlogout();\r\n\t\treturn <Redirect to='/'/>;\r\n\t} else {\r\n\t\treturn <Component/>;\r\n\t}\r\n}\r\n\r\nfunction getPermissions() {\r\n\tlet permissions = window.localStorage.getItem('permissions')\r\n\tif (permissions !== null && permissions.length > 0) {\r\n\t\treturn permissions.split(',');\r\n\t}\r\n\treturn null;\r\n}\r\n\r\n// Only allows a component to render if the proper role is stored\r\nconst withRole = (Component, role) => {\r\n\tconst storedRole = window.localStorage.getItem(\"role\");\r\n\tif (storedRole !== role) {\r\n\t\treturn null\r\n\t} else {\r\n\t\treturn <Component/>;\r\n\t}\r\n}\r\n\r\n\r\n// Returns date obj for the date that is \"days ago\" number of days ago\r\n//from today's date\r\n//. E.g. if daysAgo equals 3 the date string will be the date \r\n// three days ago. If daysAgo = 0 the string is today's date.\r\nfunction getEarlierDate(daysAgo) {\r\n    if (daysAgo < 0) {\r\n      console.error(\"Expected daysAgo to be a value >= 0 but recieved \", daysAgo);\r\n      daysAgo = -daysAgo;\r\n    }\r\n    var earlierDate = new Date();\r\n    earlierDate.setDate(earlierDate.getDate() - daysAgo);\r\n    return earlierDate;\r\n}\r\n\r\n//Returns date obj for previous sunday from given date\r\n//(or the date itself if the date falls on a sunday)\r\nfunction getPrevSunday(date) {\r\n    var offset = date.getDay();\r\n    date.setDate(date.getDate() - offset);\r\n    return date;\r\n}\r\n\r\n//Returns date obj for following saturday from given date\r\n//(or the date itself if the date falls on a saturday)\r\nfunction getNextSaturday(date) {\r\n    var offset = 6 - date.getDay();\r\n    date.setDate(date.getDate() + offset);\r\n    return date;\r\n}\r\n\r\n// Creates a date string of the form yyyy-mm-dd for the date\r\nfunction dateToString(date){\r\n    var dateString = date.getFullYear().toString() + \"-\" + (date.getMonth()+1).toString() + \"-\" + date.getDate().toString();\r\n    return dateString;\r\n}\r\n\r\nexport { getPermissions, protocol, domain, downloadReportsCSV, downloadAttendanceCSV, compareActivities, httpPost, httpPostFile, httpPatch, httpPatchFile, httpGet, httpGetFile, httpDelete, checkCredentials, history, withRole, getEarlierDate, getPrevSunday, getNextSaturday, dateToString }","import React, { Component } from 'react';\r\nimport { Navbar, Nav, NavItem } from 'react-bootstrap';\r\nimport PropTypes from 'prop-types';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { getPermissions } from './Helpers';\r\n\r\nclass Layout extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state ={\r\n        activeItem: 'home'\r\n      }\r\n  }\r\n\r\n  handleItemClick = (name) => () => {\r\n    this.props.history.push(`/${name}`);\r\n  }\r\n\r\n  logout = () => () => {\r\n    window.localStorage.removeItem(\"key_credentials\");\r\n    window.localStorage.removeItem(\"permissions\")\r\n    this.props.history.push(`/`)\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.show) { return this.props.children }\r\n    const permissions = getPermissions();\r\n    let nav = [];\r\n    if (permissions.indexOf('view_attendanceitems') >= 0) {\r\n      nav.push(<NavItem key={0} onClick={this.handleItemClick('attendance')}>Attendance</NavItem>)\r\n    }\r\n    if (permissions.indexOf('view_students') >= 0) {\r\n      nav.push(<NavItem key={1} onClick={this.handleItemClick('students')}>Students</NavItem>)\r\n    }\r\n    if (permissions.indexOf('view_group') >= 0 || permissions.indexOf('view_user') >= 0 \r\n      || permissions.indexOf('change_activity') >= 0 || permissions.indexOf('add_activity') >= 0\r\n      || permissions.indexOf('change_studentcolumn') >= 0 || permissions.indexOf('add_studentcolumn') >= 0) {\r\n      nav.push(<NavItem key={2} onClick={this.handleItemClick('admin')}>Admin</NavItem>)\r\n    }\r\n    if (permissions.indexOf('view_reports') >= 0) {\r\n      nav.push(<NavItem key={3} onClick={this.handleItemClick('reports')}>Reports</NavItem>)\r\n    }\r\n    const navItems = <Nav>{nav}</Nav>\r\n    return (\r\n      <div>\r\n        <Navbar>\r\n            <Navbar.Header>\r\n                <Navbar.Brand onClick={this.handleItemClick('attendance')}>\r\n                    Key\r\n                </Navbar.Brand>\r\n                <Navbar.Toggle />\r\n            </Navbar.Header>\r\n            <Navbar.Collapse>\r\n              {navItems}\r\n              <Nav pullRight>\r\n                <NavItem onClick={this.logout()}>Logout</NavItem>\r\n              </Nav>\r\n            </Navbar.Collapse>\r\n        </Navbar>\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLayout.propTypes = {\r\n  history: PropTypes.shape({\r\n      push: PropTypes.func.isRequired,\r\n  }),\r\n};\r\n\r\nexport default withRouter(Layout);\r\n","import React from 'react';\r\nimport { Alert, Button, ControlLabel, FormControl, FormGroup, Well } from 'react-bootstrap';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { domain, protocol } from '../components/Helpers';\r\n\r\nclass Login extends React.Component {\r\n\r\n    constructor(props) {\r\n\t\tsuper(props)\r\n\t\t\r\n        this.state = {\r\n\t\t\tusername: \"\",\r\n            password:\"\",\r\n            error: false,\r\n            firstLogin: true\r\n\t\t}\r\n\t\t\r\n\t\tthis.onUsernameChange = this.onUsernameChange.bind(this);\r\n        this.onPasswordChange = this.onPasswordChange.bind(this);\r\n        this.submit = this.submit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.getItem('loggedIn') != null) {\r\n            this.setState({firstLogin: false});\r\n        }\r\n    }\r\n\r\n    onUsernameChange(e) {\r\n\t\tthis.setState({username: e.target.value})\r\n\t}\r\n\r\n\tonPasswordChange(e) {\r\n\t\tthis.setState({password: e.target.value})\r\n    }\r\n\r\n    submit(e) {\r\n        e.preventDefault();\r\n        // Submit username and password to backend\r\n        fetch(`${protocol}://${domain}/api-token-auth/`, {\r\n            method: \"POST\", \r\n            headers:{'Content-Type':'application/json'}, \r\n            body: JSON.stringify({username: this.state.username, password: this.state.password})\r\n        }).then(response => {\r\n            if (response.status >= 400) {\r\n                // If we get a negative response, display some sort of error and wipe the fields.\r\n                this.setState({error: true, username: \"\", password: \"\"});\r\n            } else {\r\n                response.json().then(result => {\r\n                    // Store token in browser\r\n                    window.localStorage.setItem(\"key_credentials\", result.token);\r\n                    // Store permissions in browser\r\n                    window.localStorage.setItem(\"permissions\", result.permissions);\r\n                    // Flag that we've logged in before\r\n                    window.localStorage.setItem(\"loggedIn\", 'true');\r\n                    this.props.history.push(`/attendance`);\r\n                })\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const centerStyle={'textAlign':'center'}\r\n        const token = window.localStorage.getItem(\"key_credentials\");\r\n        if (token !== null) {\r\n            return (<Redirect to='/attendance'/>);\r\n        } else {\r\n            return (\r\n                <div className='center'>\r\n                    <div className='login-container'>\r\n                        <Well>\r\n                            <h2 style={centerStyle}>Key Attendance</h2>\r\n                                <h4 style={centerStyle}>Sign In</h4>\r\n                                    <form onSubmit={e => this.submit(e)}>\r\n                                        <FormGroup>\r\n                                            <ControlLabel>Username</ControlLabel>\r\n                                            <FormControl\r\n                                                type=\"text\"\r\n                                                value={this.state.username}\r\n                                                placeholder=\"Username\"\r\n                                                onChange={this.onUsernameChange}\r\n                                            />\r\n                                            <br/>\r\n                                            <ControlLabel>Password</ControlLabel>\r\n                                            <FormControl\r\n                                                type=\"password\"\r\n                                                value={this.state.password}\r\n                                                placeholder='Password'\r\n                                                 onChange={this.onPasswordChange}\r\n                                             />\r\n                                        </FormGroup>\r\n                                        <Button block type=\"submit\" bsStyle=\"primary\">Continue</Button>\r\n                                        <br/>\r\n                                        {this.state.error && <Alert bsStyle='danger'>Invalid username or password. Please try again.</Alert>}\r\n                                        {!this.state.firstLogin && <Alert bsStyle='info'>You have been logged out.</Alert>}\r\n                                    </form>\r\n                                </Well>\r\n                            </div>\r\n                        </div> \r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass ActivityCheckbox extends Component {\r\n    state = {\r\n        isChecked: false,\r\n        value: '',\r\n        activityType: ''\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.setState({ isChecked: this.props.checked, value: this.props.value, activityType: this.props.activityType});\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.checked !== this.state.isChecked) {\r\n            this.setState({ isChecked: this.props.checked, value: this.props.value, activityType: this.props.activityType });\r\n        }\r\n    }\r\n\r\n    // Handles checked/unchecked state of checkbox\r\n    toggleCheckboxChange = () => {\r\n        const { toggleCheckbox, label } = this.props;\r\n        toggleCheckbox(this.state.isChecked, label, this.state.value, this.state.activityType)\r\n    };\r\n\r\n    handleChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState(prevstate => {\r\n            const newState = { ...prevstate };\r\n            newState[name] = value;\r\n            return newState;\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { label } = this.props;\r\n        const { isChecked, value, activityType } = this.state;\r\n\r\n        let checkbox = <span className=\"checkbox\">\r\n            <label>\r\n                <input\r\n                    type=\"checkbox\"\r\n                    value={label}\r\n                    checked={isChecked}\r\n                    onChange={this.toggleCheckboxChange}\r\n                />\r\n                {label}\r\n            </label>\r\n        </span>;\r\n\r\n        if (activityType === 'boolean') {\r\n            return (<span className=\"checkbox\">\r\n                {checkbox}\r\n            </span>)\r\n        } else{\r\n            let input;\r\n            if (activityType === 'string') {\r\n                input = <input\r\n                    type=\"text\"\r\n                    value={value}\r\n                    name=\"value\"\r\n                    disabled = {isChecked}\r\n                    onChange={this.handleChange}\r\n                />\r\n            } else {\r\n                input = <input\r\n                    type=\"number\"\r\n                    value={value}\r\n                    disabled = {isChecked}\r\n                    name=\"value\"\r\n                    onChange={this.handleChange}\r\n                />\r\n            }\r\n            return (\r\n                <span className=\"checkbox\">\r\n                    {checkbox}\r\n                    {input}\r\n                </span>\r\n            )\r\n        }\r\n\r\n    }\r\n}\r\n\r\nActivityCheckbox.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    toggleCheckbox: PropTypes.func.isRequired\r\n};\r\n\r\nexport default ActivityCheckbox;\r\n","import React from 'react';\r\nimport ActivityCheckbox from'./ActivityCheckbox.js'\r\nimport { Label } from 'react-bootstrap';\r\nimport { httpDelete, httpPost, domain, protocol } from './Helpers';\r\n\r\nclass ActivityCheckboxes extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            activities: {},\r\n            studentID: 0,\r\n            error: \"\",\r\n            errorMsg: \"\",\r\n            numChecked: 0,\r\n            date: ''\r\n        }\r\n\r\n        this.toggleCheckbox = this.toggleCheckbox.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        let numChecked = 0;\r\n        const activities = this.props.row['activities']\r\n        const keys = Object.keys(activities);\r\n        for (let i = 0; i < keys.length; i++) {\r\n            if (activities[keys[i]].type === 'boolean') {\r\n                if (activities[keys[i]].value === true) {\r\n                    numChecked++;\r\n                }\r\n            } else {\r\n                if (activities[keys[i]].value !== '') {\r\n                    numChecked++;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            activities: activities,\r\n            studentID: this.props.row.studentID,\r\n            numChecked: numChecked,\r\n            date: this.props.row.date\r\n        });\r\n    }\r\n\r\n    // Makes sure that the checkbox reflects whether it has been selected\r\n    toggleCheckbox = (isChecked, label, value, type) => {\r\n        const { activities, studentID, numChecked, date } = this.state;\r\n        var self = this; // This is a cheap hack so the .then() function can have access to state\r\n\r\n        // Get attendanceItemID, studentID, activityID from activities\r\n        const activityID = activities[label].activityID\r\n        const attendanceItemID = activities[label].attendanceItemID\r\n\r\n        // Carry out API actions\r\n        if (!isChecked) {\r\n            // Add attendanceItem to database\r\n            const today = new Date();\r\n            let body = {\r\n                \"student_id\": studentID,\r\n                \"activity_id\": activityID,\r\n                \"date\":`${date}`,\r\n                \"time\":`${today.getHours()}:${today.getMinutes() >= 10 ? today.getMinutes() : `0${today.getMinutes()}`}:${today.getSeconds() >= 10 ? today.getSeconds() : `0${today.getSeconds()}`}`,\r\n            };\r\n            if (type === 'string') {\r\n                if (value === '') {\r\n                    return; // do not post if value is blank\r\n                }\r\n                body[\"str_value\"] = value;\r\n            } else if (type === 'float') {\r\n                if (value === '') {\r\n                    return; // do not post if value is blank\r\n                }\r\n                body[\"num_value\"] = value;\r\n            }\r\n            httpPost(`${protocol}://${domain}/api/attendance/`, body)\r\n            .then(function(result) {\r\n                // Update state to refresh checkboxes\r\n                if ('error' in result) {\r\n                    const errorCode = result.error;\r\n                    result.response.then(function(response) {\r\n                        self.setState({error: errorCode, errorMsg: response.error})\r\n                    });\r\n                } else {\r\n                    if (type === 'boolean') {\r\n                        activities[label].value = true;\r\n                    } else if (type === 'string') {\r\n                        activities[label].value = result.str_value;\r\n                    } else if (type === 'float') {\r\n                        activities[label].value = result.num_value;\r\n                    }\r\n                    activities[label].attendanceItemID = result.id;\r\n                    self.setState({activities: activities, numChecked: numChecked + 1, error: '', errorMsg: ''})\r\n                }\r\n            });\r\n        } else {\r\n            // Remove attendanceItem from the database\r\n            if (numChecked === 1) {\r\n                // We're trying to uncheck the last checkbox\r\n                // show some sort of visual error??\r\n            } else {\r\n                httpDelete(`${protocol}://${domain}/api/attendance/?key=${attendanceItemID}`).then(function(result) {\r\n                    if ('error' in result) {\r\n                        const errorCode = result.error;\r\n                        result.response.then(function (response) {\r\n                            self.setState({ error: errorCode, errorMsg: response.error })\r\n                        });\r\n                    } else {\r\n                        if (type === 'boolean') {\r\n                            activities[label].value = false;\r\n                        } else {\r\n                            activities[label].value = '';\r\n                        }\r\n                        self.setState({activities: activities, numChecked: numChecked - 1, error: '', errorMsg: ''})\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    // Creates a checkbox for each activity\r\n    createCheckboxes = () => {\r\n        const { activities } = this.state;\r\n        const keys = Object.keys(activities);\r\n        var boxes = [];\r\n        for (var i = 0; i < keys.length; i++) {\r\n            const type = activities[keys[i]].type;\r\n            const value = activities[keys[i]].value;\r\n            let checked;\r\n            if (type === 'boolean') {\r\n                checked = value;\r\n            } else {\r\n                checked = value !== ''\r\n            }\r\n            boxes.push(\r\n                <ActivityCheckbox\r\n                    label={keys[i]}\r\n                    key={keys[i]}\r\n                    activityType={type}\r\n                    value={value}\r\n                    checked = {checked}\r\n                    toggleCheckbox={this.toggleCheckbox}\r\n                />\r\n            )\r\n        }\r\n        return boxes;\r\n    };\r\n\r\n    render() {\r\n        let errorMsg = \"Your changes have not been saved. Please refresh and try again.\";\r\n        if (this.state.errorMsg !== '' && this.state.errorMsg !== null) {\r\n            errorMsg = this.state.errorMsg;\r\n        }\r\n        return (\r\n            <span className=\"container\">\r\n                <span className=\"row\">\r\n                    <span className=\"col-sm-12\">\r\n                        {this.state.numChecked < 2 && <Label bsStyle=\"warning\">At least one box must be checked</Label>}\r\n                        {this.state.error !== \"\" && <Label bsStyle=\"danger\">Error {this.state.error}: {errorMsg} </Label>}\r\n                        {this.createCheckboxes()}\r\n                    </span>\r\n                </span>\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ActivityCheckboxes;\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { httpDelete, getPermissions, domain, protocol } from './Helpers';\r\n\r\nclass AttendanceOptions extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            row: {},\r\n        }\r\n\r\n        this.deleteRow = this.deleteRow.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            row: this.props.row,\r\n        });\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.row['studentID'] !== this.state.row['studentID']) {\r\n            this.setState({\r\n                row: this.props.row,\r\n            })\r\n        }\r\n    }\r\n\r\n    deleteRow() {\r\n        const permissions = getPermissions();\r\n        if (permissions.indexOf('delete_attendanceitems') < 0) {\r\n            alert('Error: You are not authorized to delete attendance items');\r\n        } else {\r\n            const { row } = this.state;\r\n            const activities = row['activities']\r\n            const keys = Object.keys(activities);\r\n            let ids = [];\r\n\r\n            // figure out what to delete\r\n            for (let i = 0; i < keys.length; i++) {\r\n                if (activities[keys[i]].attendanceItemID !== 0) {\r\n                    ids.push(activities[keys[i]].attendanceItemID)\r\n                }\r\n            }\r\n\r\n            // delete the things\r\n            for (let i = 0; i < ids.length; i++) {\r\n                httpDelete(`${protocol}://${domain}/api/attendance/?key=${ids[i]}`);\r\n            }\r\n\r\n            this.props.CustomFunction(row['studentID']);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Button bsStyle=\"danger\" onClick={this.deleteRow}>Delete</Button>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AttendanceOptions;\r\n","import React from 'react';\r\nimport { Button, ControlLabel, FormControl, FormGroup, Modal } from 'react-bootstrap';\r\nimport { httpPost, domain, protocol } from './Helpers';\r\n\r\nclass AddStudentModal extends React.Component {\r\n    \r\n    constructor(props) {\r\n\t\tsuper(props)\r\n\t\t\r\n        this.state = {\r\n\t\t\tfirstName: \"\",\r\n\t\t\tlastName:\"\",\r\n\t\t\tshow: false,\r\n\t\t\tstudentFields: {},\r\n\t\t\tstudentInfo: {},\r\n\t\t}\r\n\t\t\r\n\t\tthis.cancel = this.cancel.bind(this);\r\n\t\tthis.submit = this.submit.bind(this);\r\n\t\tthis.onFirstNameChange = this.onFirstNameChange.bind(this);\r\n\t\tthis.onLastNameChange = this.onLastNameChange.bind(this);\r\n\t\tthis.handleInfoChange = this.handleInfoChange.bind(this);\r\n\t}\r\n\r\n\tcomponentDidUpdate() {\r\n        if (this.props.show !== this.state.show) {\r\n\t\t\tlet studentInfo = {};\r\n\t\t\tconst fieldsList = this.props.studentFields;\r\n\t\t\tlet studentFields = {};\r\n\t\t\tfor (var index in fieldsList) {\r\n\t\t\t\tstudentInfo[fieldsList[index].name] = '';\r\n\t\t\t\tstudentFields[fieldsList[index].name] = fieldsList[index];\r\n\t\t\t}\r\n            this.setState({\r\n\t\t\t\tshow: this.props.show,\r\n\t\t\t\tstudentFields: studentFields,\r\n\t\t\t\tstudentInfo: studentInfo,\r\n\t\t\t});\r\n        }\r\n    }\r\n\r\n\tvalidateInput() {\r\n\t\tconst { firstName, lastName } = this.state;\r\n\t\tif (firstName.length > 0 && lastName.length > 0) {\r\n\t\t\treturn 'success';\r\n\t\t} else if (firstName.length === 0 && lastName.length === 0) {\r\n\t\t\treturn null;\r\n\t\t} else {\r\n\t\t\treturn 'error';\r\n\t\t}\r\n\t}\r\n\r\n\tonFirstNameChange(e) {\r\n\t\tthis.setState({firstName: e.target.value})\r\n\t}\r\n\r\n\tonLastNameChange(e) {\r\n\t\tthis.setState({lastName: e.target.value})\r\n\t}\r\n\t\r\n\tcancel() {\r\n\t\tthis.setState({\r\n\t\t\tfirstName: \"\",\r\n\t\t\tlastName:\"\",\r\n\t\t});\r\n\t\tthis.props.onSubmit();\r\n\t}\r\n\r\n\tcreateStudentInfo(name, value, student_id, self) {\r\n\t\tconst {studentFields} = self.state;\r\n\t\tconst field = studentFields[name];\r\n\t\tlet body = {student_id: student_id, info_id: field.info_id};\r\n\t\tif (field.type === 'str') {\r\n\t\t\tbody['str_value'] = value;\r\n\t\t} else if (field.type === 'int') {\r\n\t\t\tbody['int_value'] = value;\r\n\t\t} else if (field.type === 'date') {\r\n\t\t\tbody['date_value'] = value;\r\n\t\t}\r\n\t\treturn body;\r\n\t}\r\n\r\n\tsubmit() {\r\n\t\tconst self = this;\r\n\t\thttpPost(`${protocol}://${domain}/api/students/`, {\r\n\t\t\tfirst_name: this.state.firstName,\r\n\t\t\tlast_name: this.state.lastName\r\n\t\t}).then(function(result) {\r\n\t\t\tif ('error' in result) {\r\n\t\t\t\tconsole.log(result);\r\n\t\t\t} else {\r\n\t\t\t\tconst student_id = result.id;\r\n\t\t\t\tconst {studentInfo} = self.state;\r\n\t\t\t\tlet infoBody = [];\r\n\t\t\t\tfor (var field in studentInfo) {\r\n\t\t\t\t\tif (studentInfo[field] !== '') {\r\n\t\t\t\t\t\tinfoBody.push(self.createStudentInfo(field, studentInfo[field], student_id, self));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\thttpPost(`${protocol}://${domain}/api/student_info/`, infoBody)\r\n\t\t\t\t\t.then(function (infoResult) {\r\n\t\t\t\t\t\tif ('error' in infoResult) {\r\n\t\t\t\t\t\t\tconsole.log(infoResult);\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tself.setState({\r\n\t\t\t\t\t\t\t\tfirstName: \"\",\r\n\t\t\t\t\t\t\t\tlastName: \"\",\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tself.props.onSubmit(result);\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tcreateStudentInfoFields () {\r\n\t\tlet info = [];\r\n\t\tconst { studentFields } = this.state;\r\n\t\tfor (var fieldName in studentFields) {\r\n\t\t\tconst field = studentFields[fieldName];\r\n\t\t\tlet type;\r\n\t\t\tswitch (field.type) {\r\n\t\t\t\tcase 'str':\r\n\t\t\t\t\ttype = \"text\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'int':\r\n\t\t\t\t\ttype = \"int\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase 'date':\r\n\t\t\t\t\ttype = \"date\";\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tinfo.push(<div  key={field.info_id}><ControlLabel>{fieldName}</ControlLabel><FormControl value={this.state.studentInfo[fieldName]} name={fieldName} type={type} onChange={this.handleInfoChange} /><br/></div>);\r\n\t\t}\r\n\t\treturn info;\r\n\t}\r\n\r\n\thandleInfoChange = e => {\r\n        const name = e.target.name;\r\n\t\tconst value = e.target.value;\r\n\t\tlet { studentInfo } = this.state;\r\n\t\tstudentInfo[name] = value;\r\n        this.setState({\r\n\t\t\tstudentInfo\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return(\r\n            <Modal show={this.props.show}>\r\n\t\t\t\t<Modal.Header>\r\n\t\t\t\t\t<Modal.Title>Create New Student</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<form>\r\n\t\t\t\t\t\t<FormGroup\r\n\t\t\t\t\t\t\tcontrolId=\"addStudentForm\"\r\n\t\t\t\t\t\t\tvalidationState={this.validateInput()}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<ControlLabel>First Name</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.firstName}\r\n\t\t\t\t\t\t\t\tplaceholder=\"First\"\r\n\t\t\t\t\t\t\t\tonChange={this.onFirstNameChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<FormControl.Feedback />\r\n\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t<ControlLabel>Last Name</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.lastName}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Last\"\r\n\t\t\t\t\t\t\t\tonChange={this.onLastNameChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t{this.createStudentInfoFields()}\r\n\t\t\t\t\t\t\t<FormControl.Feedback />\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</Modal.Body>\r\n\r\n\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t<Button onClick={this.cancel}>Cancel</Button>\r\n\t\t\t\t\t<Button onClick={this.submit} bsStyle=\"primary\">Create</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddStudentModal;\r\n","/*\r\n *  https://alligator.io/react/react-autocomplete/\r\n */\r\n\r\nimport React, { Component, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Autocomplete.css\"\r\nimport { Form, FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\r\n\r\nclass Autocomplete extends Component {\r\n  static propTypes = {\r\n    suggestions: PropTypes.instanceOf(Array),\r\n    handler: PropTypes.instanceOf(Function)\r\n  };\r\n\r\n  static defaultProps = {\r\n    suggestions: [],\r\n    handler: null\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      // The active selection's index\r\n      activeSuggestion: 0,\r\n      // The suggestions that match the user's input\r\n      filteredSuggestions: [],\r\n      // Whether or not the suggestion list is shown\r\n      showSuggestions: false,\r\n      // What the user has entered\r\n      userInput: \"\"\r\n    };\r\n  }\r\n\r\n  // Event fired when the input value is changed\r\n  onChange = e => {\r\n    const { suggestions } = this.props;\r\n    const userInput = e.currentTarget.value;\r\n\r\n    // Filter our suggestions that don't contain the user's input\r\n    const filteredSuggestions = suggestions.filter(\r\n      suggestion =>\r\n        (suggestion.firstName.toLowerCase().startsWith(userInput.toLowerCase()) === true ||\r\n          suggestion.lastName1.toLowerCase().startsWith(userInput.toLowerCase()) === true ||\r\n          suggestion.lastName2.toLowerCase().startsWith(userInput.toLowerCase()) === true ||\r\n          (suggestion.firstName.toLowerCase() + \" \" +\r\n            suggestion.lastName1.toLowerCase() + \" \").startsWith(userInput.toLowerCase()) === true ||\r\n            (suggestion.username && suggestion.username.toLowerCase().startsWith(userInput.toLowerCase()) === true))\r\n    );\r\n\r\n    // Update the user input and filtered suggestions, reset the active\r\n    // suggestion and make sure the suggestions are shown\r\n    this.setState({\r\n      activeSuggestion: 0,\r\n      filteredSuggestions,\r\n      showSuggestions: true,\r\n      userInput: e.currentTarget.value,\r\n    });\r\n  };\r\n\r\n  // Event fired when the user clicks on a suggestion\r\n  onClick = e => {\r\n    // Update the user input and reset the rest of the state\r\n    this.setState({\r\n      activeSuggestion: 0,\r\n      filteredSuggestions: [],\r\n      showSuggestions: false,\r\n      userInput: e.currentTarget.innerText\r\n    });\r\n    this.props.handler(e, e._targetInst.key);\r\n    this.setState({ userInput: \"\" });\r\n  };\r\n\r\n  // Prevents React's form from overriding our code when hitting enter\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n  }\r\n\r\n  // Event fired when the user presses a key down\r\n  onKeyDown = e => {\r\n    const { activeSuggestion, filteredSuggestions } = this.state;\r\n\r\n    // User pressed the enter key, update the input and close the\r\n    // suggestions\r\n    if (e.keyCode === 13 && this.state.activeSuggestion === -1) {\r\n      this.props.handler(e, this.state.selectedId)\r\n      this.setState({ userInput: \"\" });\r\n    }\r\n    else if (e.keyCode === 13) {\r\n      if (typeof filteredSuggestions[activeSuggestion] === 'object') {\r\n        var fullName = (filteredSuggestions[activeSuggestion].firstName + \" \" +\r\n          filteredSuggestions[activeSuggestion].lastName1)\r\n        this.setState({\r\n          activeSuggestion: -1,\r\n          showSuggestions: false,\r\n          userInput: fullName,\r\n          selectedId: filteredSuggestions[activeSuggestion].id\r\n        });\r\n      }\r\n\r\n    }\r\n    // User pressed the up arrow, decrement the index\r\n    else if (e.keyCode === 38) {\r\n      if (activeSuggestion === 0) {\r\n        return;\r\n      }\r\n\r\n      this.setState({ activeSuggestion: activeSuggestion - 1 });\r\n      this.scrollUpHandler();\r\n    }\r\n    // User pressed the down arrow, increment the index\r\n    else if (e.keyCode === 40) {\r\n      if (activeSuggestion === filteredSuggestions.length - 1) {  // Improvements should be made\r\n        return;\r\n      }\r\n\r\n      this.setState({ activeSuggestion: activeSuggestion + 1 });\r\n      this.scrollDownHandler();\r\n    }\r\n  };\r\n\r\n  //temp fix for autoscroll when user presss down arrow through dropdown menu\r\n  scrollDownHandler() {\r\n    var dropdown = document.getElementsByClassName(\"suggestions\");\r\n    var activeItem = document.getElementsByClassName(\"suggestion-active\");\r\n    var itemHeight = activeItem[0].getBoundingClientRect().height;\r\n    var scrollPos = dropdown[0].scrollTop;\r\n    var dropdownHeight = dropdown[0].getBoundingClientRect().height;\r\n    var halfway = Math.round(Math.round(dropdownHeight / itemHeight) / 2) * itemHeight;\r\n    if (((this.state.activeSuggestion + 2) * itemHeight) >= scrollPos + dropdownHeight) {\r\n      dropdown[0].scrollTop = dropdown[0].scrollTop + halfway;\r\n    }\r\n  }\r\n\r\n  //temp fix for autoscroll when user presss up arrow through dropdown menu\r\n  scrollUpHandler() {\r\n    var dropdown = document.getElementsByClassName(\"suggestions\");\r\n    var activeItem = document.getElementsByClassName(\"suggestion-active\");\r\n    var itemHeight = activeItem[0].getBoundingClientRect().height;\r\n    var scrollPos = dropdown[0].scrollTop;\r\n    var dropdownHeight = dropdown[0].getBoundingClientRect().height;\r\n    var halfway = Math.round(Math.round(dropdownHeight / itemHeight) / 2) * itemHeight;\r\n    if (((this.state.activeSuggestion - 1) * itemHeight) <= scrollPos) {\r\n      dropdown[0].scrollTop = dropdown[0].scrollTop - halfway;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      onChange,\r\n      onClick,\r\n      onKeyDown,\r\n      handleSubmit,\r\n      state: {\r\n        activeSuggestion,\r\n        filteredSuggestions,\r\n        showSuggestions,\r\n        userInput\r\n      }\r\n    } = this;\r\n\r\n    let suggestionsListComponent;\r\n\r\n    if (showSuggestions && userInput) {\r\n      if (filteredSuggestions.length) {\r\n        suggestionsListComponent = (\r\n          <div className=\"suggestions\">\r\n            {filteredSuggestions.map((suggestion, index) => {\r\n              let className;\r\n\r\n              // Flag the active suggestion with a class\r\n              if (index === activeSuggestion) {\r\n                className = \"suggestion-active\";\r\n              }\r\n              let username = '';\r\n              if (suggestion.username) {\r\n                username = ' | ' + suggestion.username;\r\n              }\r\n              return (\r\n                <p\r\n                  className={className}\r\n                  key={suggestion.id}\r\n                  onClick={onClick}\r\n                >\r\n                  {suggestion.firstName} {suggestion.lastName1} {suggestion.lastName2} {username}\r\n                </p>\r\n              );\r\n            })}\r\n          </div>\r\n        );\r\n      } else {\r\n        suggestionsListComponent = (\r\n          <div className=\"no-suggestions\">\r\n            <em>No suggestions.</em>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Fragment>\r\n        <Form inline\r\n          onSubmit={handleSubmit}>\r\n          <FormGroup\r\n            controlId=\"formInlineName\"\r\n          >\r\n            <ControlLabel>{this.props.label === undefined ? 'Search:' : this.props.label}</ControlLabel>{' '}\r\n            <FormControl\r\n              autoComplete=\"off\"\r\n              type=\"text\"\r\n              value={userInput}\r\n              onChange={onChange}\r\n              onKeyDown={onKeyDown}\r\n              placeholder={this.props.hasUsername ? 'Name or Username' : 'Name'}\r\n            />\r\n            {suggestionsListComponent}\r\n          </FormGroup>{' '}\r\n        </Form>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Autocomplete;\r\n","import React from 'react';\r\nimport ReactCollapsingTable from 'react-collapsing-table';\r\nimport ActivityCheckboxes from '../components/ActivityCheckboxes';\r\nimport AttendanceOptions from '../components/AttendanceOptions';\r\nimport AddStudentModal from '../components/AddStudentModal';\r\nimport Autocomplete from \"../components/Autocomplete\";\r\nimport { httpPost, httpGet, domain, protocol } from '../components/Helpers';\r\nimport { Button, ButtonToolbar, Form, FormControl, FormGroup, ControlLabel } from 'react-bootstrap';\r\nimport { getPermissions, downloadAttendanceCSV, compareActivities } from '../components/Helpers';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Attendance extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            buildingCSV: false,\r\n            students: [],\r\n            activities: [],\r\n            attendanceItems: [],\r\n            suggestionsArray: [],\r\n            attendance: [],\r\n            showStudentModal: false,\r\n            date: '',\r\n            prevDate: '',\r\n            canCreateStudent: false,\r\n            mobile: false,\r\n        }\r\n\r\n        this.downloadCSV = this.downloadCSV.bind(this);\r\n        this.addStudent = this.addStudent.bind(this);\r\n        this.removeAttendanceRow = this.removeAttendanceRow.bind(this);\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.updateDate = this.updateDate.bind(this);\r\n        this.setDateToToday = this.setDateToToday.bind(this);\r\n        this.refresh = this.refresh.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({date: this.getCurrentDate(), mobile: (window.innerWidth < 768)})\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.state.date !== this.state.prevDate) {\r\n            this.setState({prevDate: this.state.date})\r\n            this.fetchAndBuild()\r\n        }\r\n    }\r\n\r\n    getCurrentDate() {\r\n        const today = new Date();\r\n        const month = today.getMonth() + 1;\r\n        const day = today.getDate();\r\n        return `${today.getFullYear()}-${month >= 10 ? month : `0${month}`}-${day >= 10 ? day : `0${day}`}`\r\n    }\r\n\r\n    async fetchAndBuild() {\r\n        const { date } = this.state;\r\n        try {\r\n\r\n            const students = await httpGet(`${protocol}://${domain}/api/students/`);\r\n            const attendanceItems = await httpGet(`${protocol}://${domain}/api/attendance/?day=${date}`);\r\n            let activities = await httpGet(`${protocol}://${domain}/api/activities/`);\r\n            const permissions = getPermissions()\r\n            let studentFields = [];\r\n            let canCreateStudent = false;\r\n            if (permissions.indexOf('add_students') >= 0) {\r\n                studentFields = await httpGet(`${protocol}://${domain}/api/student_column/?quick_add=True`);\r\n                canCreateStudent = true;\r\n            }\r\n            activities = activities.filter(item => item.is_showing === true);\r\n            activities.sort(compareActivities)\r\n            const suggestions = this.makeSuggestionsArray(students);\r\n\r\n            this.setState({\r\n                suggestionsArray: suggestions,\r\n                students: students,\r\n                activities: activities,\r\n                studentFields : studentFields,\r\n                attendanceItems: attendanceItems,\r\n                canCreateStudent: canCreateStudent\r\n            });\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n        this.buildSheet();\r\n    }\r\n\r\n    buildSheet() {\r\n        const { activities, attendanceItems, students } = this.state;\r\n        // Combine attendance items. Need to sort by student id.\r\n        console.log(attendanceItems);\r\n        var entries = {};\r\n        for (var i = 0; i < attendanceItems.length; i++) {\r\n            if (attendanceItems[i].activity_id === -1) {\r\n                continue;\r\n            }\r\n            if (entries[`${attendanceItems[i].student_id}`] == null) {\r\n                entries[`${attendanceItems[i].student_id}`] = {'time':attendanceItems[i].time};\r\n            }\r\n            let value = true;\r\n            if (attendanceItems[i].num_value !== null) {\r\n                value = attendanceItems[i].num_value;\r\n            } else if (attendanceItems[i].str_value !== null) {\r\n                value = attendanceItems[i].str_value;\r\n            }\r\n            entries[`${attendanceItems[i].student_id}`][attendanceItems[i].activity_id] = {'value':value, 'itemID':attendanceItems[i].id};\r\n        }\r\n        console.log(entries);\r\n\r\n        // Build table of the form [{name, activity1, ... , activityn, time}]\r\n        var sheet = [];\r\n        const ids = Object.keys(entries);\r\n        var columns = ['Name'];\r\n        for (var i = 0; i < activities.length; i++) {\r\n            columns.push(activities[i].name);\r\n        }\r\n        for (var i = 0; i < ids.length; i++) {\r\n            var row = {}\r\n            // match student data to current id\r\n            for (var j = 0; j < students.length; j++) { // unfortunately, student data isn't in any particular order. O(n) it is!\r\n                if (students[j].id === parseInt(ids[i])) {\r\n                    row['name'] = `${students[j].first_name} ${students[j].last_name}`;\r\n                    row['studentID'] = students[j].id;\r\n                    break;\r\n                }\r\n            } \r\n            row['time'] = entries[ids[i]].time;\r\n            row['activities'] = {};\r\n            // fill in activities data\r\n            for (var j = 0; j < activities.length; j++) {\r\n                let value;\r\n                if (!entries[ids[i]][activities[j].activity_id]) {\r\n                    if (activities[j].type === 'boolean') {\r\n                        value = false;\r\n                    } else {\r\n                        value = '';\r\n                    }\r\n                } else {\r\n                    value = entries[ids[i]][activities[j].activity_id].value;\r\n                }\r\n                row['activities'][activities[j].name] = {\r\n                    'value': value,\r\n                    'activityID': activities[j].activity_id,\r\n                    'type': activities[j].type,\r\n                    'attendanceItemID': (entries[ids[i]][activities[j].activity_id]) ? entries[ids[i]][activities[j].activity_id].itemID : 0,\r\n                }\r\n            }\r\n            sheet.push(row)\r\n        }\r\n\r\n        this.setState({ attendance: sheet });\r\n    }\r\n\r\n    async addStudent(e, studentID) {\r\n        // Refresh attendance page.\r\n        await this.fetchAndBuild();\r\n\r\n        const { students, attendance, activities, date } = this.state;\r\n        const today = new Date();\r\n        const self = this;\r\n\r\n        // make sure we don't already have this student.\r\n        for (let i = 0; i < attendance.length; i++) {\r\n            if (parseInt(studentID) === attendance[i].studentID) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        httpPost(`${protocol}://${domain}/api/attendance/`, {\r\n            \"student_id\": studentID,\r\n            \"activity_id\": 7, // Key    \r\n            \"date\":`${date}`,\r\n            \"time\":`${today.getHours()}:${today.getMinutes() >= 10 ? today.getMinutes() : `0${today.getMinutes()}`}:${today.getSeconds() >= 10 ? today.getSeconds() : `0${today.getSeconds()}`}`,\r\n        }).then(function(result) {\r\n            if ('error' in result) {\r\n                result.response.then(function(response) {alert(`Error: ${response.error}`)});\r\n            } else {\r\n                // Add new row to table\r\n                let name = \"\";\r\n                for (var j = 0; j < students.length; j++) {\r\n                    if (students[j].id === parseInt(studentID)) {\r\n                        name = `${students[j].first_name} ${students[j].last_name}`;\r\n                        break;\r\n                    }\r\n                }\r\n\r\n                let activityList = {};\r\n                for (var j = 0; j < activities.length; j++) {\r\n                    const type = activities[j].type;\r\n                    const value = type === 'boolean' ? false : '';\r\n                    activityList[activities[j].name] = {\r\n                        'activityID': activities[j].activity_id,\r\n                        'attendanceItemID': 0,\r\n                        'value': value,\r\n                        'type': type\r\n                    }\r\n                }\r\n                activityList['Key']['value'] = true;\r\n                activityList['Key']['attendanceItemID'] = result.id;\r\n\r\n                const row = { 'name': name, 'studentID': parseInt(studentID), 'time': result.time, 'activities': activityList };\r\n                attendance.push(row);\r\n                self.setState({ attendance: attendance });\r\n            }\r\n        });\r\n    }\r\n\r\n    makeSuggestionsArray(suggestions) {\r\n        var array = [];\r\n        var lastHolder1;\r\n        var lastHolder2;\r\n        var tempArray;\r\n        for (var object in suggestions) {\r\n            if (suggestions[object]['last_name'].includes(\" \")) {\r\n                tempArray = suggestions[object]['last_name'].split(\" \");\r\n                lastHolder1 = tempArray[0];\r\n                lastHolder2 = tempArray[1];\r\n            }\r\n            else {\r\n                lastHolder1 = suggestions[object]['last_name'];\r\n                lastHolder2 = \"\";\r\n            }\r\n            array.push({\r\n                firstName: suggestions[object]['first_name'],\r\n                lastName1: lastHolder1,\r\n                lastName2: lastHolder2,\r\n                id: suggestions[object]['id']\r\n            });\r\n        }\r\n        return array;\r\n    }\r\n\r\n    async downloadCSV() {\r\n        this.setState({ buildingCSV: true });\r\n        await downloadAttendanceCSV(`${this.state.date}`)\r\n        this.setState({ buildingCSV: false });\r\n    }\r\n\r\n    // Allows the AttendanceOptions object to  update state here\r\n    removeAttendanceRow(studentID) {\r\n        const { attendance } = this.state;\r\n        for (let i = 0; i < attendance.length; i++) {\r\n            if (attendance[i].studentID === studentID) {\r\n                attendance.splice(i, 1);\r\n            }\r\n        }\r\n        this.setState({attendance: attendance});\r\n    }\r\n\r\n    openModal() {\r\n        this.setState({showStudentModal: true});\r\n    }\r\n\r\n    refresh() {\r\n        this.fetchAndBuild();\r\n    }\r\n\r\n    closeModal(student=null) {\r\n        const { students } = this.state;\r\n        let suggestions = []\r\n\r\n        if (student !== null) {\r\n            // First, add student to students list\r\n            students.push({'first_name': student.first_name, 'last_name': student.last_name, 'id': student.id});\r\n            suggestions = this.makeSuggestionsArray(students);\r\n            // Then, add student to the array.\r\n            this.addStudent(null, student.id);\r\n        }\r\n\r\n        this.setState({showStudentModal: false, students: students, suggestions: suggestions});\r\n    }\r\n\r\n    updateDate(e) {\r\n        this.setState({date: e.target.value});\r\n    }\r\n\r\n    setDateToToday() {\r\n        this.setState({date: this.getCurrentDate()})\r\n    }\r\n\r\n    render() {\r\n        const permissions = getPermissions();\r\n        if (permissions.indexOf('view_attendanceitems') < 0) {\r\n            return (<Redirect to='/notfound'/>);\r\n        }\r\n        console.log(this.state.attendance);\r\n        const rows = this.state.attendance.map(item =>\r\n            (\r\n               {\r\n                   name: item.name,\r\n                   time: item.time,\r\n                   activities: item.activities,\r\n                   studentID: item.studentID,\r\n                   date: this.state.date\r\n               }\r\n           )\r\n        ).sort((a, b) => {\r\n            return b.time.localeCompare(a.time); // For some reason the table doesn't automatically sort.\r\n        });\r\n\r\n        const columns = [\r\n            {\r\n                accessor: 'name',\r\n                label: 'Name',\r\n                priorityLevel: 1,\r\n                position: 1,\r\n                minWidth: 100,\r\n                sortable: true\r\n            },\r\n            {\r\n                accessor: 'time',\r\n                label: 'Check-in Time',\r\n                priorityLevel: 2,\r\n                position: 2,\r\n                minWidth: 100,\r\n                sortable: true\r\n            },\r\n            {\r\n                accessor: 'options',\r\n                label: 'Options',\r\n                priorityLevel: 3,\r\n                position: 3,\r\n                CustomComponent: AttendanceOptions,\r\n                sortable: false,\r\n                minWidth: 100\r\n            },\r\n            { \r\n                accessor: 'activities',\r\n                label: 'Activities',\r\n                priorityLevel: 4,\r\n                position: 4,\r\n                minWidth: 2000,\r\n                CustomComponent: ActivityCheckboxes,\r\n                sortable: false, \r\n            }\r\n        ];\r\n\r\n        const buildingCSV = this.state.buildingCSV;\r\n\r\n        let buttonToolbar;\r\n        if (this.state.canCreateStudent) {\r\n            buttonToolbar = <ButtonToolbar style={{ float: 'right' }}>\r\n                <Button onClick={this.refresh}>Refresh</Button>\r\n                {!this.state.mobile && <Button onClick={this.setDateToToday}>Go To Today</Button>}\r\n                {!this.state.mobile && <Button onClick={this.downloadCSV} disabled={buildingCSV}>{buildingCSV ? 'Downloading...' : 'Download'}</Button>}\r\n                <Button onClick={this.openModal}>Create New Student</Button>\r\n            </ButtonToolbar>\r\n        } else {\r\n            buttonToolbar = <ButtonToolbar style={{ float: 'right' }}>\r\n                <Button onClick={this.refresh}>Refresh</Button>\r\n                {!this.state.mobile && <Button onClick={this.setDateToToday}>Go To Today</Button>}\r\n                {!this.state.mobile && <Button onClick={this.downloadCSV} disabled={buildingCSV}>{buildingCSV ? 'Downloading...' : 'Download'}</Button>}\r\n            </ButtonToolbar>\r\n        }\r\n\r\n        return (\r\n            <div className='content'>\r\n                <AddStudentModal studentFields={this.state.studentFields} show={this.state.showStudentModal} onSubmit={this.closeModal}/>\r\n                <h1>Attendance for {this.state.date}</h1>\r\n                <br/>\r\n                {buttonToolbar}\r\n                {!this.state.mobile && <Form inline style={{ float: 'right', paddingRight: '5px', paddingLeft: '5px'}}>\r\n                    <FormGroup>\r\n                        <ControlLabel>Date:</ControlLabel>{' '}\r\n                        <FormControl onChange={this.updateDate} value={this.state.date} type=\"date\"/>\r\n                    </FormGroup>\r\n                </Form>}\r\n                <Autocomplete\r\n                    label={'Check-in Student:'}\r\n\t\t\t\t\tsuggestions={this.state.suggestionsArray}\r\n\t\t\t\t\thandler={this.addStudent}\r\n\t\t\t\t/>\r\n                <br/>\r\n                <ReactCollapsingTable\r\n                        rows = { rows }\r\n                        columns = { columns }\r\n                        column = {'time'}\r\n                        direction = {'descending'}\r\n                        showPagination={ true }\r\n                        callbacks = {{'options':this.removeAttendanceRow}}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Attendance;","// Copyright (c) 2016 - 2017 Uber Technologies, Inc.\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining a copy\r\n// of this software and associated documentation files (the \"Software\"), to deal\r\n// in the Software without restriction, including without limitation the rights\r\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n// copies of the Software, and to permit persons to whom the Software is\r\n// furnished to do so, subject to the following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be included in\r\n// all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n// THE SOFTWARE.\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport React, { Component } from 'react';\r\nimport { HeatmapSeries, XAxis, XYPlot, YAxis } from 'react-vis';\r\nimport ContinuousColorLegend from 'react-vis/dist/legends/continuous-color-legend';\r\nimport \"./React-vizLegends.scss\";\r\n\r\n\r\nclass Heatmap extends Component {\r\n\r\n  static propTypes = {\r\n    heatMapJson: PropTypes.instanceOf(Array),\r\n  };\r\n\r\n  static defaultProps = {\r\n    data: [],\r\n      heatMapType: \"\"\r\n\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      data: props.data,\r\n        // yArray is used for the reports Heatmaps and yArrayStudents is used for students heatmap\r\n        yArrayStudents: [\"1\", \"2\", \"3\", \"4\", \"5\"]\r\n    };\r\n  }\r\n\r\n  // Sets the correct range for the y-axis depending on what day the data starts on\r\n    // This assumes the range length will always be exactly one week\r\n  setYArrayRange(data) {\r\n      try {\r\n          if (data[0][\"y\"] === \"Thu\") {\r\n              return [\"Thu\", \"Fri\", \"Sat\", \"Sun\", \"Mon\", \"Tue\", \"Wed\", ]\r\n          }\r\n          else if (data[0][\"y\"] === \"Fri\") {\r\n              return [\"Fri\", \"Sat\", \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", ]\r\n          }\r\n          else if (data[0][\"y\"] === \"Sat\") {\r\n              return [\"Sat\", \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", ]\r\n          }\r\n          else if (data[0][\"y\"] === \"Sun\") {\r\n              return [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", ]\r\n          }\r\n          else if (data[0][\"y\"] === \"Mon\") {\r\n              return [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\", ]\r\n          }\r\n          else if (data[0][\"y\"] === \"Tue\") {\r\n              return [\"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\", \"Mon\",]\r\n          }\r\n          else if (data[0][\"y\"] === \"Wed\") {\r\n              return [\"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\", \"Mon\", \"Tue\", ]\r\n          }\r\n      }\r\n      catch(err) {\r\n          console.log(err);\r\n      }\r\n\r\n\r\n  };\r\n\r\n  scaleWidth(heatMapType, dataLength) {\r\n    if (heatMapType === \"weekly\" || heatMapType === \"individualStudent\") {\r\n      return 8*dataLength;\r\n    }\r\n    else if (heatMapType === \"annual\") {\r\n      return 3.2*dataLength;\r\n    }\r\n  }\r\n\r\n  scaleHeight(heatMapType) {\r\n      if (heatMapType === \"weekly\" || heatMapType === \"individualStudent\") {\r\n          return 300;\r\n      }\r\n      else if (heatMapType === \"annual\") {\r\n          return 350;\r\n      }\r\n  }\r\n\r\n  axisType(heatMapType) {\r\n      return \"ordinal\";\r\n  }\r\n\r\n  colorRange(data, heatMapType) {\r\n      for (var i=0; i<data.length; i++) {\r\n          if ((heatMapType === \"individualStudent\"  && data[i][\"color\"] !== 0) ||\r\n              ((heatMapType === \"weekly\" || heatMapType === \"annual\" ) && data[i][\"color\"] !== 0)) {\r\n              return [\"#F5FBFD\", \"teal\"]\r\n          }\r\n      }\r\n      return [\"#F5FBFD\", \"#F5FBFD\"];\r\n  }\r\n\r\n  // Returns the correct y-axis dependent on heatmap type, with axes label reversed\r\n  reverseYAxis(heatMapType, yArray) {\r\n      if (heatMapType !== \"individualStudent\") {\r\n          try {\r\n              return yArray.map(x => x).reverse();\r\n          }\r\n          catch (err) {\r\n              console.log(err);\r\n          }\r\n      }\r\n      else {\r\n          return this.state.yArrayStudents.map(x=>x).reverse();\r\n      }\r\n\r\n  }\r\n\r\n  calculateMinDataPoint(data){\r\n    var min = 0;\r\n    var toCompare;\r\n    for(var i=0; i<data.length;i++){\r\n      toCompare = data[i][\"color\"];\r\n      if(toCompare && (toCompare < min)){\r\n        min = toCompare;\r\n      }\r\n    }\r\n    return min;\r\n  }\r\n\r\n  calculateMaxDataPoint(data){\r\n    var max = 0;\r\n    var toCompare;\r\n    for(var i=0; i<data.length;i++){\r\n      toCompare = data[i][\"color\"];\r\n      if(toCompare && (toCompare > max)){\r\n        max = toCompare;\r\n      }\r\n    }\r\n    return max;\r\n  }\r\n\r\n  calculateHeatmapColor(maxHeatMapColor){\r\n    if(maxHeatMapColor===0){\r\n      return \"#F5FBFD\";\r\n    } else {\r\n      return \"teal\";\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const data = this.props.data;\r\n    const dataLength = data.length;\r\n    const heatMapType = this.props.heatMapType;\r\n    const minLegendLabel = this.calculateMinDataPoint(data);\r\n    const maxLegendLabel = this.calculateMaxDataPoint(data);\r\n    const maxHeatMapColor = this.calculateHeatmapColor(maxLegendLabel);\r\n    const yArray = this.setYArrayRange(data);\r\n\r\n\r\n    return (\r\n      <div>\r\n        <div style={{margin:20}}>\r\n      <XYPlot\r\n        width={this.scaleWidth(heatMapType, dataLength)}\r\n        height={this.scaleHeight(heatMapType)}\r\n        margin={{top: 30, left: 45}}\r\n        xType=\"ordinal\"\r\n        yType={this.axisType(heatMapType)}\r\n        yDomain={this.reverseYAxis(heatMapType, yArray)}\r\n        >\r\n        <XAxis orientation='top'/>\r\n        <YAxis orientation='left'/>\r\n\r\n        <HeatmapSeries\r\n            className=\"heatmap-series-example\"\r\n            colorRange = {this.colorRange(data, heatMapType)}\r\n              data={data}\r\n              style={{\r\n                stroke: 'black',\r\n                strokeWidth: '1px',\r\n                rectStyle: {\r\n                  rx: 1,\r\n                  ry: 1\r\n                }\r\n              }} />\r\n\r\n      </XYPlot>\r\n      </div>\r\n\r\n      <ContinuousColorLegend\r\n      width={300}\r\n      startTitle={minLegendLabel}\r\n      midTitle={Math.round((maxLegendLabel+minLegendLabel)/2)}\r\n      endTitle= {maxLegendLabel}\r\n      startColor=\"#F5FBFD\"\r\n      endColor={maxHeatMapColor}\r\n      height={100}\r\n      />\r\n</div>\r\n      \r\n    );\r\n  };\r\n}\r\n\r\nexport default Heatmap;","import React, { Component } from 'react';\r\nimport { Button, ButtonToolbar, Form, FormControl, FormGroup, Label, ListGroup, ListGroupItem } from \"react-bootstrap\";\r\nimport { Redirect } from 'react-router-dom';\r\nimport Autocomplete from '../components/Autocomplete';\r\nimport Heatmap from '../components/Heatmap';\r\nimport { dateToString, getPermissions, domain, getEarlierDate, getNextSaturday, getPrevSunday, httpDelete, httpGet, httpPatch, httpPost, protocol, httpPostFile, httpPatchFile, httpGetFile } from '../components/Helpers';\r\nimport blankPic from '../images/blank_profile_pic.jpg';\r\n\r\n\r\nclass Students extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mode: 'search',\r\n      canViewStudentInfo: false,\r\n      canViewHeatmap: false,\r\n      canDeleteStudent: false,\r\n      heatMapJson: []\r\n    };\r\n    this.display = this.display.bind(this);\r\n    this.edit = this.edit.bind(this);\r\n    this.handler = this.handler.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      var studentsJson = await httpGet(`${protocol}://${domain}/api/students/`);\r\n      var suggestionsArray = this.makeSuggestionsArray(studentsJson);\r\n      \r\n      let permissions = getPermissions()\r\n      let canViewStudentInfo = false;\r\n      if (permissions.indexOf('view_studentinfo') >= 0) {\r\n        var studentColumnJson = await httpGet(`${protocol}://${domain}/api/student_column/`);\r\n        var profileInfo = this.parseCols(studentColumnJson);\r\n        var profileInfoPrelim = this.parseCols(studentColumnJson);\r\n        canViewStudentInfo = true;\r\n      }\r\n      let canViewHeatmap = false;\r\n      if (permissions.indexOf('view_reports') >= 0) {\r\n        canViewHeatmap = true;\r\n      }\r\n      let canDeleteStudent = false;\r\n      if (permissions.indexOf('delete_students') >= 0) {\r\n        canDeleteStudent = true;\r\n      }\r\n\r\n      this.setState(function (previousState, currentProps) {\r\n        return {\r\n          mode: 'search',\r\n          suggestionsArray: suggestionsArray,\r\n          studentColumnJson: studentColumnJson,\r\n          profileInfo: profileInfo,\r\n          profileInfoPrelim: profileInfoPrelim,\r\n          id: null,\r\n          canViewStudentInfo: canViewStudentInfo,\r\n          canViewHeatmap: canViewHeatmap,\r\n          uploadedPic: false,\r\n          src: null,\r\n          picUpdated: false,\r\n          canDeleteStudent: canDeleteStudent\r\n        };\r\n      });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  makeSuggestionsArray(suggestions) {\r\n    var array = [];\r\n    var lastHolder1;\r\n    var lastHolder2;\r\n    var tempArray;\r\n    for (var object in suggestions) {\r\n      if (suggestions[object]['last_name'].includes(\" \")) {\r\n        tempArray = suggestions[object]['last_name'].split(\" \");\r\n        lastHolder1 = tempArray[0];\r\n        lastHolder2 = tempArray[1];\r\n      }\r\n      else {\r\n        lastHolder1 = suggestions[object]['last_name'];\r\n        lastHolder2 = \"\";\r\n      }\r\n      array.push({\r\n        firstName: suggestions[object]['first_name'],\r\n        lastName1: lastHolder1,\r\n        lastName2: lastHolder2,\r\n        id: suggestions[object]['id']\r\n      });\r\n    }\r\n    return array;\r\n  }\r\n\r\n  parseCols(cols) {\r\n    cols.sort(this.sortCols);\r\n    \r\n    var profileInfo = [];\r\n    for (var col in cols) {\r\n      profileInfo[col] = {\r\n        studentInfoId: null,\r\n        colInfo: cols[col],\r\n        value: null,\r\n        type: null,\r\n        updated: false,\r\n        patchPost: {\r\n          'student_id': null,\r\n          'info_id': parseInt(col) + 1,\r\n          'int_value': null,\r\n          'str_value': null,\r\n          'bool_value': null,\r\n          'date_value': null,\r\n          'time_value': null,\r\n          'photo_value': null,\r\n          'id': null\r\n        }\r\n      }\r\n    }\r\n\r\n    return profileInfo;\r\n  }\r\n  \r\n  // Could be used to create a custom layout for the fields on the student profile page\r\n  sortCols(a, b) {\r\n    if (a.info_id > b.info_id) return 1;\r\n    if (a.info_id < b.info_id) return -1;\r\n    return 0;\r\n  }\r\n\r\n  handler(e, studentId) {\r\n    var preState = {\r\n      mode: 'display',\r\n      id: studentId,\r\n      profileInfo: this.state.profileInfo,\r\n      profileInfoPrelim: this.state.profileInfoPrelim\r\n    };\r\n    this.getStudentProfile(preState);\r\n  }\r\n\r\n  async getStudentProfile(state) {\r\n    try {\r\n      const studentProfileJson = await httpGet(`${protocol}://${domain}/api/students/?id=` + state.id);\r\n      state.profileData = studentProfileJson;\r\n      const studentProfileEx = await httpGet(`${protocol}://${domain}/api/student_info/?student_id=${state.id}`);\r\n      \r\n      for (var i in studentProfileEx) {\r\n        console.log(this.state.picUpdated);\r\n        if (studentProfileEx[i].photo_url !== null && this.state.picUpdated == false) {\r\n          var objectUrl = `${protocol}://${domain}/${studentProfileEx[i].photo_url}`;\r\n          this.setState({src: objectUrl, uploadedPic: true});\r\n          console.log(\"src\");\r\n          console.log(state.src);\r\n        }\r\n      }\r\n      this.setState({picUpdated: false});\r\n      \r\n      // Deep copy\r\n      state.profileDataPrelim = JSON.parse(JSON.stringify(studentProfileJson));\r\n      if (this.state.canViewStudentInfo) {\r\n        try {\r\n          const studentInfoJson = await httpGet(`${protocol}://${domain}/api/student_info/?student_id=${state.id}`);\r\n          if (studentInfoJson.length === 0) {\r\n            var studentColumnJson = await httpGet(`${protocol}://${domain}/api/student_column/`);\r\n            state.profileInfo = this.parseCols(studentColumnJson);\r\n            state.profileInfoPrelim = this.parseCols(studentColumnJson);\r\n            state = this.addTypes(state);\r\n          } else {\r\n            var studentColumnJson = await httpGet(`${protocol}://${domain}/api/student_column/`);\r\n            state.profileInfo = this.parseCols(studentColumnJson);\r\n            state.profileInfoPrelim = this.parseCols(studentColumnJson);\r\n            state = this.addTypes(state);\r\n\r\n            var returnedState = this.parseStudentInfo(state, studentInfoJson);\r\n            state.profileInfo = returnedState.profileInfo;\r\n            state.profileInfoPrelim = returnedState.profileInfoPrelim;\r\n          }\r\n        }\r\n        catch (e) {\r\n          var studentColumnJson = await httpGet(`${protocol}://${domain}/api/student_column/`);\r\n          state.profileInfo = this.parseCols(studentColumnJson);\r\n        }\r\n      }\r\n\r\n      //get heatmap data for past 28 days (past 4 wks) up to the previous sunday (\"the starting sunday\")\r\n      // to the saturday which ends this current week (i.e. \"the ending saturday\")\r\n      //this ensures we are always getting exactly 5 weeks worth of data\r\n      var startDate = getEarlierDate(28);\r\n      startDate = getPrevSunday(startDate);\r\n      var startDateString = dateToString(startDate);\r\n      state.startDateString = startDateString;\r\n      var today = getEarlierDate(0);\r\n      var endDate = getNextSaturday(today);\r\n      var endDateString = dateToString(endDate);\r\n      state.endDateString = endDateString;\r\n\r\n      if (this.state.canViewHeatmap) {\r\n        const heatMapJson = await httpGet(`${protocol}://${domain}/api/reports/individualHeatmap/?student_id=${state.id}&startdate=${startDateString}&enddate=${endDateString}`);\r\n        state.heatMapJson = heatMapJson;\r\n      }\r\n\r\n      this.setState(function (previousState, currentProps) {\r\n        return state;\r\n      });\r\n    }\r\n    catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  async updateStudentInfo() {\r\n    const studentInfoJson = await httpGet(`${protocol}://${domain}/api/student_info/?student_id=${this.state.id}`);\r\n    var returnedState = this.parseStudentInfo(this.state, studentInfoJson);\r\n\r\n    this.setState(function (previousState, currentProps) {\r\n      return {\r\n        profileInfo: returnedState.profileInfo,\r\n        profileInfoPrelim: returnedState.profileInfoPrelim\r\n      };\r\n    });\r\n  }\r\n\r\n  addTypes(state) {\r\n    for (var entry in state.profileInfo) {\r\n      state.profileInfo[entry].patchPost.student_id = state.id;\r\n      state.profileInfoPrelim[entry].patchPost.student_id = state.id;\r\n\r\n      // Ensure all varchar(x) types get caught as str_value\r\n      if ((/varchar.*/g).test(state.profileInfo[entry].colInfo.type)) {\r\n        state.profileInfo[entry].type = 'str_value';\r\n        state.profileInfoPrelim[entry].type = 'str_value';\r\n      } else {\r\n        state.profileInfo[entry].type = state.profileInfo[entry].colInfo.type + '_value';\r\n        state.profileInfoPrelim[entry].type = state.profileInfo[entry].colInfo.type + '_value';\r\n      }\r\n    }\r\n    return state;\r\n  }\r\n\r\n  parseStudentInfo(state, info) {\r\n    for (var entry in state.profileInfo) {\r\n      state.profileInfo[entry].patchPost.student_id = state.id;\r\n      state.profileInfoPrelim[entry].patchPost.student_id = state.id;\r\n\r\n      var type;\r\n      if ((/varchar.*/g).test(state.profileInfo[entry].colInfo.type)) {\r\n        state.profileInfo[entry].type = 'str_value';\r\n        state.profileInfoPrelim[entry].type = 'str_value';\r\n      } else {\r\n        state.profileInfo[entry].type = state.profileInfo[entry].colInfo.type + '_value';\r\n        state.profileInfoPrelim[entry].type = state.profileInfo[entry].colInfo.type + '_value';\r\n      }\r\n    }\r\n\r\n    for (var item in info) {\r\n      var infoId = info[item].info_id;\r\n      state.profileInfo[infoId - 1].patchPost = info[item];\r\n      state.profileInfoPrelim[infoId - 1].patchPost = info[item];\r\n\r\n      state.profileInfo[infoId - 1].studentInfoId = info[item].id;\r\n      state.profileInfoPrelim[infoId - 1].studentInfoId = info[item].id;\r\n\r\n      type = state.profileInfo[infoId - 1].type;\r\n      state.profileInfo[infoId - 1].value = info[item][type];\r\n      state.profileInfoPrelim[infoId - 1].value = info[item][type];\r\n    }\r\n\r\n    return state;\r\n  }\r\n\r\n  search() {\r\n    var preState = {\r\n      mode: 'search',\r\n      id: this.state.id,\r\n      profileInfo: this.state.profileInfo,\r\n      profileInfoPrelim: this.state.profileInfoPrelim\r\n    };\r\n    this.getStudentProfile(preState);\r\n  }\r\n\r\n  display() {\r\n    var preState = {\r\n      mode: 'display',\r\n      id: this.state.id,\r\n      profileInfo: this.state.profileInfo,\r\n      profileInfoPrelim: this.state.profileInfoPrelim\r\n    };\r\n    this.getStudentProfile(preState);\r\n  }\r\n\r\n  edit() {\r\n    this.setState({ mode: 'edit' });\r\n  }\r\n  \r\n  async delete(evt, state) {\r\n    evt.preventDefault();\r\n\r\n    // Ensure we have studentInfoIds from the most recent POSTs\r\n    var newState = {\r\n      mode: 'search',\r\n      id: this.state.id,\r\n      profileInfo: this.state.profileInfo,\r\n      profileInfoPrelim: this.state.profileInfoPrelim\r\n    };\r\n\r\n    try {\r\n      const studentInfoJson = await httpGet(`${protocol}://${domain}/api/student_info/?student_id=${state.id}`);\r\n\r\n      if (studentInfoJson.length === 0) {\r\n        var studentColumnJson = await httpGet(`${protocol}://${domain}/api/student_column/`);\r\n        newState.profileInfo = this.parseCols(studentColumnJson);\r\n        newState = this.addTypes(newState);\r\n      } else {\r\n        var studentColumnJson = await httpGet(`${protocol}://${domain}/api/student_column/`);\r\n        newState.profileInfo = this.parseCols(studentColumnJson);\r\n        newState = this.addTypes(newState);\r\n\r\n        var returnednewState = this.parseStudentInfo(newState, studentInfoJson);\r\n        newState.profileInfo = returnednewState.profileInfo;\r\n      }\r\n    } \r\n    catch (e) {\r\n      var studentColumnJson = await httpGet(`${protocol}://${domain}/api/student_column/`);\r\n      newState.profileInfo = this.parseCols(studentColumnJson);\r\n    }\r\n\r\n    httpDelete(`${protocol}://${domain}/api/students/`, state.profileData);\r\n\r\n    // Ensure that the autocomplete removes the entry\r\n    var entryFound = false;\r\n      var entryIndex = 0;\r\n      while (entryFound === false) {\r\n        if (state.suggestionsArray[entryIndex].id === state.profileData['id']) {\r\n          state.suggestionsArray.splice(entryIndex, 1);\r\n          entryFound = true\r\n        } else {\r\n          entryIndex++;\r\n        }\r\n      }\r\n      \r\n      this.state.mode = 'search';\r\n      this.setState(function (previousState, currentProps) {\r\n        return state;\r\n      });\r\n  }\r\n\r\n  handleNameChange(evt, state) {\r\n    var changedField = evt.target.id;\r\n    state.profileDataPrelim[changedField] = evt.target.value;\r\n    state.profileDataUpdated = true;\r\n    this.setState(function (previousState, currentProps) {\r\n      return state;\r\n    });\r\n  }\r\n\r\n  handleInfoChange(evt, state) {\r\n    var changedField = parseInt(evt.target.id);\r\n    \r\n    var newValue = evt.target.value;\r\n    var type = state.profileInfoPrelim[changedField].type;\r\n\r\n    state.profileInfoPrelim[changedField].updated = true;\r\n\r\n    // Ensure that empty strings are parsed as null values\r\n    if (newValue === '') {\r\n      newValue = null;\r\n    }\r\n\r\n    state.profileInfoPrelim[changedField].value = newValue;\r\n    state.profileInfoPrelim[changedField].patchPost[type] = newValue;\r\n\r\n    this.setState(function (previousState, currentProps) {\r\n      return state;\r\n    });\r\n  }\r\n\r\n  handleSubmit(evt, state) {\r\n    evt.preventDefault();\r\n    httpPatch(`${protocol}://${domain}/api/students/`, state.profileData)\r\n      .then(function (result) {\r\n        if ('error' in result) {\r\n          result.response.then(function (response) { alert(`Error: ${response.error}`) });\r\n        }\r\n      });\r\n    \r\n    state.profileInfo = state.profileInfoPrelim;\r\n\r\n    if (state.profileDataUpdated) {\r\n      state.profileData = JSON.parse(JSON.stringify(state.profileDataPrelim));\r\n      httpPatch(`${protocol}://${domain}/api/students/`, state.profileData);\r\n    }\r\n    var posted = false;\r\n    for (var field in state.profileInfo) {\r\n      var field = state.profileInfo[field];\r\n      if (field.updated) {\r\n        if (field.studentInfoId) {\r\n          if (field.colInfo.name == 'photopath') {\r\n            httpPatchFile(`${protocol}://${domain}/api/student_info/?id=` + field.studentInfoId, field.patchPost)\r\n              .then(function (result) {\r\n                if ('error' in result) {\r\n                  result.response.then(function (response) { alert(`Error: ${response.error}`) });\r\n                }\r\n              });\r\n          } else {\r\n            httpPatch(`${protocol}://${domain}/api/student_info/?id=` + field.studentInfoId, field.patchPost)\r\n              .then(function (result) {\r\n                if ('error' in result) {\r\n                  result.response.then(function (response) { alert(`Error: ${response.error}`) });\r\n                }\r\n              });\r\n          }\r\n        } else {\r\n            field.patchPost.student_id = state.id;\r\n            if (field.colInfo.name == 'photopath') {\r\n              httpPostFile(`${protocol}://${domain}/api/student_info/`, field.patchPost)\r\n                .then(function (result) {\r\n                  if ('error' in result) {\r\n                    result.response.then(function (response) { alert(`Error: ${response.error}`) });\r\n                  } else {\r\n                    posted = true;\r\n                  }\r\n                });\r\n            }\r\n            else {\r\n              httpPost(`${protocol}://${domain}/api/student_info/`, field.patchPost)\r\n                .then(function (result) {\r\n                  if ('error' in result) {\r\n                    result.response.then(function (response) { alert(`Error: ${response.error}`) });\r\n                  } else {\r\n                    posted = true;\r\n                  }\r\n                });\r\n            }\r\n        }\r\n      }\r\n    }\r\n    \r\n    if (posted) {\r\n      this.updateStudentInfo();\r\n    }\r\n\r\n\r\n    // Ensure that the autocomplete component has an updated copy of the profile\r\n    var entryFound = false;\r\n    var entryIndex = 0;\r\n    while (entryFound === false) {\r\n      if (state.suggestionsArray[entryIndex].id === state.profileData['id']) {\r\n        state.suggestionsArray[entryIndex] = {\r\n          firstName: state.profileData['first_name'],\r\n          id: state.profileData['id'],\r\n          lastName1: state.profileData['last_name'],\r\n          lastName2: ''\r\n        };\r\n        entryFound = true\r\n      } else {\r\n        entryIndex++;\r\n      }\r\n    }\r\n    \r\n    // Get studentinfoid\r\n    this.getStudentProfile(state);\r\n    this.renderDisplayInfo(this.state.profileInfo);\r\n    state.id = state.profileData.id;\r\n    state.mode = 'display';\r\n\r\n\r\n    this.setState(function (previousState, currentProps) {\r\n      return state;\r\n    });\r\n  }\r\n\r\n  sameDay(d1, d2) {\r\n    return d1.getFullYear() === d2.getFullYear() &&\r\n      d1.getMonth() === d2.getMonth() &&\r\n      d1.getDate() === d2.getDate();\r\n  }\r\n\r\n  compareTime(time1, time2) {\r\n    return new Date(time1) > new Date(time2); // true if time1 is later\r\n  }\r\n\r\n  formatData(state) {\r\n    //replace hyphens in date string with slashes b/c javascript Date object requires this (weird)\r\n    var startDateString = state.startDateString;\r\n    var endDateString = state.endDateString;\r\n    var startDate = new Date(startDateString.replace(/-/g, '/'));\r\n    var endDate = new Date(endDateString.replace(/-/g, '/'));\r\n    var dateToCompare = startDate;\r\n    //console.log(\"start date :\", startDateString);\r\n    //console.log(\"end date :\", endDateString);\r\n    var currEntryDate;\r\n    var currIdx = 0;\r\n    var heatMapJson = this.state.heatMapJson;\r\n\r\n    if (heatMapJson.length === 0) {\r\n      var firstEntry = { \"date\": startDateString, \"daily_visits\": 0 }\r\n      heatMapJson.push(firstEntry);\r\n    }\r\n    //Add dummy date entries for missing dates (dates with no engagements) to json btwn start and end date\r\n    //dateToCompare always incremented by 1\r\n    while (this.compareTime(dateToCompare, endDate) === false) {\r\n      //if reached the end of json but there's still dates to fill in up to the end date, stay on end entry\r\n      if (currIdx > heatMapJson.length - 1) {\r\n        currIdx = heatMapJson.length - 1;\r\n      }\r\n      currEntryDate = new Date(heatMapJson[currIdx][\"date\"].replace(/-/g, '/'));\r\n      //identified missing date, so add dummy date entry for missing date\r\n      if (this.sameDay(dateToCompare, currEntryDate) === false) {\r\n        var dateEntryZeroEngagements = { \"date\": dateToCompare.toISOString().slice(0, 10), \"daily_visits\": 0 };\r\n        //add entry in place if not at end of json OR final date entry has not been added yet/surpassed\r\n        //else add to very end of json \r\n        if (currIdx !== heatMapJson.length - 1 || this.compareTime(currEntryDate, dateToCompare)) {\r\n          heatMapJson.splice(currIdx, 0, dateEntryZeroEngagements);\r\n        } else {\r\n          heatMapJson.splice(currIdx + 1, 0, dateEntryZeroEngagements);\r\n        }\r\n      }\r\n      dateToCompare.setDate(dateToCompare.getDate() + 1);\r\n      currIdx++;\r\n     }\r\n  \r\n      //Time to convert updated JSON with missing dates added in into\r\n    //a list called processedData of {\"x\": integer day of week, \"y\": integer week # of month, \"color\": int num engagements per day} objs\r\n    //console.log(\"unproc json: \", heatMapJson);\r\n    var processedData = [];\r\n    var dayOfWeek, weekNum, dayEntry;\r\n    var currDateObj;\r\n    var strDays = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n    for (var i = 0; i < heatMapJson.length; i++) {\r\n      currDateObj = new Date(heatMapJson[i]['date'].replace(/-/g, '/'));\r\n      dayOfWeek = strDays[currDateObj.getDay()];\r\n      weekNum = Math.floor(i / 7);\r\n      dayEntry = { \"x\": dayOfWeek, \"y\": (weekNum+1).toString(), \"color\": heatMapJson[i]['daily_visits']};\r\n      processedData.push(dayEntry);\r\n     }\r\n     //console.log(\"processed: \", processedData);\r\n     return processedData;\r\n   }\r\n\r\n  renderDisplayInfo = () => {\r\n    let info = [];\r\n    \r\n    var fields = this.state.profileInfo;\r\n    for (var field in fields) {\r\n      if (fields[field].colInfo.is_showing === true) {\r\n        var value = 'N/A';\r\n        if (fields[field].value !== null && fields[field].value !== null !== '') {\r\n          value = fields[field].value;\r\n        }\r\n        var innerHtml = fields[field].colInfo.name + ': ' + value;\r\n        info.push(<ListGroupItem key={field}>{innerHtml}</ListGroupItem>);\r\n      }\r\n    }\r\n    \r\n\r\n    return info;\r\n  }\r\n\r\n  renderEditInfo = () => {\r\n    let info = [];\r\n\r\n    for (var entry in this.state.profileInfo) {\r\n      var label = this.state.profileInfo[entry].colInfo.name + ': ';\r\n      if (this.state.profileInfo[entry].colInfo.is_showing) {\r\n        info.push(<Label key={entry + 'label'}>{label}</Label>)\r\n\r\n        var type = this.state.profileInfo[entry].colInfo.type;\r\n        info.push(<FormControl key={label} type={type} id={entry} defaultValue={this.state.profileInfo[entry].value} onChange={evt => this.handleInfoChange(evt, this.state)} />);\r\n        info.push(<br key={entry + 'break'}/>);\r\n      }\r\n    }\r\n    return info;\r\n  }\r\n                  \r\n  getPic = () => {\r\n        var pic;\r\n        if (this.state.uploadedPic) {\r\n          pic = this.state.src;\r\n        } else {\r\n          pic = blankPic;\r\n        }\r\n        return pic;\r\n  }\r\n\r\n  readImage(evt, state) {\r\n    evt.preventDefault();\r\n    this.setState({picUpdated: false});\r\n    state.profileInfo = JSON.parse(JSON.stringify(state.profileInfoPrelim));\r\n    state.profileInfoPrelim[5].value = evt.target.files[0];\r\n    state.profileInfoPrelim[5].updated = true;\r\n    state.profileInfoPrelim[5].patchPost.photo_value = evt.target.files[0];\r\n    this.setState(function (previousState, currentProps) {\r\n      return state;\r\n    });\r\n  }\r\n\r\n  render() {\r\n    let permissions = getPermissions()\r\n    if (permissions.indexOf('view_students') < 0) {\r\n      return (<Redirect to='/attendance' />);\r\n    }\r\n    if (this.state.mode === 'search') {\r\n      return (\r\n        <div className='content'>\r\n          <h1> Key Students </h1>\r\n          <div className='container-fluid no-padding'>\r\n            <div className='row justify-content-start'>\r\n              <div className='col-md-12 to-front top-bottom-padding'>\r\n                <Autocomplete\r\n                  suggestions={this.state.suggestionsArray}\r\n                  handler={this.handler}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    else if (this.state.mode === 'display') {\r\n      let heatmap = [];\r\n      if (this.state.canViewHeatmap) {\r\n        heatmap = <div><h3>Student Attendance</h3>\r\n          <p>Number of engagements for this individual student in the past month.</p>\r\n          <p><b>Note:</b> Data is displayed chronologically, with row 1 representing the oldest week and row 5 representing the current week.</p> \r\n          <Heatmap data={this.formatData(this.state)} heatMapType=\"individualStudent\" /></div>\r\n      }\r\n      return (\r\n        <div className='content'>\r\n          <h1> Student Profile </h1>\r\n          <div className='container-fluid no-padding'>\r\n            <div className='row justify-content-start'>\r\n              <div className='col-md-4 to-front top-bottom-padding'>\r\n                <Autocomplete\r\n                  suggestions={this.state.suggestionsArray}\r\n                  handler={this.handler}\r\n                />\r\n              </div>\r\n              <div className='col-md-8 top-bottom-padding'>\r\n                <img id=\"studentPhoto\" src={this.getPic(this.state.parsedInfo)} width=\"196\" height=\"196\" /><br />\r\n                <ListGroup>\r\n                  <ListGroupItem>Name: {this.state.profileData.first_name} {this.state.profileData.last_name}</ListGroupItem>\r\n                  {this.renderDisplayInfo(this.state.parsedInfo)}\r\n                </ListGroup>\r\n                <Button variant=\"btn btn-primary\" onClick={this.edit}>\r\n                  Edit\r\n                </Button>\r\n\t\t\t  </div>\r\n        \t</div>\r\n\t\t  </div>\r\n      {heatmap}\r\n\t\t</div>\r\n      );\r\n    }\r\n    else if (this.state.mode === 'edit') {\r\n      let deleteButton = []\r\n      if (this.state.canDeleteStudent) {\r\n        deleteButton = <ButtonToolbar>\r\n          <Button bsStyle=\"danger\" onClick={evt => { if (window.confirm('Are you sure you wish to delete this student?')) this.delete(evt, this.state) }}>Delete</Button>\r\n        </ButtonToolbar>\r\n      }\r\n      return (\r\n        <div className='content'>\r\n          <h1> Student Profile </h1>\r\n          <div className='container-fluid no-padding'>\r\n            <div className='row justify-content-start'>\r\n              <div className='col-md-4 to-front top-bottom-padding'>\r\n                <Autocomplete\r\n                  suggestions={this.state.suggestionsArray}\r\n                  handler={this.handler}\r\n                />\r\n              </div>\r\n              <div className='col-md-8 top-bottom-padding'>\r\n                <img id=\"studentPhoto\" src={this.getPic(this.state.parsedInfo)} width=\"196\" height=\"196\" />\r\n                <p> Upload Student Profile Photo </p>\r\n                <input id=\"upload-button\" type=\"file\" accept=\"image/*\" name={this.state.profileInfo[0].patchPost.student_id} onChange={evt => this.readImage(evt, this.state)} /><br />\r\n                <Form inline className='col-md-8 top-bottom-padding' onSubmit={evt => this.handleSubmit(evt, this.state)}>\r\n                  <FormGroup>\r\n                    <Label>First Name: </Label>\r\n                      <FormControl type=\"text\" id=\"first_name\" defaultValue={this.state.profileData.first_name} onChange={evt => this.handleNameChange(evt, this.state)} /> <br/>\r\n                    <Label>Last Name: </Label>\r\n                      <FormControl type=\"text\" id=\"last_name\" defaultValue={this.state.profileData.last_name} onChange={evt => this.handleNameChange(evt, this.state)} /> <br/>\r\n                    {this.renderEditInfo(this.state.parsedInfo)}\r\n                    <br/>\r\n                    <ButtonToolbar>\r\n                      <Button bsStyle=\"primary\" type=\"submit\">Submit</Button>\r\n                      <Button bsStyle=\"default\" onClick={this.display}>Cancel</Button>\r\n                    </ButtonToolbar>\r\n                    <br />\r\n                    {deleteButton}\r\n                  </FormGroup>\r\n                </Form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Students;\r\n","// BarChart.js\r\nimport React from 'react';\r\nimport {\r\n    XYPlot,\r\n    XAxis, // Shows the values on x axis\r\n    YAxis, // Shows the values on y axis\r\n    VerticalBarSeries,\r\n    LabelSeries\r\n} from 'react-vis';\r\nimport PropTypes from \"prop-types\";\r\nclass BarChart extends React.Component {\r\n\r\n    static propTypes = {\r\n        barChartJson: PropTypes.instanceOf(Array),\r\n    };\r\n\r\n    static defaultProps = {\r\n        data: [],\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: props.data\r\n        };\r\n    }\r\n    render() {\r\n        const data = this.props.data;\r\n        const chartWidth = 400;\r\n        const chartHeight = 350;\r\n        const chartDomain = [0, 350];\r\n        return (\r\n            <XYPlot\r\n                xType=\"ordinal\"\r\n                width={chartWidth}\r\n                height={chartHeight}\r\n                yDomain={chartDomain}\r\n            >\r\n                <XAxis />\r\n                <YAxis />\r\n                <VerticalBarSeries\r\n                    data={data}\r\n                />\r\n                <LabelSeries\r\n                    data={data.map(obj => {\r\n                        return { ...obj, label: obj.y.toString() }\r\n                    })}\r\n                    labelAnchorX=\"middle\"\r\n                    labelAnchorY=\"text-after-edge\"\r\n                />\r\n            </XYPlot>\r\n        );\r\n    }\r\n}\r\nexport default BarChart;","import React from 'react';\r\nimport { Form, FormGroup, ControlLabel, FormControl, Button } from 'react-bootstrap';\r\nimport { httpGet, protocol, domain, downloadReportsCSV } from './Helpers';\r\n\r\nclass AttendanceByProgramReport extends React.Component {\r\n    constructor(props) {\r\n    \tsuper(props);\r\n  \r\n      \tthis.state = {\r\n\t\t\tactivities: [],\r\n\t\t\tactivityName: \"\",\r\n\t\t\tactivityNumber: 0,\r\n\t\t\tbuildingCSV: false,\r\n\t\t\tstartDate: \"\",\r\n\t\t\tendDate: \"\",\r\n\t\t};\r\n\r\n\t\tthis.handleActivityDropdownSelect = this.handleActivityDropdownSelect.bind(this);\r\n\t\tthis.updateEndDate = this.updateEndDate.bind(this);\r\n\t\tthis.updateStartDate = this.updateStartDate.bind(this);\r\n\t\tthis.downloadCSV = this.downloadCSV.bind(this);\r\n\t}\r\n\r\n\tasync downloadCSV() {\r\n\t\tconst { startDate, endDate, activityNumber, activityName } = this.state;\r\n\t\tif (startDate === \"\" || endDate === \"\") {\r\n\t\t  return\r\n\t\t}\r\n\t\tthis.setState({ buildingCSV: true });\r\n\t\tconst sheet = []\r\n\t\tconst columns = ['Date', 'Student Name', 'Student Key']\r\n\t\tconst title = `${activityName}_${startDate}-${endDate}`\r\n\t\tconst items = await httpGet(`${protocol}://${domain}/api/reports/byActivityAttendance/?startdate=${startDate}&enddate=${endDate}&activity=${activityNumber}`)\r\n\t\tconst students = await httpGet(`${protocol}://${domain}/api/students/`)\r\n\t\t\r\n\t\t// sheet should look like: \r\n\t\t// Date | Student Name | Student Key \r\n\r\n\t\tfor (let itemIndex in items) {\r\n\t\t\tlet studentName = \"\";\r\n\t\t\tlet studentKey = \"\";\r\n\t\t\tfor (let studentIndex in students) {\r\n\t\t\t\tif (students[studentIndex].id === items[itemIndex].student_id) {\r\n\t\t\t\t\tstudentName = students[studentIndex].first_name + \" \" + students[studentIndex].last_name\r\n\t\t\t\t\tstudentKey = students[studentIndex].student_key\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet row = []\r\n\t\t\trow[0] = items[itemIndex].date;\r\n\t\t\trow[1] = studentName\r\n\t\t\trow[2] = (studentKey === null ? \"N/A\" : studentKey)\r\n\t\t\tsheet.push(row);\r\n\t\t}\r\n\r\n\t\tawait downloadReportsCSV(sheet, columns, title);\r\n\t\tthis.setState({ buildingCSV: false });\r\n\t}\r\n\r\n\tupdateStartDate(e) {\r\n    \tthis.setState({startDate: e.target.value});\r\n    }\r\n\r\n    updateEndDate(e) {\r\n    \tthis.setState({endDate: e.target.value});\r\n    }\r\n\r\n\tasync componentDidMount() {\r\n\t\tconst activities = await httpGet(`${protocol}://${domain}/api/activities/`);\r\n        this.setState({activities: activities, activityName: activities[0].name, activityNumber: activities[0].activity_id});\r\n\t}\r\n\r\n\thandleActivityDropdownSelect(e) {\r\n\t\tconst { activities } = this.state;\r\n\t\tlet activityName = e.target.value;\r\n\t\tlet activityNumber = 0;\r\n\t\tfor (let key in activities) {\r\n\t\t\tif (activities[key].name === activityName) {\r\n\t\t\t\tactivityNumber = activities[key].activity_id;\r\n\t\t\t}\r\n\t\t}\r\n    \tthis.setState({activityName: activityName, activityNumber: activityNumber});\r\n    }\r\n\t\r\n\trender() {\r\n\t\tconst activityList = this.state.activities.map((item, i) => <option value={item.name} key={`item${i}`}>{item.name}</option>)\r\n\t\tconst {buildingCSV} = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h3> Download Attendance by Program </h3>\r\n\t\t\t\t<p>Downloads a spreadsheet containing all attendance records between two dates for a given program.</p>\r\n                <Form inline style={{paddingRight: '5px', paddingLeft: '5px'}}>\r\n                  <FormGroup>\r\n                    <ControlLabel>Program: </ControlLabel>{' '}\r\n                    <FormControl componentClass=\"select\" \r\n                      name=\"type\" \r\n                      onChange={this.handleActivityDropdownSelect}\r\n                      defaultValue=\"string\"\r\n                    >\r\n                    \t{activityList}\r\n                    </FormControl>{'  '}\r\n                    <ControlLabel>Start Date:</ControlLabel>{' '}\r\n                    <FormControl onChange={this.updateStartDate} value={this.state.startDate} type=\"date\"/>{'  '}\r\n                    <ControlLabel>End Date:</ControlLabel>{' '}\r\n                    <FormControl onChange={this.updateEndDate} value={this.state.endDate} type=\"date\"/>{'  '}\r\n                    <Button onClick={this.downloadCSV} disabled={buildingCSV}>{buildingCSV ? 'Downloading...' : 'Download'}</Button>\r\n                  </FormGroup>\r\n                </Form>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default AttendanceByProgramReport;\r\n","import React from 'react';\r\nimport { Form, FormGroup, ControlLabel, FormControl, Button } from 'react-bootstrap';\r\nimport { httpGet, protocol, domain, downloadReportsCSV } from './Helpers';\r\n\r\nclass NewStudentsReport extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tbuildingCSV: false,\r\n\t\t\tstartDate: \"\",\r\n\t\t\tendDate: \"\",\r\n\t\t};\r\n\r\n\t\tthis.updateEndDate = this.updateEndDate.bind(this);\r\n\t\tthis.updateStartDate = this.updateStartDate.bind(this);\r\n\t\tthis.downloadCSV = this.downloadCSV.bind(this);\r\n\t}\r\n\r\n\tasync downloadCSV() {\r\n\t\tconst { startDate, endDate } = this.state;\r\n\t\tif (startDate === \"\" || endDate === \"\") {\r\n\t\t  return\r\n\t\t}\r\n\t\tthis.setState({ buildingCSV: true });\r\n\t\tconst sheet = [];\r\n\t\tconst columns = ['Student Name', 'Student Key'];\r\n\t\tconst title = `New_Students_${startDate}-${endDate}`;\r\n\t\tconst ids = await httpGet(`${protocol}://${domain}/api/reports/newStudents/?startdate=${startDate}&enddate=${endDate}`);\r\n\t\tconst students = await httpGet(`${protocol}://${domain}/api/students/`);\r\n\r\n\t\t// sheet should look like: \r\n\t\t// Student Name | Student Key \r\n\r\n\t\tconsole.log(ids);\r\n\r\n\t\tfor (let i in ids.newStudents) {\r\n\t\t\tlet studentName = \"\";\r\n\t\t\tlet studentKey = \"\";\r\n\t\t\tfor (let studentIndex in students) {\r\n\t\t\t\tif (students[studentIndex].id === ids.newStudents[i]) {\r\n\t\t\t\t\tstudentName = students[studentIndex].first_name + \" \" + students[studentIndex].last_name;\r\n\t\t\t\t\tstudentKey = students[studentIndex].student_key;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet row = []\r\n\t\t\trow[0] = studentName;\r\n\t\t\trow[1] = (studentKey === null ? \"N/A\" : studentKey);\r\n\t\t\tsheet.push(row);\r\n\t\t}\r\n\r\n\t\tawait downloadReportsCSV(sheet, columns, title);\r\n\t\tthis.setState({ buildingCSV: false });\r\n\t}\r\n\r\n\tupdateStartDate(e) {\r\n    \tthis.setState({startDate: e.target.value});\r\n    }\r\n\r\n  \tupdateEndDate(e) {\r\n  \t\tthis.setState({endDate: e.target.value});\r\n  \t}\r\n\r\n\trender() {\r\n\t\tconst {buildingCSV} = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h3> Download New Student Report </h3>\r\n\t\t\t\t<p>Downloads a spreadsheet containing all students that were checked in for the first time between two dates</p>\r\n                <Form inline style={{paddingRight: '5px', paddingLeft: '5px'}}>\r\n                  <FormGroup>\r\n                    <ControlLabel>Start Date:</ControlLabel>{' '}\r\n                    <FormControl onChange={this.updateStartDate} value={this.state.startDate} type=\"date\"/>{'  '}\r\n                    <ControlLabel>End Date:</ControlLabel>{' '}\r\n                    <FormControl onChange={this.updateEndDate} value={this.state.endDate} type=\"date\"/>{'  '}\r\n                    <Button onClick={this.downloadCSV} disabled={buildingCSV}>{buildingCSV ? 'Downloading...' : 'Download'}</Button>\r\n                  </FormGroup>\r\n                </Form>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default NewStudentsReport;\r\n","import React from 'react';\r\nimport { Form, FormGroup, ControlLabel, FormControl, Button } from 'react-bootstrap';\r\nimport { httpGet, protocol, domain, downloadReportsCSV } from './Helpers';\r\n\r\nclass MilestoneReport extends React.Component {\r\n    constructor(props) {\r\n    \tsuper(props);\r\n  \r\n      \tthis.state = {\r\n\t\t\tmilestone: 30,\r\n\t\t\tbuildingCSV: false,\r\n\t\t\tstartDate: \"\",\r\n\t\t\tendDate: \"\",\r\n\t\t};\r\n\r\n\t\tthis.updateEndDate = this.updateEndDate.bind(this);\r\n\t\tthis.updateStartDate = this.updateStartDate.bind(this);\r\n\t\tthis.updateMilestone = this.updateMilestone.bind(this);\r\n\t\tthis.downloadCSV = this.downloadCSV.bind(this);\r\n\t}\r\n\r\n\tasync downloadCSV() {\r\n\t\tconst { startDate, endDate, milestone } = this.state;\r\n\t\tif (startDate === \"\" || endDate === \"\") {\r\n\t\t  return\r\n\t\t}\r\n\t\tthis.setState({ buildingCSV: true });\r\n\t\tconst sheet = []\r\n\t\tconst columns = ['Student Name', 'Student Key']\r\n\t\tconst title = `Milestone_${milestone}_${startDate}-${endDate}`\r\n\t\tconst ids = await httpGet(`${protocol}://${domain}/api/reports/milestones/?startdate=${startDate}&enddate=${endDate}&milestone=${milestone}`)\r\n\t\tconst students = await httpGet(`${protocol}://${domain}/api/students/`)\r\n\r\n\t\t// sheet should look like: \r\n\t\t// Student Name | Student Key \r\n\r\n\t\tfor (let i in ids.milestoneStudents) {\r\n\t\t\tlet studentName = \"\";\r\n\t\t\tlet studentKey = \"\";\r\n\t\t\tfor (let j in students) {\r\n\t\t\t\tif (students[j].id === ids.milestoneStudents[i]) {\r\n\t\t\t\t\tstudentName = students[j].first_name + \" \" + students[j].last_name\r\n\t\t\t\t\tstudentKey = students[j].student_key\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlet row = []\r\n\t\t\trow[0] = studentName\r\n\t\t\trow[1] = (studentKey === null ? \"N/A\" : studentKey)\r\n\t\t\tsheet.push(row);\r\n\t\t}\r\n\r\n\t\tawait downloadReportsCSV(sheet, columns, title);\r\n\t\tthis.setState({ buildingCSV: false });\r\n\t}\r\n\r\n\tupdateStartDate(e) {\r\n    \tthis.setState({startDate: e.target.value});\r\n    }\r\n\r\n\tupdateEndDate(e) {\r\n    \tthis.setState({endDate: e.target.value});\r\n\t}\r\n\t\r\n\tupdateMilestone(e) {\r\n\t\t\tthis.setState({milestone: e.target.value});\r\n\t}\t\r\n\trender() {\r\n\t\tconst {buildingCSV} = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<h3> Download Attendance Milestones </h3>\r\n\t\t\t\t<p>Downloads a spreadsheet containing a list of students who reached a given attendance milestone between two dates.</p>\r\n\t\t\t\t<p>For instance, if the milestone was set to 30, the spreadsheet would list the students to attended the Key for their 30th time between two given dates</p>\r\n                <Form inline style={{paddingRight: '5px', paddingLeft: '5px'}}>\r\n                  <FormGroup>\r\n\t\t\t\t\t\t\t\t\t\t<ControlLabel>Milestone:</ControlLabel>{' '}\r\n                    <FormControl onChange={this.updateMilestone} value={this.state.milestone} type=\"number\"/>{'  '}\r\n                    <ControlLabel>Start Date:</ControlLabel>{' '}\r\n                    <FormControl onChange={this.updateStartDate} value={this.state.startDate} type=\"date\"/>{'  '}\r\n                    <ControlLabel>End Date:</ControlLabel>{' '}\r\n                    <FormControl onChange={this.updateEndDate} value={this.state.endDate} type=\"date\"/>{'  '}\r\n                    <Button onClick={this.downloadCSV} disabled={buildingCSV}>{buildingCSV ? 'Downloading...' : 'Download'}</Button>\r\n                  </FormGroup>\r\n                </Form>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default MilestoneReport;\r\n","import React, { Component } from 'react';\r\nimport { Button, ButtonToolbar, Form, ControlLabel, FormControl, FormGroup, Tabs, Tab } from 'react-bootstrap';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Heatmap from '../components/Heatmap';\r\nimport { domain, downloadReportsCSV, getEarlierDate, dateToString, getNextSaturday, getPrevSunday, getPermissions, httpGet, protocol, downloadAttendanceCSV } from '../components/Helpers';\r\nimport BarChart from './../components/BarChart.js';\r\nimport AttendanceByProgramReport from '../components/AttendanceByProgramReport';\r\nimport NewStudentsReport from '../components/NewStudentsReport';\r\nimport MilestoneReport from '../components/MilestoneReport';\r\n\r\nclass Reports extends Component {\r\n\r\n    \r\n    //Initialize state vars that will be reused thru various functions in this component!\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            startDateStringWeek: \"\",\r\n            endDateStringWeek: \"\",\r\n            startDateStringYear: \"\",\r\n            endDateStringYear: \"\",\r\n            byHourJson: [],\r\n            byHourJsonForDownload: [],\r\n            byDayJson: [],\r\n            byDayJsonForDownload: [],\r\n            byDayInPastWeekJson: [],\r\n            byDayInPastWeekForDownload : [],\r\n            byDayHeatMap: [],\r\n            dateOne: \"\",\r\n            dateTwo: \"\",\r\n            buildingCSV: false,\r\n            tab: 1,\r\n        };\r\n        //Initialize vars to handle download csv buttons\r\n        this.downloadHourlyCSV = this.downloadHourlyCSV.bind(this);\r\n        this.downloadWeeklyCSV = this.downloadWeeklyCSV.bind(this);\r\n        this.downloadYearlyCSV = this.downloadYearlyCSV.bind(this);\r\n        this.updateDateOne = this.updateDateOne.bind(this);\r\n        this.updateDateTwo = this.updateDateTwo.bind(this);\r\n        this.downloadCSV = this.downloadCSV.bind(this);\r\n        this.handleTabSelect = this.handleTabSelect.bind(this);\r\n      }\r\n\r\n      async componentDidMount() {\r\n        try {\r\n          //Set time range for weekly report (broken down by hour) as the past 7 days\r\n          var today = getEarlierDate(0);\r\n          var startDateWeek = getEarlierDate(6);\r\n          var startDateStringWeek = dateToString(startDateWeek);\r\n          var endDateStringWeek = dateToString(today);\r\n          const byHourJson = await httpGet(`${protocol}://${domain}/api/reports/byHourAttendance/?startdate=${startDateStringWeek}&enddate=${endDateStringWeek}`);\r\n          //Set time range for annual report as the last 365 days, \r\n          //extending back to the preceeding sunday and forward to the following saturday\r\n          var startDateYear= getEarlierDate(365);\r\n          startDateYear = getPrevSunday(startDateYear);\r\n          var startDateStringYear = dateToString(startDateYear);\r\n          var endDateYear = getNextSaturday(today);\r\n          var endDateStringYear = dateToString(endDateYear);\r\n          const byDayJson = await httpGet(`${protocol}://${domain}/api/reports/byDayAttendance/?startdate=${startDateStringYear}&enddate=${endDateStringYear}`);\r\n          //Call helper funcs to format the datasets broken down by day and hour\r\n          await this.formatDayData(byDayJson, startDateStringYear, endDateStringYear, startDateWeek);\r\n          await this.formatHourData(byHourJson, startDateStringWeek, endDateStringWeek);\r\n        } catch (e) {\r\n          console.log(e);\r\n        }\r\n      }\r\n\r\n      //Series of functions to handle download csv buttons\r\n      handleTabSelect(tab) {\r\n        this.setState({ tab });\r\n      }\r\n\r\n      updateDateOne(e) {\r\n        this.setState({dateOne: e.target.value});\r\n      }\r\n\r\n      updateDateTwo(e) {\r\n        this.setState({dateTwo: e.target.value});\r\n      }\r\n\r\n      async downloadCSV() {\r\n          if (this.state.dateOne === \"\" || this.state.dateTwo === \"\") {\r\n            return\r\n          }\r\n          this.setState({ buildingCSV: true });\r\n          await downloadAttendanceCSV(this.state.dateOne, this.state.dateTwo)\r\n          this.setState({ buildingCSV: false });\r\n      }\r\n    \r\n      downloadHourlyCSV() {\r\n        this.setState({ buildingCSV: true });\r\n        var title = \"Reports_Hourly_Attendance_\".concat(this.state.startDateStringWeek);\r\n        title = title.concat(\"_to_\");\r\n        title = title.concat(this.state.endDateStringWeek);\r\n        downloadReportsCSV(this.state.byHourJsonForDownload, [\"Date\", \"Hour\", \"# Engagements\"], title);\r\n        this.setState({ buildingCSV: false });\r\n      }\r\n\r\n      downloadWeeklyCSV() {\r\n        this.setState({ buildingCSV: true });\r\n        var title = \"Reports_Daily_Attendance_\".concat(this.state.startDateStringWeek);\r\n        title = title.concat(\"_to_\");\r\n        title = title.concat(this.state.endDateStringWeek);\r\n        downloadReportsCSV(this.state.byDayInPastWeekForDownload, [\"Date\",\"# Engagements\"], title);\r\n        this.setState({ buildingCSV: false });\r\n      }\r\n\r\n      downloadYearlyCSV() {\r\n        this.setState({ buildingCSV: true });\r\n        var title = \"Reports_Annual_Attendance_\".concat(this.state.startDateStringYear);\r\n        title = title.concat(\"_to_\");\r\n        title = title.concat(this.state.endDateStringYear);\r\n        downloadReportsCSV(this.state.byDayJsonForDownload, [\"Date\", \"# Engagements\"], title);\r\n        this.setState({ buildingCSV: false });\r\n      }\r\n\r\n      //Given two JS Date objects, returns True if the two Dates represent the same day; False otherwise\r\n      sameDay(d1, d2) {\r\n        return d1.getFullYear() === d2.getFullYear() &&\r\n          d1.getMonth() === d2.getMonth() &&\r\n          d1.getDate() === d2.getDate();\r\n      }\r\n\r\n      //Given two JS Date objects, returns True if first Date (time1) is later\r\n      compareTime(time1, time2) {\r\n        return new Date(time1) > new Date(time2);\r\n      }\r\n\r\n      //Format json data from day-of-yr API return into format usable by heatmap (and also add missing entries)\r\n      formatDayData(state, startDateStringYear, endDateStringYear, startDateWeek) {\r\n        //replace hyphens in date string with slashes b/c javascript Date object requires this (weird)\r\n        var startDateString = startDateStringYear;\r\n        var endDateString = endDateStringYear;\r\n        //Convert timerange to JS Date objects\r\n        var startDate = new Date(startDateString.replace(/-/g, '/'));\r\n        var endDate = new Date(endDateString.replace(/-/g, '/'));\r\n        var dateToCompare = startDate;\r\n        var currEntryDate;\r\n        var currIdx = 0;\r\n        var byDayJson = state;\r\n        //If the JSON is empty, add in a dummy entry to initialize formatting\r\n        if(byDayJson.length === 0){\r\n          var firstEntry = {\"date\": startDateString, \"daily_visits\": 0}\r\n          byDayJson.push(firstEntry);\r\n        }\r\n        //Add dummy date entries for missing dates (dates with no engagements) to json btwn start and end date\r\n        //dateToCompare always incremented by 1\r\n        while (this.compareTime(dateToCompare, endDate) === false) {\r\n          //if reached the end of json but there's still dates to fill in up to the end date, stay on end entry\r\n          if (currIdx > byDayJson.length - 1) {\r\n            currIdx = byDayJson.length - 1;\r\n          }\r\n          currEntryDate = new Date(byDayJson[currIdx][\"date\"].replace(/-/g, '/'));\r\n          //identified missing date, so add dummy date entry for missing date\r\n          if (this.sameDay(dateToCompare, currEntryDate) === false) {\r\n            var dateEntryZeroEngagements = { \"date\": dateToCompare.toISOString().slice(0, 10), \"daily_visits\": 0 };\r\n            //add entry in place if not at end of json OR final date entry has not been added yet/surpassed\r\n            //else add to very end of json \r\n            if (currIdx !== byDayJson.length - 1 || this.compareTime(currEntryDate, dateToCompare)) {\r\n              byDayJson.splice(currIdx, 0, dateEntryZeroEngagements);\r\n            } else {\r\n              byDayJson.splice(currIdx + 1, 0, dateEntryZeroEngagements);\r\n            }\r\n          }\r\n          dateToCompare.setDate(dateToCompare.getDate() + 1);\r\n          currIdx++;\r\n        }\r\n\r\n        //process jsons into lists of lists and store into state for downloading as csv\r\n        var byDayJsonForDownload = [];\r\n        var byDayInPastWeekForDownload = [];\r\n        var entryAsList;\r\n        var currDateObj;\r\n        var startPastWeek = startDateWeek;\r\n        startPastWeek.setDate(startPastWeek.getDate()-1);\r\n        var endPastWeek = getEarlierDate(0);\r\n        for(var i=0; i<byDayJson.length; i++){\r\n          entryAsList = Object.values(byDayJson[i]);\r\n          byDayJsonForDownload.push(entryAsList);\r\n          //add to daily attendance csv if date is within past week\r\n          currDateObj = new Date(byDayJson[i]['date'].replace(/-/g, '/'));\r\n          if(this.compareTime(currDateObj,startPastWeek) && (this.compareTime(currDateObj,endPastWeek) == false) ){\r\n            byDayInPastWeekForDownload.push(entryAsList);\r\n          }\r\n        }\r\n\r\n        //Time to convert updated JSON with missing dates added in into\r\n        //a list called processedData of {\"x\": integer day of week, \"y\": integer week # of month, \"color\": int num engagements per day} objs\r\n        var processedData = [];\r\n        var processedDataAnnual = [];\r\n        var byDayInPastWeekJson = [];\r\n        var dayOfWeek, weekNum, dayEntry, annualHeatMapEntry, dayOfWeekConverted;\r\n        var currDateObj;\r\n        var strDays = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n        for (var i = 0; i < byDayJson.length; i++) {\r\n          currDateObj = new Date(byDayJson[i]['date'].replace(/-/g, '/'));\r\n          dayOfWeek = currDateObj.getDay();\r\n          dayOfWeekConverted = strDays[dayOfWeek];\r\n          weekNum = Math.floor(i / 7);\r\n          annualHeatMapEntry = {\"x\": weekNum+1, \"y\": dayOfWeekConverted, \"color\": byDayJson[i]['daily_visits']};\r\n          processedDataAnnual.push(annualHeatMapEntry);\r\n          dayEntry = {\"y\": byDayJson[i]['daily_visits'], \"x\": dayOfWeekConverted};\r\n          processedData.push(dayEntry);\r\n          //add to daily attendance dataset if date is within past week\r\n          if(this.compareTime(currDateObj,startPastWeek) && (this.compareTime(currDateObj,endPastWeek) == false) ){\r\n            byDayInPastWeekJson.push(dayEntry);\r\n          }\r\n        }\r\n          //Set state so these vars can be used elsewhere!\r\n          this.setState(function (previousState, currentProps) {\r\n              return {\r\n                  startDateStringYear: startDateStringYear,\r\n                  endDateStringYear : endDateStringYear,\r\n                  byDayJson : processedData,\r\n                  byDayInPastWeekJson : byDayInPastWeekJson,\r\n                  byDayJsonForDownload: byDayJsonForDownload,\r\n                  byDayInPastWeekForDownload : byDayInPastWeekForDownload,\r\n                  byDayHeatMap: processedDataAnnual\r\n\r\n              };\r\n          });\r\n        return processedData;\r\n      }\r\n\r\n      //Format json data from hour-of-week API return into format usable by heatmap (and also add missing entries)\r\n      formatHourData(state, startDateStringWeek, endDateStringWeek) {\r\n        //replace hyphens in date string with slashes b/c javascript Date object requires this (weird)\r\n        var startDateString = startDateStringWeek;\r\n        var endDateString = endDateStringWeek;\r\n        //Convert time range to JS Date objects\r\n        var startDate = new Date(startDateString.replace(/-/g, '/'));\r\n        var endDate = new Date(endDateString.replace(/-/g, '/'));\r\n        var dateToCompare = startDate;\r\n        var currEntryDate;\r\n        var currHour;\r\n        var currIdx = 0;\r\n        var byHourJson = state;\r\n        //!!!Set the Key's range of operating hours here!!!!\r\n        var hourArray = [\"14:00:00\", \"15:00:00\", \"16:00:00\", \"17:00:00\",\"18:00:00\",\"19:00:00\",\"20:00:00\",\"21:00:00\",\"22:00:00\"];\r\n        //first filter out any entries that have timestamps outside of key operating hours\r\n        byHourJson = byHourJson.filter(function(entry) {\r\n          var inValidTimeRange = hourArray.includes(entry.time);\r\n          return inValidTimeRange === true;\r\n         });\r\n        var hourToCompareIdx= 0;\r\n        var hourToCompare = hourArray[0];\r\n        //If JSON is empty, add in dummy entry to initialize formatting\r\n        if(byHourJson.length === 0){\r\n          var firstEntry = {\"date\": startDateString, \"time\": hourArray[0], \"count\": 0};\r\n          byHourJson.push(firstEntry);\r\n        }\r\n        //Add dummy date entries for missing date-hour combos (no engagements) to json btwn start and end date\r\n        while (this.compareTime(dateToCompare, endDate) === false) {\r\n          //if reached the end of json but there's still dates to fill in up to the end date, stay on end entry\r\n          if (currIdx > byHourJson.length - 1) {\r\n            currIdx = byHourJson.length - 1;\r\n          }\r\n          currEntryDate = new Date(byHourJson[currIdx][\"date\"].replace(/-/g, '/'));\r\n          currHour = byHourJson[currIdx][\"time\"];\r\n          //identified missing date, so add dummy date entry for missing date\r\n          if (this.sameDay(dateToCompare, currEntryDate) === false) {\r\n            var dateEntryZeroEngagements = { \"date\": dateToCompare.toISOString().slice(0, 10), \"time\": hourToCompare, \"count\": 0 };\r\n            //add entry in place if not at end of json OR final date entry has not been added yet/surpassed\r\n            //else add to very end of json\r\n            if (currIdx !== byHourJson.length - 1 || (this.compareTime(currEntryDate, dateToCompare))){\r\n              byHourJson.splice(currIdx, 0, dateEntryZeroEngagements);\r\n            } else {\r\n              byHourJson.splice(currIdx+1,0, dateEntryZeroEngagements);\r\n            }\r\n          }\r\n          //the two date-hour combos are on SAME DAY, but different hours so add the missing hour as a dummy entry\r\n          else if(hourToCompare !== currHour){\r\n            var dateEntryZeroEngagements = { \"date\": dateToCompare.toISOString().slice(0, 10), \"time\": hourToCompare, \"count\": 0 };\r\n            //add entry in place if not at end of json OR final date entry has not been added yet/surpassed\r\n            //else add to very end of json\r\n            if (currIdx !== byHourJson.length - 1 || currHour > hourToCompare){\r\n              byHourJson.splice(currIdx, 0, dateEntryZeroEngagements);\r\n            } else {\r\n              byHourJson.splice(currIdx+1,0, dateEntryZeroEngagements);\r\n            }\r\n          }\r\n          //the two date-hour combos match exactly\r\n          currIdx++;\r\n          if(hourToCompare === hourArray[hourArray.length-1]){\r\n           hourToCompare = \"next day\";\r\n          }\r\n          //on last hour of the current day, increment date and set hour to first hour\r\n          if(hourToCompare === \"next day\"){\r\n            dateToCompare.setDate(dateToCompare.getDate() + 1);\r\n            hourToCompare = hourArray[0];\r\n            hourToCompareIdx = 0;\r\n          }\r\n          //otherwise just increment the hour\r\n          else{\r\n            hourToCompareIdx++;\r\n            hourToCompare = hourArray[hourToCompareIdx];\r\n          }\r\n        }\r\n        //process json into list of lists and store into state for downloading as csv\r\n        var byHourJsonForDownload = [];\r\n        var entryAsList;\r\n        for(var i=0; i<byHourJson.length; i++){\r\n          entryAsList = Object.values(byHourJson[i]);\r\n          byHourJsonForDownload.push(entryAsList);\r\n        }\r\n\r\n        //Time to convert updated JSON with missing date-hour combos added in into\r\n        //a list called processedData of {\"x\": string hour of day, \"y\": string day of week, \"color\": int num engagements per day} objs\r\n        var processedData = [];\r\n        var dayOfWeek, hourEntry, hourOfDay;\r\n        var currDateObj;\r\n        var strDays = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n        for (var i = 0; i < byHourJson.length; i++) {\r\n          currDateObj = new Date(byHourJson[i]['date'].replace(/-/g, '/'));\r\n          dayOfWeek = strDays[currDateObj.getDay()];\r\n          hourOfDay = byHourJson[i]['time'].slice(0,5);\r\n          hourEntry = {\"x\": hourOfDay, \"y\": dayOfWeek, \"color\": byHourJson[i]['count']};\r\n          processedData.push(hourEntry);\r\n        }\r\n          //Set state so these vars can be used elsewhere!\r\n          this.setState(function (previousState, currentProps) {\r\n              return {\r\n                  startDateStringWeek: startDateStringWeek,\r\n                  endDateStringWeek: endDateStringWeek,\r\n                  byHourJson: processedData,\r\n                  byHourJsonForDownload: byHourJsonForDownload\r\n              };\r\n          });\r\n        return processedData;\r\n      }\r\n\r\n    render() {\r\n        const buildingCSV = this.state.buildingCSV;\r\n        const permissions = getPermissions();\r\n        if (permissions.indexOf('view_reports') < 0) {\r\n            return (<Redirect to='/attendance'/>);\r\n        }\r\n\r\n        return (\r\n          <div className=\"content\">\r\n            <Tabs activeKey={this.state.tab} onSelect={this.handleTabSelect}>\r\n              <Tab key={1} eventKey={1} title=\"Hourly Attendance\">\r\n                <h3> Hourly Attendance </h3>\r\n                <ButtonToolbar style={{ float: 'right'}}>\r\n                <Button onClick={this.downloadHourlyCSV} disabled={buildingCSV}>{buildingCSV ? 'Downloading...' : 'Download Hourly'}</Button>\r\n                </ButtonToolbar>\r\n                <p> Number of engagements per hour in <b>{this.state.startDateStringWeek}</b> to <b>{this.state.endDateStringWeek}</b>.</p>\r\n                <p><b>Note:</b> Data is displayed chronologically, with the top row representing the oldest day and the bottom row representing the current day.</p>\r\n                <Heatmap\r\n                  data = {this.state.byHourJson}\r\n                  heatMapType = \"weekly\" />\r\n              </Tab>\r\n              <Tab key={2} eventKey={2} title=\"Daily Attendance\">\r\n                <h3> Daily Attendance </h3>\r\n                <ButtonToolbar style={{ float: 'right'}}>\r\n                <Button onClick={this.downloadWeeklyCSV} disabled={buildingCSV}>{buildingCSV ? 'Downloading...' : 'Download Daily'}</Button>\r\n                </ButtonToolbar>\r\n                <p> Number of engagements per day in the past week from <b>{this.state.startDateStringWeek}</b> to <b>{this.state.endDateStringWeek}</b>.</p>\r\n                <BarChart data = {this.state.byDayInPastWeekJson}/>\r\n              </Tab>\r\n              <Tab key={3} eventKey={3} title=\"Annual Attendance\">\r\n                <h3> Annual Daily Attendance </h3>\r\n                <ButtonToolbar style={{ float: 'right'}}>\r\n                <Button onClick={this.downloadYearlyCSV} disabled={buildingCSV}>{buildingCSV ? 'Downloading...' : 'Download Annual'}</Button>\r\n                </ButtonToolbar>\r\n                <p> Number of engagements per day in the past year from <b>{this.state.startDateStringYear}</b> to <b>{this.state.endDateStringYear}</b>.</p>\r\n                <p><b>Note:</b> Data is displayed chronologically, with the leftmost column representing the oldest week and the rightmost column representing the current week.</p> \r\n                <Heatmap data = {this.state.byDayHeatMap} heatMapType = \"annual\" />\r\n              </Tab>\r\n              <Tab key={4} eventKey={4} title=\"Multi-Date Attendance Sheet\">\r\n                <h3> Download Multi-Date Attendance Sheet </h3>\r\n                <p>Combines and downloads attendance sheets from multiple dates</p>\r\n                <Form inline style={{paddingRight: '5px', paddingLeft: '5px'}}>\r\n                  <FormGroup>\r\n                    <ControlLabel>Start Date</ControlLabel>{' '}\r\n                    <FormControl onChange={this.updateDateOne} value={this.state.dateOne} type=\"date\"/>{'  '}\r\n                    <ControlLabel>End Date</ControlLabel>{' '}\r\n                    <FormControl onChange={this.updateDateTwo} value={this.state.dateTwo} type=\"date\"/>{'  '}\r\n                    <Button onClick={this.downloadCSV} disabled={buildingCSV}>{buildingCSV ? 'Downloading...' : 'Download'}</Button>\r\n                  </FormGroup>\r\n                </Form>\r\n              </Tab>\r\n              <Tab key={5} eventKey={5} title=\"Attendance By Program\">\r\n                <AttendanceByProgramReport/>\r\n              </Tab>\r\n              <Tab key={6} eventKey={6} title=\"New Students\">\r\n                <NewStudentsReport/>\r\n              </Tab>\r\n              <Tab key={7} eventKey={7} title=\"Attendance Milestones\">\r\n                <MilestoneReport/>\r\n              </Tab>\r\n            </Tabs>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\n// List of students who attended a particular category over a given time span\r\n// List of students who attended for the first time\r\n// List of students who have attended the key at least *n* number of times.\r\n\r\nexport default Reports;\r\n","import React from 'react';\r\nimport { Alert, Button, ControlLabel, FormControl, FormGroup, Modal } from 'react-bootstrap';\r\nimport { httpPost, domain, protocol } from './Helpers';\r\n\r\nclass AddUserModal extends React.Component {\r\n    \r\n    constructor(props) {\r\n\t\tsuper(props)\r\n\t\t\r\n        this.state = {\r\n            username: '',\r\n            first_name: '',\r\n            last_name: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            is_active: true,\r\n            error: false,\r\n            backendError: false,\r\n            errorMsg: '',\r\n            radioOptions: [],\r\n            show: false,\r\n            selectedOption: ''\r\n\t\t}\r\n\t\t\r\n\t\tthis.cancel = this.cancel.bind(this);\r\n\t\tthis.submit = this.submit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.validateInput = this.validateInput.bind(this);\r\n        this.handleActiveCheckbox = this.handleActiveCheckbox.bind(this);\r\n        this.createRadioOptions = this.createRadioOptions.bind(this);\r\n    }\r\n    \r\n    componentDidUpdate() {\r\n        if (this.props.show !== this.state.show) {\r\n            const radioOptions = [];\r\n            const role_names = Object.keys(this.props.role_ids);\r\n            for (var index in role_names) {\r\n                radioOptions.push({label: role_names[index], checked: false})\r\n            }\r\n            this.setState({\r\n                radioOptions: radioOptions,\r\n                show: this.props.show\r\n            });\r\n        }\r\n    }\r\n\r\n\tvalidateInput() {\r\n\t\tconst { username, password, confirmPassword } = this.state;\r\n        const regex = /^[a-z0-9.@+\\-_]+$/i;\r\n        if (username.length > 0 && password.length > 0 && password === confirmPassword \r\n            && regex.test(username) && this.state.selectedOption) {\r\n\t\t\treturn 'success';\r\n\t\t} else if (username.length === 0 && password.length === 0 && confirmPassword.length === 0) {\r\n\t\t\treturn null;\r\n\t\t} else {\r\n\t\t\treturn 'error';\r\n\t\t}\r\n    }\r\n    \r\n    handleChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState(prevstate => {\r\n            const newState = { ...prevstate };\r\n            newState[name] = value;\r\n            return newState;\r\n        });\r\n    };\r\n\r\n    handleActiveCheckbox = e => {\r\n        this.setState({is_active: !this.state.is_active});\r\n    }\r\n\r\n\tcancel() {\r\n        this.setState({\r\n            username: '',\r\n            first_name: '',\r\n            last_name: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            selectedOption: '',\r\n            is_active: true, \r\n            error: false, \r\n            backendError: false\r\n        });\r\n        this.props.onSubmit();\r\n\t}\r\n\r\n\tsubmit() {\r\n        const self = this;\r\n        self.setState({backendError: false});\r\n        if (self.validateInput() !== 'success') {\r\n            self.setState({error: true});\r\n            return;\r\n        } else {\r\n            self.setState({error: false});\r\n        }\r\n        const groups = [];\r\n        groups.push(self.props.role_ids[self.state.selectedOption])\r\n        const body = {username: self.state.username,\r\n            password: self.state.password,\r\n            first_name: self.state.first_name,\r\n            last_name: self.state.last_name,\r\n            groups: groups,\r\n            is_active: self.state.is_active};\r\n        httpPost(`${protocol}://${domain}/api/users/`, body)\r\n            .then(function (result) {\r\n                if ('error' in result) {\r\n                    result.response.then(function(response) {\r\n                        self.setState({backendError: true, errorMsg: response.error});\r\n                    });\r\n                } else {\r\n                    self.setState({\r\n                        username: '',\r\n                        first_name: '',\r\n                        last_name: '',\r\n                        password: '',\r\n                        confirmPassword: '',\r\n                        selectedOption: '',\r\n                        is_active: true, \r\n                        error: false, \r\n                        errorMsg: '',\r\n                        backendError: false\r\n                    });\r\n                    self.props.onSubmit(result);\r\n                }\r\n            })\r\n    }\r\n    \r\n    toggleRadioOptions(index) {\r\n        const { radioOptions } = this.state;\r\n        let selectedOption = '';\r\n        if (!radioOptions[index].checked) {\r\n            selectedOption = radioOptions[index].label;\r\n            for (var j in radioOptions) {\r\n                if (j !== index) {\r\n                    radioOptions[j].checked = false;\r\n                } \r\n            }\r\n        }\r\n        radioOptions[index].checked = !radioOptions[index].checked;\r\n\r\n        this.setState({\r\n            selectedOption: selectedOption,\r\n            radioOptions: radioOptions\r\n        });\r\n    }\r\n    \r\n    createRadioOptions() {\r\n        const { radioOptions } = this.state;\r\n    \r\n        return radioOptions\r\n            .map((option, index) =>\r\n                <div key={index}>\r\n                    <label>\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"userRoles\"\r\n                            value={option.label}\r\n                            checked={option.checked}\r\n                            onChange={this.toggleRadioOptions.bind(this, index)}\r\n                            className=\"form-check-input\"\r\n                        />\r\n                        {option.label}\r\n                    </label>\r\n                </div>\r\n            );\r\n    }\r\n\r\n    render() {\r\n        let errorMsg = \"Server error. Please try again.\";\r\n        if (this.state.errorMsg !== '' && this.state.errorMsg !== null && this.state.errorMsg !== undefined) {\r\n            errorMsg = this.state.errorMsg;\r\n        }\r\n        return(\r\n            <Modal show={this.props.show}>\r\n\t\t\t\t<Modal.Header>\r\n\t\t\t\t\t<Modal.Title>Create New User</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<form>\r\n\t\t\t\t\t\t<FormGroup\r\n\t\t\t\t\t\t\tvalidationState={this.validateInput()}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<ControlLabel>Username</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"text\"\r\n                                name=\"username\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.username}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Username\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<br/>\r\n                            <ControlLabel>First Name</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"text\"\r\n                                name=\"first_name\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.first_name}\r\n\t\t\t\t\t\t\t\tplaceholder=\"First Name\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<br/>\r\n                            <ControlLabel>Last Name</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"text\"\r\n                                name=\"last_name\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.last_name}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Last Name\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t<ControlLabel>Password</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"password\"\r\n                                name=\"password\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.password}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Password\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n                            <br />\r\n                            <ControlLabel>Confirm Password</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"password\"\r\n                                name=\"confirmPassword\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.confirmPassword || ''}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Confirm Password\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n                            <br />\r\n                            <ControlLabel>Active</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"checkbox\"\r\n                                checked={this.state.is_active}\r\n\t\t\t\t\t\t\t\tvalue={this.state.is_active}\r\n\t\t\t\t\t\t\t\tonChange={this.handleActiveCheckbox}\r\n\t\t\t\t\t\t\t/>\r\n                            <ControlLabel>User Roles</ControlLabel>\r\n                            {this.createRadioOptions()}\r\n\t\t\t\t\t\t\t<FormControl.Feedback />\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</Modal.Body>\r\n\r\n\t\t\t\t<Modal.Footer>\r\n                    {this.state.error && <Alert bsStyle='danger'>Invalid input. Please check your fields and try again.</Alert>}\r\n                    {this.state.backendError && <Alert bsStyle='danger'>{errorMsg}</Alert>}\r\n\t\t\t\t\t<Button onClick={this.cancel}>Cancel</Button>\r\n\t\t\t\t\t<Button onClick={this.submit} bsStyle=\"primary\">Create</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddUserModal;\r\n","import React from 'react';\r\nimport { Button, Modal, FormGroup, FormControl, ControlLabel, Alert } from 'react-bootstrap';\r\nimport { httpPatch, httpDelete, domain, protocol } from './Helpers';\r\n\r\nclass EditUserModal extends React.Component {\r\n    \r\n    constructor(props) {\r\n\t\tsuper(props)\r\n        this.state = {\r\n            row: {},\r\n            show: false,\r\n            radioOptions: [],\r\n            selectedOption: '',\r\n            first_name: '',\r\n            last_name: '',\r\n            is_active: true,\r\n            password: '',\r\n            confirmPassword: '',\r\n            editPassword: false,\r\n            error: false,\r\n            backendError: false,\r\n            errorMsg: ''\r\n\t\t}\r\n        \r\n        this.delete = this.delete.bind(this);\r\n\t\tthis.cancel = this.cancel.bind(this);\r\n\t\tthis.submit = this.submit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handlePasswordButton = this.handlePasswordButton.bind(this);\r\n        this.handleActiveCheckbox = this.handleActiveCheckbox.bind(this);\r\n        this.validateInput = this.validateInput.bind(this);\r\n        this.createRadioOptions = this.createRadioOptions.bind(this);\r\n\t}\r\n\r\n\tvalidateInput() {\r\n        const { password, confirmPassword, editPassword } = this.state;\r\n        if (editPassword) {\r\n            if (password.length === 0 || password !== confirmPassword) {\r\n                return 'error';\r\n            }\r\n            return 'success';\r\n        } else {\r\n\t\t\treturn null;\r\n\t\t}\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.row !== this.state.row) {\r\n            this.setState({\r\n                row: this.props.row,\r\n            });\r\n        }\r\n        if (this.props.show !== this.state.show) {\r\n            const radioOptions = [];\r\n            const role_names = Object.keys(this.props.row.role_ids);\r\n            const role_ids = this.props.row.role_ids;\r\n            let selectedOption = '';\r\n            for (var index in role_names) {\r\n                const role_name = role_names[index];\r\n                const checked = this.props.row.groups.indexOf(role_ids[role_name]) > -1;\r\n                if (checked) {\r\n                    selectedOption = role_name;\r\n                }\r\n                radioOptions.push({label: role_name, checked: checked})\r\n            }\r\n            this.setState({\r\n                radioOptions: radioOptions,\r\n                selectedOption: selectedOption,\r\n                show: this.props.show,\r\n                first_name: this.props.row.first_name,\r\n                last_name: this.props.row.last_name,\r\n                is_active: this.props.row.is_active,\r\n            });\r\n        }\r\n    }\r\n\r\n    handleChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState(prevstate => {\r\n            const newState = { ...prevstate };\r\n            newState[name] = value;\r\n            return newState;\r\n        });\r\n    };\r\n\r\n    handleActiveCheckbox = e => {\r\n        this.setState(prevstate => {\r\n            const newState = { ...prevstate };\r\n            newState[\"is_active\"] = !this.state.is_active;\r\n            return newState;\r\n        });\r\n    }\r\n\r\n    handlePasswordButton = e => {\r\n        this.setState({\r\n            editPassword: !this.state.editPassword,\r\n            password: \"\",\r\n            confirmPassword: \"\"\r\n        });\r\n    }\r\n\r\n\tcancel() {\r\n        this.setState({\r\n            row: this.props.row,\r\n            error: false,\r\n            backendError: false,\r\n            password: '',\r\n            confirmPassword: '',\r\n            editPassword: false,\r\n            errorMsg: false\r\n        });\r\n\t\tthis.props.onSubmit();\r\n    }\r\n    \r\n    delete() {\r\n        const self = this;\r\n        httpDelete(`${protocol}://${domain}/api/users/?id=${self.state.row.id}`)\r\n        .then(function (result) {\r\n            if ('error' in result) {\r\n                result.response.then(function(response) {\r\n                    self.setState({backendError: true, errorMsg: response.error});\r\n                });\r\n            } else {\r\n                self.setState({\r\n                    backendError: false,\r\n                    errorMsg: ''\r\n                })\r\n                self.props.onDelete(self.state.row.id);\r\n            }\r\n        });\r\n    }\r\n\r\n\tsubmit() {\r\n        const self = this;\r\n        this.setState({\r\n            backendError: false\r\n        });\r\n        if (self.validateInput() === 'error') {\r\n            this.setState({\r\n                error: true\r\n            });\r\n            return;\r\n        } else {\r\n            this.setState({\r\n                error: false\r\n            });\r\n        }\r\n        let body = {\r\n            id: self.state.row.id,\r\n            first_name: self.state.first_name,\r\n            last_name: self.state.last_name,\r\n            is_active: self.state.is_active\r\n        };\r\n        let groups = [];\r\n        groups.push(self.props.row.role_ids[self.state.selectedOption])\r\n        body[\"groups\"] = groups;\r\n        if (self.state.password !== \"\") {\r\n            body[\"password\"] = self.state.password;\r\n        }\r\n        httpPatch(`${protocol}://${domain}/api/users/`, body)\r\n            .then(function (result) {\r\n                if ('error' in result) {\r\n                    result.response.then(function(response) {\r\n                        self.setState({backendError: true, errorMsg: response.error});\r\n                    });\r\n                } else {\r\n                    self.setState({\r\n                        password: '',\r\n                        confirmPassword: '',\r\n                        editPassword: false,\r\n                        backendError: false,\r\n                        errorMsg: ''\r\n                    })\r\n                    self.props.onSubmit(result);\r\n                }\r\n            })\r\n    }\r\n    \r\n    toggleRadioOptions(index) {\r\n        let { radioOptions, selectedOption } = this.state;\r\n        if (!radioOptions[index].checked) {\r\n            selectedOption = radioOptions[index].label;\r\n            for (var j in radioOptions) {\r\n                if (j !== index) {\r\n                    radioOptions[j].checked = false;\r\n                } \r\n            }\r\n        }\r\n        radioOptions[index].checked = !radioOptions[index].checked;\r\n\r\n        this.setState({\r\n            selectedOption: selectedOption,\r\n            radioOptions: radioOptions\r\n        });\r\n    }\r\n    \r\n    createRadioOptions() {\r\n        const { radioOptions } = this.state;\r\n    \r\n        return radioOptions\r\n            .map((option, index) =>\r\n                <div key={index}>\r\n                    <label>\r\n                        <input\r\n                            type=\"radio\"\r\n                            name=\"userRoles\"\r\n                            value={option.label}\r\n                            checked={option.checked}\r\n                            onChange={this.toggleRadioOptions.bind(this, index)}\r\n                            className=\"form-check-input\"\r\n                        />\r\n                        {option.label}\r\n                    </label>\r\n                </div>\r\n            );\r\n    }\r\n\r\n    render() {\r\n        let passwordBlock;\r\n        if (!this.state.editPassword) {\r\n            passwordBlock = <Button bsStyle=\"link\" onClick={this.handlePasswordButton}>Change Password</Button>\r\n        } else {\r\n            passwordBlock = <div>\r\n                <ControlLabel>Password</ControlLabel>\r\n                <FormControl\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    placeholder=\"Password\"\r\n                    onChange={this.handleChange}\r\n                />\r\n                <br />\r\n                <ControlLabel>Confirm Password</ControlLabel>\r\n                <FormControl\r\n                    type=\"password\"\r\n                    name=\"confirmPassword\"\r\n                    value={this.state.confirmPassword}\r\n                    placeholder=\"Confirm Password\"\r\n                    onChange={this.handleChange}\r\n                />\r\n                <br />\r\n                <Button bsStyle=\"warning\" onClick={this.handlePasswordButton}>Discard Password Changes</Button>\r\n                <br />\r\n            </div>\r\n        }\r\n        let errorMsg = \"Server error. Please try again.\";\r\n        if (this.state.errorMsg !== '' && this.state.errorMsg !== null && this.state.errorMsg !== undefined) {\r\n            errorMsg = this.state.errorMsg;\r\n        }\r\n        return(\r\n           \r\n            <Modal show={this.props.show}>\r\n\t\t\t\t<Modal.Header>\r\n\t\t\t\t\t<Modal.Title>Edit User</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<form>\r\n\t\t\t\t\t\t<FormGroup\r\n                            validationState={this.validateInput()}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<ControlLabel>Username</ControlLabel>\r\n\t\t\t\t\t\t\t<p>{this.state.row.username}</p>\r\n\t\t\t\t\t\t\t<br/>\r\n                            <ControlLabel>First Name</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"text\"\r\n                                name=\"first_name\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.first_name || ''}\r\n\t\t\t\t\t\t\t\tplaceholder=\"First Name\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<br/>\r\n                            <ControlLabel>Last Name</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"text\"\r\n                                name=\"last_name\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.last_name || ''}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Last Name\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<br/>\r\n                            <ControlLabel>Active</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"checkbox\"\r\n                                checked={this.state.is_active || false}\r\n\t\t\t\t\t\t\t\tvalue={this.state.is_active}\r\n\t\t\t\t\t\t\t\tonChange={this.handleActiveCheckbox}\r\n\t\t\t\t\t\t\t/>\r\n                            <br />\r\n                            <ControlLabel>User Role</ControlLabel>\r\n                            {this.createRadioOptions()}\r\n                            {passwordBlock}\r\n\t\t\t\t\t\t\t<FormControl.Feedback />\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</Modal.Body>\r\n\r\n\t\t\t\t<Modal.Footer>\r\n                    {this.state.error && <Alert bsStyle='danger'>Invalid password. Please make sure they match and try again.</Alert>}\r\n                    {this.state.backendError && <Alert bsStyle='danger'>{errorMsg}</Alert>}\r\n\t\t\t\t\t<Button onClick={this.cancel}>Cancel</Button>\r\n\t\t\t\t\t<Button onClick={this.submit} bsStyle=\"primary\">Save</Button>\r\n                    <Button onClick={() => { if (window.confirm('Are you sure you wish to delete this user?')) this.delete() } } bsStyle=\"danger\">Delete</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditUserModal;\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport EditUserModal from './EditUserModal';\r\n\r\nclass EditUserButton extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            row: {},\r\n            showUserModal: false,\r\n        }\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.closeModalDelete = this.closeModalDelete.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            row: this.props.row,\r\n        });\r\n    }\r\n\r\n    openModal() {\r\n        this.setState({showUserModal: true});\r\n    }\r\n\r\n    closeModal(user=null) {\r\n        if (user !== null) {\r\n            const updateUser = () => this.props.CustomFunction(user);\r\n            updateUser();\r\n        }\r\n        this.setState({showUserModal: false});\r\n    }\r\n\r\n    closeModalDelete(id=null) {\r\n        this.setState({showUserModal: false});\r\n        if (id !== null) {\r\n            const updateUser = () => this.props.CustomFunction(null, id);\r\n            updateUser();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.row['id'] !== this.state.row['id']) {\r\n            this.setState({\r\n                row: this.props.row,\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <EditUserModal show={this.state.showUserModal} row={this.props.row} onDelete={this.closeModalDelete} onSubmit={this.closeModal}/>\r\n                <Button bsStyle=\"link\" onClick={this.openModal}>Edit User</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditUserButton;\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nclass UserHistoryButton extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            row: {},\r\n        }\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            row: this.props.row,\r\n        });\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.row['id'] !== this.state.row['id']) {\r\n            this.setState({\r\n                row: this.props.row,\r\n            });\r\n        }\r\n    }\r\n\r\n    handleClick() {\r\n        const getUserHistory = () => this.props.CustomFunction(this.state.row['id'], this.state.row['username']);\r\n        getUserHistory();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Button bsStyle=\"link\" onClick={this.handleClick}>View History</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserHistoryButton;\r\n","import React from 'react';\r\nimport { Button, ButtonToolbar } from 'react-bootstrap';\r\nimport ReactCollapsingTable from 'react-collapsing-table';\r\n\r\nclass UserHistory extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            history: [],\r\n            username: ''\r\n        };\r\n        this.closeHistoryView = this.closeHistoryView.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            history: this.props.history,\r\n            username: this.props.username\r\n        });\r\n    }\r\n\r\n    closeHistoryView() {\r\n        this.props.closeHistoryView();\r\n    }\r\n\r\n    render() {\r\n        const rows = this.state.history.map(item =>\r\n            (\r\n               {\r\n                   datetime: item.datetime,\r\n                   action: item.action,\r\n                   values: item.values\r\n               }\r\n           )\r\n        ).sort((a, b) => {\r\n            return b.datetime.localeCompare(a.datetime);\r\n        });\r\n\r\n        const columns = [\r\n            {\r\n                accessor: 'datetime',\r\n                label: 'Date/Time',\r\n                priorityLevel: 1,\r\n                position: 1,\r\n                minWidth: 100,\r\n                sortable: true\r\n            },\r\n            {\r\n                accessor: 'action',\r\n                label: 'Action',\r\n                priorityLevel: 2,\r\n                position: 2,\r\n                minWidth: 100,\r\n                sortable: true\r\n            },\r\n            {\r\n                accessor: 'values',\r\n                label: 'Values',\r\n                priorityLevel: 3,\r\n                position: 3,\r\n                minWidth: 100,\r\n                sortable: false\r\n            },\r\n        ];\r\n\r\n        return (\r\n            <div className='content'>\r\n                <h1>User History: {this.state.username}</h1>\r\n                <br />\r\n                <ButtonToolbar style={{ float: 'left' }}>\r\n                    <Button bsStyle='link' onClick={this.closeHistoryView}>Return to User Management</Button>\r\n                </ButtonToolbar>\r\n                <br/>\r\n                <ReactCollapsingTable\r\n                        rows = { rows }\r\n                        columns = { columns }\r\n                        column = {'datetime'}\r\n                        direction = {'descending'}\r\n                        showPagination={ true }\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserHistory;","import React from 'react';\r\nimport Autocomplete from './Autocomplete';\r\nimport { Button, ButtonToolbar } from 'react-bootstrap';\r\nimport ReactCollapsingTable from 'react-collapsing-table';\r\nimport AddUserModal from './AddUserModal';\r\nimport EditUserButton from './EditUserButton';\r\nimport UserHistoryButton from './UserHistoryButton';\r\nimport { getPermissions, httpGet, domain, protocol } from './Helpers';\r\nimport UserHistory from './UserHistory';\r\n\r\nclass Users extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showUserModal: false,\r\n            users: [],\r\n            showingUsers: [],\r\n            role_ids: {},\r\n            role_names: {},\r\n            suggestionsArray: [],\r\n            showingAllUsers: true,\r\n            selectedUserHistory: [],\r\n            selectedUsername: '',\r\n            historyView: false\r\n        };\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.updateRow = this.updateRow.bind(this);\r\n        this.getFormattedTime = this.getFormattedTime.bind(this);\r\n        this.handler = this.handler.bind(this);\r\n        this.showAllUsers = this.showAllUsers.bind(this);\r\n        this.getUserHistory = this.getUserHistory.bind(this);\r\n        this.closeHistoryView = this.closeHistoryView.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const users = await httpGet(`${protocol}://${domain}/api/users/`);\r\n            let suggestionsArray = this.makeSuggestionsArray(users);\r\n            const roles = await httpGet(`${protocol}://${domain}/api/groups/`);\r\n            const role_ids = {};\r\n            const role_names = {};\r\n            for (var index in roles) {\r\n                role_ids[roles[index].name] = roles[index].id;\r\n                role_names[roles[index].id] = roles[index].name;\r\n            }\r\n            this.setState({\r\n                showingUsers: users,\r\n                users: users,\r\n                role_ids: role_ids, \r\n                role_names: role_names,\r\n                suggestionsArray: suggestionsArray\r\n            });\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    async componentDidUpdate() {\r\n        if (this.props.refreshRoles) {\r\n            // Re-get users - if a role was deleted, users may have been set to inactive\r\n            const users = await httpGet(`${protocol}://${domain}/api/users/`);\r\n            const roles = await httpGet(`${protocol}://${domain}/api/groups/`);\r\n            const role_ids = {};\r\n            const role_names = {};\r\n            for (var index in roles) {\r\n                role_ids[roles[index].name] = roles[index].id;\r\n                role_names[roles[index].id] = roles[index].name;\r\n            }\r\n            this.setState({\r\n                showingUsers: users,\r\n                users: users,\r\n                role_ids: role_ids, \r\n                role_names: role_names,\r\n                showAllUsers: true\r\n            });\r\n            this.props.toggleRefreshRoles(false);\r\n        }\r\n    }\r\n\r\n    makeSuggestionsArray(suggestions) {\r\n        var array = [];\r\n        var lastHolder1;\r\n        var lastHolder2;\r\n        var tempArray;\r\n        for (var object in suggestions) {\r\n          if (suggestions[object]['last_name'].includes(\" \")) {\r\n            tempArray = suggestions[object]['last_name'].split(\" \");\r\n            lastHolder1 = tempArray[0];\r\n            lastHolder2 = tempArray[1];\r\n          } else {\r\n            lastHolder1 = suggestions[object]['last_name'];\r\n            lastHolder2 = \"\";\r\n          }\r\n          array.push({\r\n            firstName: suggestions[object]['first_name'],\r\n            lastName1: lastHolder1,\r\n            lastName2: lastHolder2,\r\n            username: suggestions[object]['username'],\r\n            id: suggestions[object]['id']\r\n          });\r\n        }\r\n        return array;\r\n      }\r\n\r\n    handler(e, userId) {\r\n        let showingUsers = [];\r\n        if (userId !== null) {\r\n            showingUsers.push(this.state.users.find(item => item['id'] === parseInt(userId)));\r\n        }\r\n        this.setState({\r\n            showingUsers: showingUsers,\r\n            showingAllUsers: false\r\n        });\r\n    }\r\n\r\n    showAllUsers() {\r\n        const { users } = this.state;\r\n        this.setState({\r\n            showingUsers: users,\r\n            showingAllUsers: true\r\n        });\r\n    }\r\n\r\n    openModal() {\r\n        this.setState({showUserModal: true});\r\n    }\r\n\r\n    closeModal(user=null) {\r\n        const { suggestionsArray, users } = this.state;\r\n        let showingUsers = [];\r\n        if (user !== null) {\r\n            let newUser = {\r\n                'id': user.id, \r\n                'username': user.username, \r\n                'first_name': user.first_name,\r\n                'last_name': user.last_name,\r\n                'groups': user.groups, \r\n                'last_login': user.last_login,\r\n                'is_active': user.is_active\r\n            };\r\n            let last1;\r\n            let last2;\r\n            if (user.last_name.includes(\" \")) {\r\n                let lastNames = user.last_name.split(\" \");\r\n                last1 = lastNames[0];\r\n                last2 = lastNames[1];\r\n            }\r\n            else {\r\n                last1 = user.last_name;\r\n                last2 = \"\";\r\n            }\r\n            suggestionsArray.push({\r\n                firstName: user.first_name,\r\n                lastName1: last1,\r\n                lastName2: last2,\r\n                username: user.username,\r\n                id: user.id\r\n            });\r\n            users.push(newUser);\r\n            showingUsers.push(newUser);\r\n            this.setState({showUserModal: false, users: users, showingUsers: showingUsers, \r\n                showingAllUsers: false, suggestionsArray: suggestionsArray});\r\n        } else {\r\n            this.setState({showUserModal: false});\r\n        }\r\n    }\r\n\r\n    checkmark(boolean) {\r\n        if (boolean) {\r\n            return \"&#10003;\";\r\n        } else {\r\n            return \"\";\r\n        }\r\n    }\r\n\r\n    getFormattedTime(dateString) {\r\n        if (dateString === null || dateString.length === 0) {\r\n            return '';\r\n        }\r\n        let splitDateTime = dateString.split(\"T\")\r\n        let date = splitDateTime[0]\r\n        let time = splitDateTime[1].split(\".\")[0]\r\n        let splitTime = time.split(\":\")\r\n        let hours = parseInt(splitTime[0])\r\n        let ampm = hours >= 12 ? 'PM' : 'AM';\r\n        hours = hours % 12;\r\n        hours = hours === 0 ? 12 : hours\r\n        var formattedTime = date + ' ' + hours + ':' + splitTime[1] + ' ' + ampm\r\n        return formattedTime;\r\n    }\r\n\r\n    getUserRoleNames(groups) {\r\n        const group_names = [];\r\n        for (var index in groups) {\r\n            group_names.push(this.state.role_names[groups[index]]);\r\n        }\r\n        return group_names.join(', ');\r\n    }\r\n\r\n    updateRow(user, id = null) {\r\n        let { users, suggestionsArray } = this.state;\r\n        let showingUsers = [];\r\n        let showingAllUsers = false;\r\n        if (id !== null) {\r\n            users = users.filter(item => item.id !== id);\r\n            suggestionsArray = suggestionsArray.filter(item => item.id !== id);\r\n            showingAllUsers = true;\r\n            showingUsers = users;\r\n        } else {\r\n            users = users.filter(item => item.id !== user.id);\r\n            suggestionsArray = suggestionsArray.filter(item => item.id !== user.id);\r\n            let newUser = {\r\n                'id': user.id,\r\n                'username': user.username,\r\n                'first_name': user.first_name,\r\n                'last_name': user.last_name,\r\n                'groups': user.groups,\r\n                'last_login': user.last_login,\r\n                'is_active': user.is_active\r\n            };\r\n            let last1;\r\n            let last2;\r\n            if (user.last_name.includes(\" \")) {\r\n                let lastNames = user.last_name.split(\" \");\r\n                last1 = lastNames[0];\r\n                last2 = lastNames[1];\r\n            }\r\n            else {\r\n                last1 = user.last_name;\r\n                last2 = \"\";\r\n            }\r\n            suggestionsArray.push({\r\n                firstName: user.first_name,\r\n                lastName1: last1,\r\n                lastName2: last2,\r\n                username: user.username,\r\n                id: user.id\r\n            });\r\n            users.push(newUser);\r\n            showingUsers.push(newUser)\r\n        }\r\n        this.setState({ users: users, showingUsers: showingUsers, showingAllUsers: showingAllUsers, suggestionsArray: suggestionsArray });\r\n    }\r\n\r\n    getUserHistory(userId, username) {\r\n        const self = this;\r\n        httpGet(`${protocol}://${domain}/api/history/?user_id=${userId}`)\r\n            .then(function (result) {\r\n                if ('error' in result) {\r\n                    alert(\"Error: Unknown server error getting user history.\")\r\n                } else {\r\n                    self.setState({ selectedUserHistory: result, historyView: true, selectedUsername: username});\r\n                }\r\n            });\r\n    }\r\n\r\n    closeHistoryView() {\r\n        this.setState({ historyView: false });\r\n    }\r\n\r\n    render() {\r\n        const rows = this.state.showingUsers.map(user =>\r\n            (\r\n               {\r\n                   username: user.username,\r\n                   first_name: user.first_name,\r\n                   last_name: user.last_name,\r\n                   name: user.first_name + \" \" + user.last_name,\r\n                   roles: this.getUserRoleNames(user.groups),\r\n                   groups: user.groups,\r\n                   lastLogin: this.getFormattedTime(user.last_login),\r\n                   isActive: this.checkmark(user.is_active),\r\n                   id: user.id,\r\n                   is_active: user.is_active,\r\n                   role_ids: this.state.role_ids,\r\n               }\r\n           )\r\n        ).sort((a, b) => {\r\n            return a.username.localeCompare(b.username);\r\n        });\r\n        const columns = [\r\n            {\r\n                accessor: 'name',\r\n                label: 'Name',\r\n                priorityLevel: 1,\r\n                position: 1,\r\n                minWidth: 100,\r\n                sortable: true\r\n            },\r\n            {\r\n                accessor: 'username',\r\n                label: 'Username',\r\n                priorityLevel: 2,\r\n                position: 2,\r\n                minWidth: 100,\r\n                sortable: true\r\n            },\r\n            {\r\n                accessor: 'lastLogin',\r\n                label: 'Last Login',\r\n                priorityLevel: 3,\r\n                position: 3,\r\n                minWidth: 100,\r\n                sortable: true\r\n            },\r\n            {\r\n                accessor: 'roles',\r\n                label: 'User Roles',\r\n                priorityLevel: 4,\r\n                position: 4,\r\n                sortable: true,\r\n                minWidth: 30\r\n            },\r\n            { \r\n                accessor: 'isActive',\r\n                label: 'Active',\r\n                priorityLevel: 5,\r\n                position: 5,\r\n                minWidth: 20,\r\n                sortable: true, \r\n            },\r\n            { \r\n                accessor: 'edit',\r\n                label: '',\r\n                priorityLevel: 6,\r\n                position: 6,\r\n                CustomComponent: EditUserButton,\r\n                minWidth: 50,\r\n                sortable: false, \r\n            },\r\n            {\r\n                accessor: 'history',\r\n                label: '',\r\n                priorityLevel: 7,\r\n                position: 7,\r\n                CustomComponent: UserHistoryButton,\r\n                minWidth: 50,\r\n                sortable: false,\r\n            }\r\n        ];\r\n        const tableCallbacks = { edit: this.updateRow, history: this.getUserHistory }\r\n        if (this.state.historyView) {\r\n            return (\r\n                <UserHistory closeHistoryView={this.closeHistoryView} history={this.state.selectedUserHistory} username={this.state.selectedUsername}/>\r\n            );\r\n        }\r\n        const permissions = getPermissions();\r\n        let buttonToolbar;\r\n        if (permissions.indexOf('add_user') >= 0) {\r\n            buttonToolbar = <ButtonToolbar style={{ float: 'right' }}>\r\n                <Button className={this.state.showingAllUsers ? 'hidden' : ''} bsStyle='link' onClick={this.showAllUsers}>Show All Users</Button>\r\n                <Button onClick={this.openModal}>New User</Button>\r\n            </ButtonToolbar>\r\n        } else {\r\n            buttonToolbar = <ButtonToolbar style={{ float: 'right' }}>\r\n                <Button className={this.state.showingAllUsers ? 'hidden' : ''} bsStyle='link' onClick={this.showAllUsers}>Show All Users</Button>\r\n            </ButtonToolbar>\r\n        }\r\n        return (\r\n            <div className='content'>\r\n                <AddUserModal role_ids={this.state.role_ids}\r\n                    show={this.state.showUserModal}\r\n                    onSubmit={this.closeModal} />\r\n                <h1>User Management</h1>\r\n                <br />\r\n                {buttonToolbar}\r\n                <Autocomplete\r\n                    hasUsername={true}\r\n                    suggestions={this.state.suggestionsArray}\r\n                    handler={this.handler}\r\n                />\r\n                <br/>\r\n                <ReactCollapsingTable\r\n                        rows = { rows }\r\n                        columns = { columns }\r\n                        column = {'username'}\r\n                        direction = {'descending'}\r\n                        showPagination={ true }\r\n                        callbacks={ tableCallbacks }\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Users;","import React from 'react';\r\nimport { httpPost, domain, protocol } from './Helpers';\r\nimport { Alert, Button, Modal, FormGroup, FormControl, ControlLabel } from 'react-bootstrap';\r\n\r\nclass AddRoleModal extends React.Component {\r\n    \r\n    constructor(props) {\r\n\t\tsuper(props)\r\n\t\t\r\n        this.state = {\r\n            show: false,\r\n            name: '',\r\n            permission_ids: {},\r\n            checkboxes: [],\r\n            error: false,\r\n            backendError: false,\r\n            errorMsg: ''\r\n\t\t}\r\n\t\t\r\n\t\tthis.cancel = this.cancel.bind(this);\r\n\t\tthis.submit = this.submit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.createCheckboxes = this.createCheckboxes.bind(this);\r\n        this.validateInput = this.validateInput.bind(this);\r\n    }\r\n    \r\n    componentDidUpdate() {\r\n        if (this.props.show !== this.state.show) {\r\n            const checkboxes = [];\r\n            const perm_ids = this.props.permission_ids;\r\n            const perm_names = Object.keys(perm_ids);\r\n            for (var index in perm_names) {\r\n                const perm_name = perm_names[index];\r\n                let displayName = perm_name;\r\n                if (displayName.includes('group')) {\r\n                    displayName = displayName.replace('group', 'user role');\r\n                } else if (displayName.includes('activity')) {\r\n                    displayName = displayName.replace('activity', 'programming');\r\n                } else if (displayName.includes('attendance items')) {\r\n                    displayName = displayName.replace('attendance items', 'attendance entries');\r\n                } else if (displayName.includes('student column')) {\r\n                    displayName = displayName.replace('student column', 'student field');\r\n                } else if (displayName.includes('city span students')) {\r\n                    displayName = displayName.replace('city span students', 'student keys');\r\n                }\r\n                checkboxes.push({label: perm_name, checked: false, displayName: displayName})\r\n            }\r\n            this.setState({\r\n                permission_ids: this.props.permission_ids,\r\n                checkboxes: checkboxes,\r\n                show: this.props.show\r\n            });\r\n        }\r\n    }\r\n    \r\n    handleChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState(prevstate => {\r\n            const newState = { ...prevstate };\r\n            newState[name] = value;\r\n            return newState;\r\n        });\r\n    };\r\n\r\n\tcancel() {\r\n        this.setState({name: '', error: false, backendError: false, errorMsg: ''});\r\n\t\tthis.props.onSubmit();\r\n\t}\r\n\r\n\tsubmit() {\r\n        const self = this;\r\n        self.setState({backendError: false});\r\n        if (self.validateInput() === 'error') {\r\n            self.setState({error: true});\r\n            return;\r\n        } else {\r\n            self.setState({error: false});\r\n        }\r\n        let body = { name: self.state.name };\r\n        let permissions = [];\r\n        const checkboxes = self.state.checkboxes;\r\n        for (var index in checkboxes) {\r\n            if (checkboxes[index].checked) {\r\n                permissions.push(self.state.permission_ids[checkboxes[index].label])\r\n            }\r\n        }\r\n        if (permissions.length < 1) {\r\n            self.setState({error: true});\r\n            return;\r\n        }\r\n        body[\"permissions\"] = permissions;\r\n        httpPost(`${protocol}://${domain}/api/groups/`, body)\r\n            .then(function (result) {\r\n                if ('error' in result) {\r\n                    result.response.then(function(response) {\r\n                        self.setState({backendError: true, errorMsg: response.error});\r\n                    });\r\n                } else {\r\n                    self.setState({name: ''});\r\n                    self.props.onSubmit(result);\r\n                }\r\n            })\r\n    }\r\n\r\n    toggleCheckbox(index) {\r\n        const { checkboxes } = this.state;\r\n        checkboxes[index].checked = !checkboxes[index].checked;\r\n\r\n        this.setState({\r\n            checkboxes\r\n        });\r\n    }\r\n    \r\n    createCheckboxes() {\r\n        const { checkboxes } = this.state;\r\n    \r\n        return checkboxes\r\n            .map((checkbox, index) =>\r\n                <div key={index}>\r\n                    <label>\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            checked={checkbox.checked}\r\n                            onChange={this.toggleCheckbox.bind(this, index)}\r\n                        />\r\n                        {checkbox.displayName}\r\n                    </label>\r\n                </div>\r\n            );\r\n    }\r\n\r\n    validateInput() {\r\n\t\tconst { name } = this.state;\r\n        const regex = /^[a-z0-9 .@+\\-_]+$/i;\r\n        if (name.length > 0 && regex.test(name)) {\r\n            return 'success';\r\n        } else if (name.length === 0) {\r\n\t\t\treturn null;\r\n\t\t} else {\r\n\t\t\treturn 'error';\r\n\t\t}\r\n    }\r\n\r\n    render() {\r\n        let errorMsg = \"Server error. Please try again.\";\r\n        if (this.state.errorMsg !== '' && this.state.errorMsg !== null && this.state.errorMsg !== undefined) {\r\n            errorMsg = this.state.errorMsg;\r\n        }\r\n        return(\r\n            <Modal show={this.props.show}>\r\n\t\t\t\t<Modal.Header>\r\n\t\t\t\t\t<Modal.Title>Create New User Role</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<form>\r\n\t\t\t\t\t\t<FormGroup\r\n                            validationState={this.validateInput()}\r\n                        >\r\n\t\t\t\t\t\t\t<ControlLabel>Role Name</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n\t\t\t\t\t\t\t\tvalue={this.state.name}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Role Name\"\r\n\t\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<br/>\r\n\t\t\t\t\t\t\t{this.createCheckboxes()}\r\n\t\t\t\t\t\t\t<FormControl.Feedback />\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</Modal.Body>\r\n\r\n\t\t\t\t<Modal.Footer>\r\n                    {this.state.error && <Alert bsStyle='danger'>Invalid input. Please check your fields and try again.</Alert>}\r\n                    {this.state.backendError && <Alert bsStyle='danger'>{errorMsg}</Alert>}\r\n\t\t\t\t\t<Button onClick={this.cancel}>Cancel</Button>\r\n\t\t\t\t\t<Button onClick={this.submit} bsStyle=\"primary\">Create</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddRoleModal;\r\n","import React from 'react';\r\nimport { httpDelete, httpPatch, domain, protocol } from './Helpers';\r\nimport { Alert, Button, ControlLabel, FormControl, FormGroup, Modal } from 'react-bootstrap';\r\n\r\nclass EditRoleModal extends React.Component {\r\n    \r\n    constructor(props) {\r\n\t\tsuper(props)\r\n        this.state = {\r\n            show: false,\r\n            row: {},\r\n            permission_ids: {},\r\n            checkboxes: [],\r\n            errorMsg: '',\r\n            error: false\r\n\t\t}\r\n        \r\n        this.delete = this.delete.bind(this);\r\n\t\tthis.cancel = this.cancel.bind(this);\r\n        this.submit = this.submit.bind(this);\r\n        this.createCheckboxes = this.createCheckboxes.bind(this);\r\n    }\r\n    \r\n    componentDidUpdate() {\r\n        if (this.props.row !== this.state.row) {\r\n            this.setState({\r\n                row: this.props.row,\r\n            });\r\n        }\r\n        if (this.props.show !== this.state.show) {\r\n            const checkboxes = [];\r\n            const perm_names = Object.keys(this.props.row.permission_ids);\r\n            const perm_ids = this.props.row.permission_ids;\r\n            for (var index in perm_names) {\r\n                const perm_name = perm_names[index];\r\n                let displayName = perm_name;\r\n                if (displayName.includes('group')) {\r\n                    displayName = displayName.replace('group', 'user role');\r\n                } else if (displayName.includes('activity')) {\r\n                    displayName = displayName.replace('activity', 'programming');\r\n                } else if (displayName.includes('attendance items')) {\r\n                    displayName = displayName.replace('attendance items', 'attendance entries');\r\n                } else if (displayName.includes('student column')) {\r\n                    displayName = displayName.replace('student column', 'student field');\r\n                } else if (displayName.includes('city span students')) {\r\n                    displayName = displayName.replace('city span students', 'student keys');\r\n                }\r\n                const checked = this.props.row.permissions.indexOf(perm_ids[perm_name]) > -1;\r\n                checkboxes.push({label: perm_name, checked: checked, displayName: displayName})\r\n            }\r\n            this.setState({\r\n                checkboxes: checkboxes,\r\n                permission_ids: this.props.row.permission_ids,\r\n                show: this.props.show\r\n            });\r\n        }\r\n    }\r\n\r\n      \r\n    delete() {\r\n        const self = this;\r\n        httpDelete(`${protocol}://${domain}/api/groups/?id=${self.state.row.id}`)\r\n        .then(function (result) {\r\n            if ('error' in result) {\r\n                result.response.then(function(response) {\r\n                    self.setState({error: true, errorMsg: response.error});\r\n                });\r\n            } else {\r\n                self.setState({error: false, errorMsg: ''});\r\n                self.props.onDelete(self.state.row.id);\r\n            }\r\n        });\r\n    }\r\n\r\n\tcancel() {\r\n        this.setState({\r\n            row: this.props.row,\r\n            error: false,\r\n            errorMsg: ''\r\n        });\r\n\t\tthis.props.onSubmit();\r\n\t}\r\n\r\n\tsubmit() {\r\n        const self = this;\r\n        let body = { name: self.state.row.name, id: self.state.row.id };\r\n        let permissions = [];\r\n        const checkboxes = self.state.checkboxes;\r\n        for (var index in checkboxes) {\r\n            if (checkboxes[index].checked) {\r\n                permissions.push(self.state.permission_ids[checkboxes[index].label])\r\n            }\r\n        }\r\n        body[\"permissions\"] = permissions;\r\n        httpPatch(`${protocol}://${domain}/api/groups/`, body)\r\n            .then(function (result) {\r\n                if ('error' in result) {\r\n                    result.response.then(function(response) {\r\n                        self.setState({error: true, errorMsg: response.error});\r\n                    });\r\n                } else {\r\n                    self.setState({error: false, errorMsg: ''});\r\n                    self.props.onSubmit(result);\r\n                }\r\n            })\r\n    }\r\n    \r\n    toggleCheckbox(index) {\r\n        const { checkboxes } = this.state;\r\n        checkboxes[index].checked = !checkboxes[index].checked;\r\n\r\n        this.setState({\r\n            checkboxes\r\n        });\r\n    }\r\n\r\n    createCheckboxes() {\r\n        const { checkboxes } = this.state;\r\n    \r\n        return checkboxes\r\n            .map((checkbox, index) =>\r\n                <div key={index}>\r\n                    <label>\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            checked={checkbox.checked}\r\n                            disabled={this.state.row.name === 'Admin'}\r\n                            onChange={this.toggleCheckbox.bind(this, index)}\r\n                        />\r\n                        {checkbox.displayName}\r\n                    </label>\r\n                </div>\r\n            );\r\n    }\r\n\r\n    render() {\r\n        let errorMsg = \"Server error. Please try again.\";\r\n        if (this.state.errorMsg !== '' && this.state.errorMsg !== null && this.state.errorMsg !== undefined) {\r\n            errorMsg = this.state.errorMsg;\r\n        }\r\n        return(\r\n            <Modal show={this.props.show}>\r\n\t\t\t\t<Modal.Header>\r\n\t\t\t\t\t<Modal.Title>Edit User Role</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<form>\r\n\t\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t\t<ControlLabel>User Role</ControlLabel>\r\n\t\t\t\t\t\t\t<p>{this.state.row.name}</p>\r\n                            {this.createCheckboxes()}\r\n\t\t\t\t\t\t\t<FormControl.Feedback />\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</Modal.Body>\r\n\r\n\t\t\t\t<Modal.Footer>\r\n                    {this.state.error && <Alert bsStyle='danger'>{errorMsg}</Alert>}\r\n\t\t\t\t\t<Button onClick={this.cancel}>Cancel</Button>\r\n\t\t\t\t\t<Button onClick={this.submit} bsStyle=\"primary\">Save</Button>\r\n                    <Button onClick={() => { if (window.confirm('Are you sure you wish to delete this role? All users with this role will be set to inactive.')) this.delete() }}\r\n                        bsStyle=\"danger\"\r\n                        disabled={this.state.row.name === \"Admin\"}>Delete</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditRoleModal;\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport EditRoleModal from './EditRoleModal';\r\n\r\nclass EditRoleButton extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            row: {},\r\n            showModal: false,\r\n        }\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.closeModalDelete = this.closeModalDelete.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            row: this.props.row,\r\n        });\r\n    }\r\n\r\n    openModal() {\r\n        this.setState({showModal: true});\r\n    }\r\n\r\n    closeModal(role=null) {\r\n        const { row } = this.state;\r\n        if (role !== null) {\r\n            this.props.row.permissions = role.permissions;\r\n            row.permissions = role.permissions;\r\n        }\r\n        this.setState({showModal: false, row: row});\r\n    }\r\n\r\n    closeModalDelete(id=null) {\r\n        this.setState({showModal: false});\r\n        if (id !== null) {\r\n            const deleteRole = () => this.props.CustomFunction(id);\r\n            deleteRole();\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.row['id'] !== this.state.row['id']) {\r\n            this.setState({\r\n                row: this.props.row,\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <EditRoleModal show={this.state.showModal} row={this.props.row} onDelete={this.closeModalDelete} onSubmit={this.closeModal}/>\r\n                <Button bsStyle=\"link\" onClick={this.openModal}>Edit User Role</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditRoleButton;\r\n","import React from 'react';\r\nimport { Button, ButtonToolbar } from 'react-bootstrap';\r\nimport AddRoleModal from './AddRoleModal';\r\nimport EditRoleButton from './EditRoleButton';\r\nimport ReactCollapsingTable from 'react-collapsing-table';\r\nimport { httpGet, domain, protocol } from './Helpers';\r\n\r\n\r\nclass Roles extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showModal: false,\r\n            roles: [],\r\n            permissions_list: {},\r\n            permission_ids: {},\r\n        };\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.deleteRole = this.deleteRole.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const roles = await httpGet(`${protocol}://${domain}/api/groups/`);\r\n            const permissions_list = await httpGet(`${protocol}://${domain}/api/permissions/`);\r\n            let permission_ids = {};\r\n            for (var index in permissions_list) {\r\n                permission_ids[permissions_list[index].name] = permissions_list[index].id;\r\n            }\r\n            this.setState({\r\n                roles: roles,\r\n                permissions_list: permissions_list,\r\n                permission_ids: permission_ids,\r\n            });\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    openModal() {\r\n        this.setState({showModal: true});\r\n    }\r\n\r\n    closeModal(role=null) {\r\n        const { roles } = this.state;\r\n        if (role !== null) {\r\n            roles.push({\r\n                'id': role.id, 'name': role.name, 'permissions': role.permissions\r\n            });\r\n            this.props.toggleRefreshRoles(true);\r\n        }\r\n        this.setState({showModal: false, roles: roles});\r\n    }\r\n\r\n    deleteRole(id = null) {\r\n        let { roles } = this.state;\r\n        if (id !== null) {\r\n            roles = roles.filter(item => item.id !== id);\r\n            this.props.toggleRefreshRoles(true);\r\n        }\r\n        this.setState({ roles: roles });\r\n    }\r\n\r\n    render() {\r\n        const rows = this.state.roles.map(role =>\r\n            (\r\n               {\r\n                   name: role.name,\r\n                   permissions: role.permissions,\r\n                   id: role.id,\r\n                   permission_ids: this.state.permission_ids\r\n               }\r\n           )\r\n        ).sort((a, b) => {\r\n            return a.name.localeCompare(b.name);\r\n        });\r\n\r\n        const columns = [\r\n            {\r\n                accessor: 'name',\r\n                label: 'Role',\r\n                priorityLevel: 1,\r\n                position: 1,\r\n                minWidth: 50,\r\n                sortable: true\r\n            },\r\n            { \r\n                accessor: 'edit',\r\n                label: '',\r\n                priorityLevel: 2,\r\n                position: 5,\r\n                CustomComponent: EditRoleButton,\r\n                minWidth: 50,\r\n                sortable: false, \r\n            }\r\n        ];\r\n        const tableCallbacks = { edit: this.deleteRole }\r\n        return (\r\n            <div className=\"content\">\r\n                <h1>User Roles</h1>\r\n                <ButtonToolbar style={{ float: 'right' }}>\r\n                    <Button onClick={this.openModal}>New User Role</Button>\r\n                </ButtonToolbar>\r\n                <AddRoleModal permission_ids={this.state.permission_ids}\r\n                    show={this.state.showModal}\r\n                    onSubmit={this.closeModal} />\r\n                <ReactCollapsingTable\r\n                        rows = { rows }\r\n                        columns = { columns }\r\n                        column = {'name'}\r\n                        direction = {'descending'}\r\n                        showPagination={ true }\r\n                        callbacks = { tableCallbacks }\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Roles;","import React from 'react';\r\nimport { Button, ButtonToolbar, ListGroup, ListGroupItem, Modal } from 'react-bootstrap';\r\nimport { httpGet, httpPatch, domain, protocol } from './Helpers';\r\nimport Autocomplete from './Autocomplete';\r\n\r\nclass AssignStudentKeyModal extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            oldID: 0,\r\n            student: {},\r\n            suggestions: [],\r\n            searchArray: [],\r\n            match: \"\",\r\n        }\r\n\r\n        this.onCancel = this.onCancel.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.setMatch = this.setMatch.bind(this);\r\n        this.buildSuggestionsArray = this.buildSuggestionsArray.bind(this);\r\n        this.setMatchFromSearch = this.setMatchFromSearch.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            oldID: this.props.studentID\r\n        });\r\n    }\r\n\r\n    async componentDidUpdate() {\r\n        if (this.props.studentID !== this.state.oldID && this.props.studentID !== -1) {\r\n            const student = await httpGet(`${protocol}://${domain}/api/students/?id=${this.props.studentID}`);\r\n            const suggestions = await httpGet(`${protocol}://${domain}/api/suggestions/student/?id=${this.props.studentID}`);\r\n            const searchArray = this.buildSuggestionsArray();\r\n\r\n            this.setState({\r\n                student: student,\r\n                suggestions: suggestions,\r\n                searchArray: searchArray,\r\n                oldID: this.props.studentID\r\n            });\r\n        }\r\n    }\r\n\r\n    buildSuggestionsArray() {\r\n        let array = []\r\n        const citySpanStudents = this.props.citySpanStudents;\r\n        for (var object in this.props.citySpanStudents) {\r\n            array.push({\r\n                firstName: citySpanStudents[object].first_name,\r\n                lastName1: citySpanStudents[object].last_name,\r\n                lastName2: \"\",\r\n                id: citySpanStudents[object].student_key\r\n            });\r\n        }\r\n        return array;\r\n    }\r\n\r\n    setMatch(studentKey) {\r\n        this.setState({match: studentKey});\r\n    }\r\n\r\n    setMatchFromSearch(e, studentKey) {\r\n        this.setState({match: studentKey});\r\n    }\r\n\r\n    onCancel() {\r\n        this.setState({student: {}, match: \"\", suggestions: []});\r\n        this.props.onClose()\r\n    }\r\n\r\n    onSubmit() {\r\n        // PATCH student\r\n        httpPatch(`${protocol}://${domain}/api/students/`, {'student_key': this.state.match, 'id': this.props.studentID});\r\n        this.setState({student: {}, match: \"\", suggestions: []});\r\n        this.props.onClose(this.props.studentID);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Modal show={this.props.show}>\r\n\t\t\t\t<Modal.Header>\r\n\t\t\t\t\t<Modal.Title>Find Student Key Match: {this.state.student.first_name !== undefined ? this.state.student.first_name + ' ' + this.state.student.last_name : ''}</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\r\n\t\t\t\t<Modal.Body>\r\n                    <h4>Suggestions:</h4>\r\n                    {this.state.suggestions.length === 3 \r\n                    && <ListGroup>\r\n                        <ListGroupItem><ButtonToolbar style={{float: 'right'}} ><Button onClick={() => this.setMatch(this.state.suggestions[0].match_key)} bsStyle=\"primary\">Select</Button></ButtonToolbar><p style={{paddingTop: '4px'}}>{this.state.suggestions[0].match_name}</p></ListGroupItem>\r\n                        <ListGroupItem><ButtonToolbar style={{float: 'right'}} ><Button onClick={() => this.setMatch(this.state.suggestions[1].match_key)} bsStyle=\"primary\">Select</Button></ButtonToolbar><p style={{paddingTop: '4px'}}>{this.state.suggestions[1].match_name}</p></ListGroupItem>\r\n                        <ListGroupItem><ButtonToolbar style={{float: 'right'}} ><Button onClick={() => this.setMatch(this.state.suggestions[2].match_key)} bsStyle=\"primary\">Select</Button></ButtonToolbar><p style={{paddingTop: '4px'}}>{this.state.suggestions[2].match_name}</p></ListGroupItem>\r\n                      </ListGroup>}\r\n                    <br/>\r\n                    <h4>Search for match:</h4>\r\n                    <Autocomplete suggestions={this.state.searchArray} handler={this.setMatchFromSearch}/>\r\n                    <br/>\r\n                    {this.state.match !== \"\" &&  <h4>Selected student key: {this.state.match}</h4>}\r\n\t\t\t\t</Modal.Body>\r\n\r\n\t\t\t\t<Modal.Footer>\r\n\t\t\t\t\t<Button onClick={this.onCancel}>Cancel</Button>\r\n\t\t\t\t\t<Button onClick={this.onSubmit} bsStyle=\"primary\">Save</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AssignStudentKeyModal;\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nclass AssignStudentKeyButton extends React.Component {\r\n    \r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Button bsStyle=\"link\" onClick={() => this.props.CustomFunction(this.props.row['id'])}>Assign Student Key</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AssignStudentKeyButton;\r\n","import React from 'react';\r\nimport { Button, ControlLabel, Form, FormGroup, Label, Well } from 'react-bootstrap';\r\n\r\nclass FileUploader extends React.Component {\r\n\t\r\n\tconstructor() {\r\n\t  super();\r\n\t  this.state = {\r\n\t\tfile: undefined,\r\n\t\terror: \"\",\r\n\t  };\r\n\r\n\t  this.submit = this.submit.bind(this);\r\n\t}\r\n  \r\n\thandleChange = event => {\r\n\t\tconst file = event.target.files[0];\r\n\r\n\t\t// if we don't have a filetype requirement or the file matches the type requirement\r\n\t\tif (!this.props.extension || file.name.indexOf(this.props.extension) >= 0) {\r\n\t\t\tthis.setState({\r\n\t\t\t\tfile: file,\r\n\t\t\t\terror: \"\"\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.setState({\r\n\t\t\t\terror: \"Invalid file type\"\r\n\t\t\t})\r\n\t\t}\r\n\t};\r\n\r\n\tsubmit() {\r\n\t\tif (this.state.file !== undefined) {\r\n\t\t\tthis.props.upload(this.state.file);\r\n\t\t\tthis.setState({file: undefined});\r\n\t\t}\r\n\t}\r\n  \r\n\trender() {\r\n\t  return (\r\n\t\t<Form>\r\n\t\t\t<FormGroup>\r\n\t\t\t<ControlLabel style={{display: 'inline-block'}}>{this.props.label}</ControlLabel>{' '}\r\n\t\t\t\t<Well style={{display: 'inline-block'}}>\r\n\t\t\t\t\t<input style={{display: 'inline-block'}} onChange={this.handleChange} placeholder={null} type=\"file\"/>\r\n\t\t\t\t</Well>\r\n\t\t\t\t{' '}<Button style={{display: 'inline-block'}} onClick={this.submit}>Upload</Button>\r\n\t\t\t</FormGroup>\r\n\t\t\t{this.state.error !== \"\" && <Label bsStyle=\"danger\">Error: {this.state.error}</Label>}\r\n\t\t</Form>\r\n\t  );\r\n\t}\r\n  }\r\n  \r\n  export default FileUploader;","import React from 'react';\r\nimport Autocomplete from './Autocomplete';\r\nimport AssignStudentKeyModal from './AssignStudentKeyModal';\r\nimport AssignStudentKeyButton from './AssignStudentKeyButton';\r\nimport ReactCollapsingTable from 'react-collapsing-table';\r\nimport { httpGet, httpPatch, domain, protocol } from './Helpers';\r\nimport FileUploader from './FileUploader';\r\n\r\nclass StudentKeys extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            unmatchedStudents: [],\r\n            citySpanStudents: [],\r\n            suggestions: [],\r\n            showModal: false,\r\n            focusedStudent: -1,\r\n        };\r\n\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n        this.handleRowClick = this.handleRowClick.bind(this);\r\n        this.handleSearch = this.handleSearch.bind(this);\r\n        this.handleCSVUpload = this.handleCSVUpload.bind(this);\r\n        this.processCSV = this.processCSV.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const unmatchedStudents = await httpGet(`${protocol}://${domain}/api/suggestions/unmatchedstudents/`);\r\n            const citySpanStudents = await httpGet(`${protocol}://${domain}/api/suggestions/cityspanstudents/`);\r\n            const suggestions = this.makeSuggestionsArray(unmatchedStudents);\r\n\r\n            this.setState({\r\n                unmatchedStudents: unmatchedStudents,\r\n                suggestions: suggestions,\r\n                showModal: false,\r\n                focusedStudent: -1,\r\n                citySpanStudents: citySpanStudents\r\n            });\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    handleCSVUpload(csv) {\r\n        var papa = require('papaparse');\r\n        papa.parse(csv, {error: this.tmpfail, fastMode: true, complete: (result, file) => this.processCSV(result), header: true});\r\n    }\r\n\r\n    processCSV(result) {\r\n        var output = []\r\n        for (let index in result.data) {\r\n            let obj = result.data[index];\r\n            if (obj[\"Student Key\"] === \"\" || obj[\"Student Key\"] === null || obj[\"Student Key\"] === undefined) {\r\n                continue;\r\n            } \r\n            output.push({first_name: obj[\"First Name\"], last_name: obj[\"Last Name\"], student_key: obj[\"Student Key\"]})\r\n        }\r\n        httpPatch(`${protocol}://${domain}/api/suggestions/cityspanstudents/`, { \"students\": output })\r\n            .then(function (result) {\r\n                if ('error' in result) {\r\n                    result.response.then(function (response) {\r\n                        alert(response.error);\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n    tmpfail(error, file) {\r\n        console.log(error);\r\n    }\r\n\r\n    handleRowClick(studentID) {\r\n        this.setState({\r\n            focusedStudent: studentID,\r\n            showModal: true\r\n        });\r\n    }\r\n\r\n    openModal() {\r\n        this.setState({\r\n            showModal: true\r\n        });\r\n    }\r\n\r\n    closeModal(studentID) {\r\n        const { unmatchedStudents } = this.state;\r\n        for (let i = 0; i < unmatchedStudents.length; i++) {\r\n            if (unmatchedStudents[i].id === studentID) {\r\n                unmatchedStudents.splice(i, 1);\r\n            }\r\n        }\r\n        this.setState({\r\n            showModal: false,\r\n            unmatchedStudents: unmatchedStudents\r\n        });\r\n    }\r\n\r\n    handleSearch(e, studentID) {\r\n        this.setState({\r\n            focusedStudent: studentID,\r\n            showModal: true\r\n        });\r\n    }\r\n\r\n    makeSuggestionsArray(suggestions) {\r\n        var array = [];\r\n        var lastHolder1;\r\n        var lastHolder2;\r\n        var tempArray;\r\n        for (var object in suggestions) {\r\n            if (suggestions[object]['last_name'].includes(\" \")) {\r\n                tempArray = suggestions[object]['last_name'].split(\" \");\r\n                lastHolder1 = tempArray[0];\r\n                lastHolder2 = tempArray[1];\r\n            }\r\n            else {\r\n                lastHolder1 = suggestions[object]['last_name'];\r\n                lastHolder2 = \"\";\r\n            }\r\n            array.push({\r\n                firstName: suggestions[object]['first_name'],\r\n                lastName1: lastHolder1,\r\n                lastName2: lastHolder2,\r\n                id: suggestions[object]['id']\r\n            });\r\n        }\r\n        return array;\r\n    }\r\n\r\n    updateStudents(studentID) {\r\n        const { unmatchedStudents } = this.state;\r\n        for (let i = 0; i < unmatchedStudents.length; i++) {\r\n            if (unmatchedStudents[i].id === studentID) {\r\n                unmatchedStudents.splice(i, 1);\r\n            }\r\n        }\r\n        this.setState({unmatchedStudents: unmatchedStudents});\r\n    }\r\n\r\n    render() {\r\n        const rows = this.state.unmatchedStudents.map(student =>\r\n            (\r\n               {\r\n                   name: `${student.first_name} ${student.last_name}`,\r\n                   id: student.id\r\n               }\r\n           )\r\n        ).sort((a, b) => {\r\n            return a.name.localeCompare(b.name);\r\n        });\r\n\r\n        const columns = [\r\n            {\r\n                accessor: 'name',\r\n                label: 'Name',\r\n                priorityLevel: 1,\r\n                position: 1,\r\n                minWidth: 50,\r\n                sortable: true\r\n            },\r\n            { \r\n                accessor: 'edit',\r\n                label: '',\r\n                priorityLevel: 2,\r\n                position: 5,\r\n                CustomComponent: AssignStudentKeyButton,\r\n                minWidth: 50,\r\n                sortable: false, \r\n            }\r\n        ];\r\n\r\n        return (\r\n            <div className=\"content\">\r\n                <h1>Students Without Student Keys</h1>\r\n                <AssignStudentKeyModal show={this.state.showModal} studentID={this.state.focusedStudent} citySpanStudents={this.state.citySpanStudents} onClose={this.closeModal}/>\r\n                <br/>\r\n                <div style={{display: 'inline-block'}}>\r\n                    <Autocomplete\r\n                        suggestions={this.state.suggestions}\r\n                        handler={this.handleSearch}\r\n                    />\r\n                </div>\r\n                <div style={{float: 'right'}}>\r\n                    <FileUploader extension=\".csv\" label=\"Upload Cityspan Student CSV:\" upload={this.handleCSVUpload}/>\r\n                </div>\r\n                <ReactCollapsingTable\r\n                        rows = { rows }\r\n                        columns = { columns }\r\n                        column = {'name'}\r\n                        direction = {'descending'}\r\n                        showPagination={ true }\r\n                        callbacks = {{'edit':this.handleRowClick}}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StudentKeys ;","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nclass ShiftDownButton extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            row: {},\r\n        }\r\n        this.handleButtonClick = this.handleButtonClick.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            row: this.props.row,\r\n        });\r\n    }\r\n\r\n    handleButtonClick() {\r\n        const swapOrder = () => this.props.CustomFunction(this.state.row.ordering, 'down');\r\n        swapOrder();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.row['activity_id'] !== this.state.row['activity_id']) {\r\n            this.setState({\r\n                row: this.props.row,\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Button onClick={this.handleButtonClick}>Shift Down</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ShiftDownButton;\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\n\r\nclass ShiftUpButton extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            row: {},\r\n        }\r\n        this.handleButtonClick = this.handleButtonClick.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            row: this.props.row,\r\n        });\r\n    }\r\n\r\n    handleButtonClick() {\r\n        const swapOrder = () => this.props.CustomFunction(this.state.row.ordering, 'up');\r\n        swapOrder();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.row['activity_id'] !== this.state.row['activity_id']) {\r\n            this.setState({\r\n                row: this.props.row,\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <Button bsStyle=\"primary\" onClick={this.handleButtonClick}>Shift Up</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ShiftUpButton;\r\n","import React, { Component } from 'react';\r\nimport { httpPatch, domain, protocol } from './Helpers';\r\n\r\nclass ShowActivityCheckbox extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            row: {},\r\n            checked: false\r\n        }\r\n        this.toggleCheckbox = this.toggleCheckbox.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ row: this.props.row, checked: this.props.row.is_showing })\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.row.activity_id !== this.state.row.activity_id) {\r\n            this.setState({ row: this.props.row })\r\n        } else if (this.props.row.is_showing !== this.state.checked) {\r\n            this.setState({ checked: this.props.row.is_showing })\r\n        }\r\n    }\r\n\r\n    toggleCheckbox = () => {\r\n        let self = this;\r\n        let { row } = self.state;\r\n        let body = {activity_id: row.activity_id, is_showing: !self.state.checked};\r\n        httpPatch(`${protocol}://${domain}/api/activities/`, body)\r\n            .then(function (result) {\r\n                if ('error' in result) {\r\n                    result.response.then(function(response) {alert(`Error: ${response.error}`)});\r\n                } else {\r\n                    const updateCheckbox = () => self.props.CustomFunction(result);\r\n                    updateCheckbox();\r\n                }\r\n            });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <span className=\"checkbox\">\r\n                <label>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        checked={this.state.checked}\r\n                        onChange={this.toggleCheckbox}\r\n                    />\r\n                </label>\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ShowActivityCheckbox;\r\n","import React from 'react';\r\nimport { Alert, Button, ControlLabel, FormControl, FormGroup, Modal } from 'react-bootstrap';\r\nimport { httpPost, domain, protocol } from './Helpers';\r\n\r\nclass AddActivityModal extends React.Component {\r\n    \r\n    constructor(props) {\r\n\t\tsuper(props)\r\n\t\t\r\n        this.state = {\r\n            show: false,\r\n            name: '',\r\n            type: 'boolean',\r\n            inUse: true,\r\n            lastOrdering: 0,\r\n            error: false,\r\n            errorMsg: ''\r\n\t\t}\r\n\t\t\r\n\t\tthis.cancel = this.cancel.bind(this);\r\n\t\tthis.submit = this.submit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.validateInput = this.validateInput.bind(this);\r\n        this.handleCheckbox = this.handleCheckbox.bind(this);\r\n    }\r\n    \r\n    componentDidUpdate() {\r\n        if (this.props.show !== this.state.show) {\r\n            this.setState({\r\n                show: this.props.show,\r\n                lastOrdering: this.props.lastOrdering\r\n            });\r\n        }\r\n    }\r\n\r\n    validateInput() {\r\n\t\tconst { name } = this.state;\r\n        const regex = /^[a-z0-9 .@+\\-_]+$/i;\r\n        if (name.length > 0 && regex.test(name) && this.state.type) {\r\n\t\t\treturn 'success';\r\n\t\t} else if (name.length === 0) {\r\n\t\t\treturn null;\r\n\t\t} else {\r\n\t\t\treturn 'error';\r\n\t\t}\r\n    }\r\n    \r\n    handleChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState(prevstate => {\r\n            const newState = { ...prevstate };\r\n            newState[name] = value;\r\n            return newState;\r\n        });\r\n    };\r\n\r\n\tcancel() {\r\n        this.setState({\r\n            name: '',\r\n            type: 'boolean',\r\n            inUse: true,\r\n            lastOrdering: 0,\r\n            error: false,\r\n            errorMsg: ''\r\n        });\r\n\t\tthis.props.onSubmit();\r\n\t}\r\n\r\n\tsubmit() {\r\n        const self = this;\r\n        if (self.validateInput() !== 'success') {\r\n            const errorMsg = 'Invalid input. Please check your fields and try again.'\r\n            self.setState({\r\n                error: true,\r\n                errorMsg: errorMsg\r\n            });\r\n            return;\r\n        }\r\n        let body = {\r\n            name: self.state.name,\r\n            ordering: self.state.lastOrdering + 1,\r\n            is_showing: self.state.inUse,\r\n            type: self.state.type\r\n        }\r\n        httpPost(`${protocol}://${domain}/api/activities/`, body)\r\n            .then(function (result) {\r\n                if ('error' in result) {\r\n                    if (result['error'] === 400) {\r\n                        const errorMsg = 'Creation failed due to invalid input. Please check your fields and try again';\r\n                        self.setState({\r\n                            error: true,\r\n                            errorMsg: errorMsg\r\n                        });\r\n                        return;\r\n                    } else {\r\n                        result.response.then(function(response) {\r\n                            self.setState({\r\n                                error: true,\r\n                                errorMsg: response.error\r\n                            });\r\n                        });\r\n                    }\r\n                } else {\r\n                    self.setState({\r\n                        name: '',\r\n                        type: 'boolean',\r\n                        inUse: true,\r\n                        lastOrdering: 0,\r\n                        error: false,\r\n                        errorMsg: ''\r\n                    });\r\n                    self.props.onSubmit(result);\r\n                }\r\n            })\r\n    }\r\n\r\n    handleCheckbox = e => {\r\n        this.setState({inUse: !this.state.inUse});\r\n    }\r\n    \r\n    render() {\r\n        return(\r\n            <Modal show={this.props.show}>\r\n\t\t\t\t<Modal.Header>\r\n\t\t\t\t\t<Modal.Title>Create New Activity</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<form>\r\n                        <FormGroup\r\n                            validationState={this.validateInput()}>\r\n                            <ControlLabel>Activity Name</ControlLabel>\r\n                            <FormControl\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                value={this.state.name}\r\n                                placeholder=\"Activity Name\"\r\n                                onChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n                            <br/>\r\n                            <FormControl componentClass=\"select\" \r\n                            name=\"type\" \r\n                            onChange={this.handleChange}\r\n                            defaultValue={this.state.type}\r\n                            >\r\n                                <option value=\"boolean\">Checkbox</option>\r\n                                <option value=\"string\">Text</option>\r\n                                <option value=\"float\">Number</option>\r\n                            </FormControl>\r\n\t\t\t\t\t\t\t<br/>\r\n                            <ControlLabel>Currently in Use</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"checkbox\"\r\n                                checked={this.state.inUse}\r\n\t\t\t\t\t\t\t\tvalue={this.state.inUse}\r\n                                onChange={this.handleCheckbox}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<FormControl.Feedback />\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</Modal.Body>\r\n\r\n\t\t\t\t<Modal.Footer>\r\n                    {this.state.error && <Alert bsStyle='danger'>{this.state.errorMsg}</Alert>}\r\n\t\t\t\t\t<Button onClick={this.cancel}>Cancel</Button>\r\n\t\t\t\t\t<Button onClick={this.submit} bsStyle=\"primary\">Create</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddActivityModal;\r\n","import React from 'react';\r\nimport ReactCollapsingTable from 'react-collapsing-table';\r\nimport { httpGet, httpPatch, domain, protocol } from './Helpers';\r\nimport ShiftDownButton from './ShiftDownButton';\r\nimport ShiftUpButton from './ShiftUpButton';\r\nimport ShowActivityCheckbox from './ShowActivityCheckbox';\r\nimport { Button, ButtonToolbar } from 'react-bootstrap';\r\nimport AddActivityModal from './AddActivityModal';\r\n\r\nclass Activities extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activities: [],\r\n            showModal: false\r\n        };\r\n\r\n        this.patchActivityOrder = this.patchActivityOrder.bind(this);\r\n        this.createNewActivity = this.createNewActivity.bind(this);\r\n        this.swapOrder = this.swapOrder.bind(this);\r\n        this.updateCheckbox = this.updateCheckbox.bind(this);\r\n        this.getDataTypeName = this.getDataTypeName.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const activities = await httpGet(`${protocol}://${domain}/api/activities/`);\r\n            this.setState({\r\n                activities\r\n            });\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    createNewActivity(activity) {\r\n        return {\r\n            activity_id: activity.activity_id,\r\n            type: activity.type,\r\n            ordering: activity.ordering,\r\n            is_showing: activity.is_showing,\r\n            name: activity.name\r\n        };\r\n    }\r\n\r\n    patchActivityOrder(id1, id2) {\r\n        let { activities } = this.state;\r\n        let self = this;\r\n        let body = { activity_id1: id1, activity_id2: id2 };\r\n        httpPatch(`${protocol}://${domain}/api/activities/`, body)\r\n        .then(function (result) {\r\n            if ('error' in result) {\r\n                result.response.then(function(response) {alert(`Error: ${response.error}`)});\r\n                } else {\r\n                    let activity1 = result[0];\r\n                    let activity2 = result[1];\r\n                    if (activity1 && activity2) {\r\n                        activities = activities.filter(item => item.activity_id !== activity1.activity_id);\r\n                        activities = activities.filter(item => item.activity_id !== activity2.activity_id);\r\n                        activities.push(self.createNewActivity(activity1));\r\n                        activities.push(self.createNewActivity(activity2));\r\n                    }\r\n                    self.setState({\r\n                        activities\r\n                    });\r\n                }\r\n            });\r\n    }\r\n\r\n    swapOrder(ordering, direction) {\r\n        let { activities } = this.state;\r\n        if (ordering !== null && direction === 'up' && ordering > 1) {\r\n            let activity1 = activities.find(item => item.ordering === ordering);\r\n            let activity2 = activities.find(item => item.ordering === ordering - 1);\r\n            this.patchActivityOrder(activity1.activity_id, activity2.activity_id);\r\n        } else if (ordering !== null && direction === 'down' && ordering < activities.length) {\r\n            let activity1 = activities.find(item => item.ordering === ordering);\r\n            let activity2 = activities.find(item => item.ordering === ordering + 1);\r\n            this.patchActivityOrder(activity1.activity_id, activity2.activity_id);\r\n        }\r\n    }\r\n\r\n    updateCheckbox(activity=null) {\r\n        let self = this;\r\n        let { activities } = self.state;\r\n        if (activity !== null) {\r\n            activities = activities.filter(item => item.activity_id !== activity.activity_id);\r\n            activities.push(this.createNewActivity(activity));\r\n        }\r\n        self.setState({\r\n            activities\r\n        });\r\n    }\r\n\r\n    getDataTypeName(type) {\r\n        if (type === 'boolean') {\r\n            return 'Checkbox';\r\n        } else if (type === 'string') {\r\n            return 'Text';\r\n        } else if (type === 'float') {\r\n            return 'Number';\r\n        }\r\n        return type;\r\n    }\r\n\r\n    handleChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState(prevstate => {\r\n            const newState = { ...prevstate };\r\n            newState[name] = value;\r\n            return newState;\r\n        });\r\n    };\r\n\r\n    openModal() {\r\n        this.setState({showModal: true});\r\n    }\r\n\r\n    closeModal(activity=null) {\r\n        const { activities } = this.state;\r\n        if (activity !== null) {\r\n            activities.push(this.createNewActivity(activity));\r\n        }\r\n        this.setState({showModal: false, activities: activities});\r\n    }\r\n\r\n    render() {\r\n        const rows = this.state.activities.map(activity =>\r\n            (\r\n               {\r\n                   name: activity.name,\r\n                   ordering: activity.ordering,\r\n                   is_showing: activity.is_showing,\r\n                   activity_id: activity.activity_id,\r\n                   type: activity.type,\r\n                   type_name: this.getDataTypeName(activity.type)\r\n               }\r\n           )\r\n        ).sort((a, b) => {\r\n            return a.ordering - b.ordering;\r\n        });\r\n\r\n        const columns = [\r\n            {\r\n                accessor: 'name',\r\n                label: 'Activity',\r\n                priorityLevel: 1,\r\n                position: 1,\r\n                minWidth: 100,\r\n                sortable: false\r\n            },\r\n            {\r\n                accessor: 'type_name',\r\n                label: 'Data Type',\r\n                priorityLevel: 2,\r\n                position: 2,\r\n                minWidth: 100,\r\n                sortable: false\r\n            },\r\n            {\r\n                accessor: 'is_showing',\r\n                label: 'Currently in Use',\r\n                priorityLevel: 3,\r\n                position: 3,\r\n                CustomComponent: ShowActivityCheckbox,\r\n                minWidth: 50,\r\n                sortable: false\r\n            },\r\n            {\r\n                accessor: 'up',\r\n                label: '',\r\n                priorityLevel: 4,\r\n                position: 4,\r\n                CustomComponent: ShiftUpButton,\r\n                minWidth: 100,\r\n                sortable: false\r\n            },\r\n            { \r\n                accessor: 'down',\r\n                label: '',\r\n                priorityLevel: 5,\r\n                position: 5,\r\n                CustomComponent: ShiftDownButton,\r\n                minWidth: 50,\r\n                sortable: false, \r\n            }\r\n        ];\r\n        const tableCallbacks = { up: this.swapOrder, down: this.swapOrder, is_showing: this.updateCheckbox }\r\n        return (\r\n            <div className=\"content\">\r\n                <h1>Programming</h1>\r\n                <ButtonToolbar style={{ float: 'right'}}>\r\n                    <Button onClick={this.openModal}>New Activity</Button>\r\n                </ButtonToolbar>\r\n                <AddActivityModal show={this.state.showModal}\r\n                    lastOrdering={this.state.activities.length}\r\n                    onSubmit={this.closeModal} />\r\n                <ReactCollapsingTable\r\n                        rows = { rows }\r\n                        columns = { columns }\r\n                        column = {'name'}\r\n                        direction = {'descending'}\r\n                        showPagination={ true }\r\n                        callbacks = { tableCallbacks }\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Activities;","import React from 'react';\r\nimport { Alert, Button, ControlLabel, FormControl, FormGroup, Modal } from 'react-bootstrap';\r\nimport { httpPost, domain, protocol } from './Helpers';\r\n\r\nclass AddStudentFieldModal extends React.Component {\r\n    \r\n    constructor(props) {\r\n\t\tsuper(props)\r\n\t\t\r\n        this.state = {\r\n            show: false,\r\n            name: '',\r\n            type: 'str',\r\n            inUse: true,\r\n            quickAdd: false,\r\n            error: false,\r\n            errorMsg: ''\r\n\t\t}\r\n\t\t\r\n\t\tthis.cancel = this.cancel.bind(this);\r\n\t\tthis.submit = this.submit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.validateInput = this.validateInput.bind(this);\r\n        this.handleInUseCheckbox = this.handleInUseCheckbox.bind(this);\r\n        this.handleQuickAddCheckbox = this.handleQuickAddCheckbox.bind(this);\r\n    }\r\n    \r\n    componentDidUpdate() {\r\n        if (this.props.show !== this.state.show) {\r\n            this.setState({\r\n                show: this.props.show,\r\n            });\r\n        }\r\n    }\r\n\r\n    validateInput() {\r\n\t\tconst { name } = this.state;\r\n        const regex = /^[a-z0-9.@+\\- _]+$/i;\r\n        if (name.length > 0 && regex.test(name) && this.state.type) {\r\n\t\t\treturn 'success';\r\n\t\t} else if (name.length === 0) {\r\n\t\t\treturn null;\r\n\t\t} else {\r\n\t\t\treturn 'error';\r\n\t\t}\r\n    }\r\n    \r\n    handleChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState(prevstate => {\r\n            const newState = { ...prevstate };\r\n            newState[name] = value;\r\n            return newState;\r\n        });\r\n    };\r\n\r\n\tcancel() {\r\n        this.setState({\r\n            name: '',\r\n            type: 'str',\r\n            inUse: true,\r\n            quickAdd: false,\r\n            error: false,\r\n            errorMsg: ''\r\n        });\r\n\t\tthis.props.onSubmit();\r\n\t}\r\n\r\n\tsubmit() {\r\n        const self = this;\r\n        if (self.validateInput() !== 'success') {\r\n            const errorMsg = 'Invalid input. Please check your fields and try again.'\r\n            self.setState({\r\n                error: true,\r\n                errorMsg: errorMsg\r\n            });\r\n            return;\r\n        }\r\n        let body = {\r\n            name: self.state.name,\r\n            is_showing: self.state.inUse,\r\n            quick_add: self.state.quickAdd,\r\n            type: self.state.type\r\n        }\r\n        httpPost(`${protocol}://${domain}/api/student_column/`, body)\r\n            .then(function (result) {\r\n                if ('error' in result) {\r\n                    if (result['error'] === 400) {\r\n                        const errorMsg = 'Creation failed due to invalid input. Please check your fields and try again';\r\n                        self.setState({\r\n                            error: true,\r\n                            errorMsg: errorMsg\r\n                        });\r\n                        return;\r\n                    } else {\r\n                        result.response.then(function(response) {\r\n                            self.setState({\r\n                                error: true,\r\n                                errorMsg: response.error\r\n                            });\r\n                        });\r\n                    }\r\n                } else {\r\n                    self.setState({\r\n                        name: '',\r\n                        type: 'str',\r\n                        inUse: true,\r\n                        quickAdd: false,\r\n                        error: false,\r\n                        errorMsg: ''\r\n                    });\r\n                    self.props.onSubmit(result);\r\n                }\r\n            })\r\n    }\r\n\r\n    handleInUseCheckbox = e => {\r\n        this.setState({inUse: !this.state.inUse});\r\n    }\r\n\r\n    handleQuickAddCheckbox = e => {\r\n        this.setState({quickAdd: !this.state.quickAdd});\r\n    }\r\n    \r\n    render() {\r\n        return(\r\n            <Modal show={this.props.show}>\r\n\t\t\t\t<Modal.Header>\r\n\t\t\t\t\t<Modal.Title>Create New Student Field</Modal.Title>\r\n\t\t\t\t</Modal.Header>\r\n\r\n\t\t\t\t<Modal.Body>\r\n\t\t\t\t\t<form>\r\n                        <FormGroup\r\n                            validationState={this.validateInput()}>\r\n                            <ControlLabel>Field Name</ControlLabel>\r\n                            <FormControl\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                value={this.state.name}\r\n                                placeholder=\"Field Name\"\r\n                                onChange={this.handleChange}\r\n\t\t\t\t\t\t\t/>\r\n                            <br/>\r\n                            <FormControl componentClass=\"select\" \r\n                            name=\"type\" \r\n                            onChange={this.handleChange}\r\n                            defaultValue={this.state.type}\r\n                            >\r\n                                <option value=\"date\">Date</option>\r\n                                <option value=\"str\">Text</option>\r\n                                <option value=\"int\">Number</option>\r\n                            </FormControl>\r\n\t\t\t\t\t\t\t<br/>\r\n                            <ControlLabel>Currently in Use</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"checkbox\"\r\n                                checked={this.state.inUse}\r\n\t\t\t\t\t\t\t\tvalue={this.state.inUse}\r\n                                onChange={this.handleInUseCheckbox}\r\n\t\t\t\t\t\t\t/>\r\n                            <br/>\r\n                            <ControlLabel>Show in Quick Add</ControlLabel>\r\n\t\t\t\t\t\t\t<FormControl\r\n                                type=\"checkbox\"\r\n                                checked={this.state.quickAdd}\r\n\t\t\t\t\t\t\t\tvalue={this.state.quickAdd}\r\n                                onChange={this.handleQuickAddCheckbox}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<FormControl.Feedback />\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</Modal.Body>\r\n\r\n\t\t\t\t<Modal.Footer>\r\n                    {this.state.error && <Alert bsStyle='danger'>{this.state.errorMsg}</Alert>}\r\n\t\t\t\t\t<Button onClick={this.cancel}>Cancel</Button>\r\n\t\t\t\t\t<Button onClick={this.submit} bsStyle=\"primary\">Create</Button>\r\n\t\t\t\t</Modal.Footer>\r\n\t\t\t</Modal>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddStudentFieldModal;\r\n","import React, { Component } from 'react';\r\nimport { httpPatch, domain, protocol } from './Helpers';\r\n\r\nclass StudentFieldCheckbox extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            row: {},\r\n            checked: false\r\n        }\r\n        this.toggleCheckbox = this.toggleCheckbox.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.accessor === 'is_showing') {\r\n            this.setState({ row: this.props.row, checked: this.props.row.is_showing });\r\n        } else if (this.props.accessor === 'quick_add') {\r\n            this.setState({ row: this.props.row, checked: this.props.row.quick_add });\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.row.info_id !== this.state.row.info_id) {\r\n            this.setState({ row: this.props.row });\r\n        }\r\n        if (this.props.accessor === 'is_showing' && this.props.row.is_showing !== this.state.checked) {\r\n            this.setState({ checked: this.props.row.is_showing });\r\n        } else if (this.props.accessor === 'quick_add' && this.props.row.quick_add !== this.state.checked) {\r\n            this.setState({ checked: this.props.row.quick_add });\r\n        }\r\n    }\r\n\r\n    toggleCheckbox = () => {\r\n        let self = this;\r\n        let { row } = self.state;\r\n        let body = {info_id: row.info_id};\r\n        body[self.props.accessor] = !self.state.checked;\r\n        httpPatch(`${protocol}://${domain}/api/student_column/`, body)\r\n            .then(function (result) {\r\n                if ('error' in result) {\r\n                    result.response.then(function(response) {alert(`Error: ${response.error}`)});\r\n                } else {\r\n                    const updateCheckbox = () => self.props.CustomFunction(result);\r\n                    updateCheckbox();\r\n                }\r\n            });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <span className=\"checkbox\">\r\n                <label>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        checked={this.state.checked}\r\n                        onChange={this.toggleCheckbox}\r\n                    />\r\n                </label>\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StudentFieldCheckbox;\r\n","import React from 'react';\r\nimport { Button, ButtonToolbar } from 'react-bootstrap';\r\nimport ReactCollapsingTable from 'react-collapsing-table';\r\nimport AddStudentFieldModal from './AddStudentFieldModal';\r\nimport { domain, httpGet, protocol } from './Helpers';\r\nimport StudentFieldCheckbox from './StudentFieldCheckbox';\r\n\r\nclass EditStudentFields extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fields: [],\r\n            showModal: false\r\n        };\r\n\r\n        this.createNewField = this.createNewField.bind(this);\r\n        this.updateCheckbox = this.updateCheckbox.bind(this);\r\n        this.getDataTypeName = this.getDataTypeName.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.openModal = this.openModal.bind(this);\r\n        this.closeModal = this.closeModal.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const fields = await httpGet(`${protocol}://${domain}/api/student_column/`);\r\n            this.setState({\r\n                fields\r\n            });\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    createNewField(field) {\r\n        return {\r\n            info_id: field.info_id,\r\n            is_showing: field.is_showing,\r\n            quick_add: field.quick_add,\r\n            name: field.name,\r\n            type: field.type,\r\n        };\r\n    }\r\n\r\n    updateCheckbox(field=null) {\r\n        let self = this;\r\n        let { fields } = self.state;\r\n        if (field !== null) {\r\n            fields = fields.filter(item => item.info_id !== field.info_id);\r\n            fields.push(this.createNewField(field));\r\n        }\r\n        self.setState({\r\n            fields\r\n        });\r\n    }\r\n\r\n    getDataTypeName(type) {\r\n        if (type === 'date') {\r\n            return 'Date';\r\n        } else if (type === 'str') {\r\n            return 'Text';\r\n        } else if (type === 'int') {\r\n            return 'Number';\r\n        }\r\n        return type;\r\n    }\r\n\r\n    handleChange = e => {\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        this.setState(prevstate => {\r\n            const newState = { ...prevstate };\r\n            newState[name] = value;\r\n            return newState;\r\n        });\r\n    };\r\n\r\n    openModal() {\r\n        this.setState({showModal: true});\r\n    }\r\n\r\n    closeModal(field=null) {\r\n        const { fields } = this.state;\r\n        if (field !== null) {\r\n            fields.push(this.createNewField(field));\r\n        }\r\n        this.setState({showModal: false, fields: fields});\r\n    }\r\n\r\n    render() {\r\n        const rows = this.state.fields.map(field =>\r\n            (\r\n               {\r\n                   name: field.name,\r\n                   is_showing: field.is_showing,\r\n                   info_id: field.info_id,\r\n                   type: field.type,\r\n                   type_name: this.getDataTypeName(field.type),\r\n                   quick_add: field.quick_add\r\n               }\r\n           )\r\n        ).sort((a, b) => {\r\n            return a.name.localeCompare(b.name);\r\n        });\r\n\r\n        const columns = [\r\n            {\r\n                accessor: 'name',\r\n                label: 'Field',\r\n                priorityLevel: 1,\r\n                position: 1,\r\n                minWidth: 100,\r\n                sortable: false\r\n            },\r\n            {\r\n                accessor: 'type_name',\r\n                label: 'Data Type',\r\n                priorityLevel: 2,\r\n                position: 2,\r\n                minWidth: 100,\r\n                sortable: false\r\n            },\r\n            {\r\n                accessor: 'is_showing',\r\n                label: 'Currently in Use',\r\n                priorityLevel: 3,\r\n                position: 3,\r\n                CustomComponent: StudentFieldCheckbox,\r\n                minWidth: 50,\r\n                sortable: false\r\n            },\r\n            {\r\n                accessor: 'quick_add',\r\n                label: 'Show in Quick Add',\r\n                priorityLevel: 4,\r\n                position: 4,\r\n                CustomComponent: StudentFieldCheckbox,\r\n                minWidth: 50,\r\n                sortable: false\r\n            },\r\n        ];\r\n        const tableCallbacks = { is_showing: this.updateCheckbox, quick_add: this.updateCheckbox }\r\n        return (\r\n            <div className=\"content\">\r\n                <h1>Student Profile Fields</h1>\r\n                <ButtonToolbar style={{ float: 'right'}}>\r\n                    <Button onClick={this.openModal}>New Student Profile Field</Button>\r\n                </ButtonToolbar>\r\n                <AddStudentFieldModal show={this.state.showModal}\r\n                    onSubmit={this.closeModal} />\r\n                <br/>\r\n                <br/>\r\n                <br/>\r\n                <ReactCollapsingTable\r\n                        rows = { rows }\r\n                        columns = { columns }\r\n                        column = {'name'}\r\n                        direction = {'descending'}\r\n                        showPagination={ true }\r\n                        callbacks = { tableCallbacks }\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditStudentFields;","import React from 'react';\r\nimport { Tabs, Tab } from 'react-bootstrap';\r\nimport Users from './Users';\r\nimport Roles from './Roles';\r\nimport StudentKeys from './StudentKeys';\r\nimport Activities from './Activities';\r\nimport EditStudentFields from './EditStudentFields';\r\nimport { getPermissions } from './Helpers';\r\n\r\nclass AdminTabs extends React.Component {\r\n    constructor(props, context) {\r\n      super(props, context);\r\n  \r\n      this.handleSelect = this.handleSelect.bind(this);\r\n      this.toggleRefreshRoles = this.toggleRefreshRoles.bind(this);\r\n      this.state = {\r\n        refreshRoles: false,\r\n        key: 1\r\n      };\r\n    }\r\n  \r\n    handleSelect(key) {\r\n      this.setState({ key });\r\n    }\r\n\r\n    toggleRefreshRoles(boolean) {\r\n      this.setState({ refreshRoles: boolean });\r\n    }\r\n  \r\n    render() {\r\n      let tabs = [];\r\n      let counter = 1;\r\n      const permissions = getPermissions()\r\n      if (permissions.indexOf('view_user') >= 0) {\r\n        tabs.push(<Tab key={counter} eventKey={counter} title=\"User Management\">\r\n          <Users toggleRefreshRoles={this.toggleRefreshRoles} refreshRoles={this.state.refreshRoles} />\r\n        </Tab>)\r\n        counter++;\r\n      }\r\n      if (permissions.indexOf('view_group') >= 0) {\r\n        tabs.push(<Tab key={counter} eventKey={counter} title=\"User Roles\">\r\n          <Roles toggleRefreshRoles={this.toggleRefreshRoles} />\r\n        </Tab>)\r\n        counter++;\r\n      }\r\n      if (permissions.indexOf('change_activity') >= 0 || permissions.indexOf('add_activity') >= 0) {\r\n        tabs.push(<Tab key={counter} eventKey={counter} title=\"Programming\">\r\n          <Activities />\r\n        </Tab>)\r\n        counter++;\r\n      }\r\n      if (permissions.indexOf('change_studentcolumn') >= 0 || permissions.indexOf('add_studentcolumn') >= 0) {\r\n        tabs.push(<Tab key={counter} eventKey={counter} title=\"Student Profile Fields\">\r\n          <EditStudentFields />\r\n        </Tab>)\r\n        counter++;\r\n      }\r\n      if (permissions.indexOf('change_cityspanstudents') >= 0) {\r\n        tabs.push(<Tab key={counter} eventKey={counter} title=\"Student Key Management\">\r\n          <StudentKeys />\r\n        </Tab>)\r\n        counter++;\r\n      }\r\n      return (\r\n        <Tabs\r\n          activeKey={this.state.key}\r\n          onSelect={this.handleSelect}\r\n          id=\"admin-tabs\"\r\n        >\r\n          {tabs}\r\n        </Tabs>\r\n      );\r\n    }\r\n  }\r\n  \r\nexport default AdminTabs;","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport AdminTabs from '../components/AdminTabs';\r\nimport { getPermissions } from '../components/Helpers';\r\n\r\nclass Admin extends React.Component {\r\n\r\n    render() {\r\n        const permissions = getPermissions();\r\n        if (permissions.indexOf('view_user') >= 0 || permissions.indexOf('view_group') >= 0 ||\r\n            permissions.indexOf('change_activity') >= 0 || permissions.indexOf('add_activity') >= 0 || \r\n            permissions.indexOf('change_studentcolumn') >= 0 || permissions.indexOf('add_studentcolumn') >= 0) {\r\n            return (\r\n                <div className='content'>\r\n                    <AdminTabs />\r\n                </div>\r\n            );\r\n        } else {\r\n            return (<Redirect to='/attendance'/>);\r\n        }\r\n    }\r\n}\r\n\r\nexport default Admin;","import React from 'react';\r\nimport  { Link } from 'react-router-dom';\r\nimport { Jumbotron } from 'react-bootstrap';\r\n\r\nclass NotFound extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className='content'>\r\n                <Jumbotron> \r\n                    <div className='content-jumbotron'>\r\n                        <h1>\r\n                            404 <small>page not found</small>\r\n                        </h1>\r\n                        <p>\r\n                            The page you're looking for has mysteriously disappeared! \r\n                            Try navigating from <Link to='/attendance'>the home page</Link> to take another look.\r\n                        </p>\r\n                    </div>\r\n                </Jumbotron>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NotFound;","import React from 'react';\r\nimport { Route, Switch, withRouter } from 'react-router';\r\nimport Layout from './Layout';\r\nimport Login from '../views/Login';\r\nimport Attendance from '../views/Attendance';\r\nimport Students from '../views/Students';\r\nimport Reports from '../views/Reports';\r\nimport Admin from '../views/Admin';\r\nimport NotFound from '../views/NotFound';\r\nimport { checkCredentials } from './Helpers';\r\n\r\nclass Router extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <Layout show={this.props.location.pathname !== '/'}>\r\n                <Switch>\r\n                    <Route exact path='/' component={Login}/>\r\n                    <Route exact path='/attendance' render={() => checkCredentials(Attendance)}/>\r\n                    <Route path='/students' component={(props) => checkCredentials(Students)}/> {/* Referencing the component this way causes a re-mount every time the NavBar button is clicked, which solves our problem of refreshing the page but costs some performance in teh frontend and calls to the database */}\r\n                    <Route path='/reports' render={() => checkCredentials(Reports)}/>\r\n                    <Route path='/admin' render={() => checkCredentials(Admin)}/>\r\n                    <Route render={() => checkCredentials(NotFound)}/>\r\n                </Switch>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Router);","import React, { Component } from 'react';\r\nimport Router from './components/Router';\r\nimport { history } from './components/Helpers'\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Router history={history}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>, \r\n    document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}